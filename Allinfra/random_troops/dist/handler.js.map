{"version":3,"file":"handler.js","mappings":"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C,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAA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,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAOzvDmiC,EAAO1B,QAAUA,E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","sources":["webpack://random_troops/./node_modules/class-validator/esm5/metadata/ValidationMetadata.js","webpack://random_troops/./node_modules/class-validator/esm5/validation-schema/ValidationSchemaToMetadataTransformer.js","webpack://random_troops/./node_modules/class-validator/esm5/utils/get-global.util.js","webpack://random_troops/./node_modules/class-validator/esm5/utils/is-promise.util.js","webpack://random_troops/./node_modules/class-validator/esm5/metadata/MetadataStorage.js","webpack://random_troops/./node_modules/class-validator/esm5/validation/ValidationError.js","webpack://random_troops/./node_modules/class-validator/esm5/validation/ValidationTypes.js","webpack://random_troops/./node_modules/class-validator/esm5/validation/ValidationUtils.js","webpack://random_troops/./node_modules/class-validator/esm5/container.js","webpack://random_troops/./node_modules/class-validator/esm5/validation/ValidationExecutor.js","webpack://random_troops/./node_modules/class-validator/esm5/utils/convert-to-array.util.js","webpack://random_troops/./node_modules/class-validator/esm5/validation/Validator.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/Allow.js","webpack://random_troops/./node_modules/class-validator/esm5/metadata/ConstraintMetadata.js","webpack://random_troops/./node_modules/class-validator/esm5/register-decorator.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/ValidateBy.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsDefined.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsOptional.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/Validate.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/ValidateIf.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/ValidateNested.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/ValidatePromise.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsLatLong.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsLatitude.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsLongitude.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/Equals.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/NotEquals.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsEmpty.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsNotEmpty.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsIn.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/common/IsNotIn.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/number/IsDivisibleBy.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/number/IsPositive.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/number/IsNegative.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/number/Max.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/number/Min.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/date/MinDate.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/date/MaxDate.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/Contains.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/NotContains.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsAlpha.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsAlphanumeric.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsDecimal.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsAscii.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsBase64.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsByteLength.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsCreditCard.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsCurrency.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsEmail.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsFQDN.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsFullWidth.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsHalfWidth.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsVariableWidth.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsHexColor.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsHexadecimal.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/ValidationOptions.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsMacAddress.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsIP.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsPort.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsISBN.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsISIN.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsISO8601.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsJSON.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsJWT.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsLowercase.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsMobilePhone.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsISO31661Alpha2.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsISO31661Alpha3.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsMongoId.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsMultibyte.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsSurrogatePair.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsUrl.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsUUID.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsFirebasePushId.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsUppercase.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/Length.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/MaxLength.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/MinLength.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/Matches.js","webpack://random_troops/./node_modules/libphonenumber-js/metadata.min.json.js","webpack://random_troops/./node_modules/libphonenumber-js/min/metadata.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/ParseError.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/constants.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/tools/semver-compare.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/metadata.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/extension/createExtensionPattern.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/isViablePhoneNumber.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/extension/extractExtension.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/parseDigits.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/checkNumberLength.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/mergeArrays.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/isPossibleNumber_.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/RFC3966.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/matchesEntirely.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/getNumberType.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/validate_.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/applyInternationalSeparatorStyle.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/formatNationalNumberUsingFormat.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/getIddPrefix.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/format_.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/PhoneNumber.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/stripIddPrefix.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/extractNationalNumber.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCode.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/helpers/getCountryByCallingCode.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/parse_.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/parsePhoneNumber_.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/parsePhoneNumber.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/parsePhoneNumberFromString_.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/parsePhoneNumberFromString.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findNumbers/LRUCache.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findNumbers/RegExpCache.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findNumbers/util.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findNumbers/utf-8.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findNumbers/Leniency.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findNumbers/parsePreCandidate.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findNumbers/isValidPreCandidate.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findNumbers/isValidCandidate.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/PhoneNumberMatcher.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/AsYouTypeState.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/AsYouTypeFormatter.util.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/AsYouTypeFormatter.complete.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/AsYouTypeFormatter.PatternMatcher.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/AsYouTypeFormatter.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/AsYouTypeParser.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/AsYouType.js","webpack://random_troops/./node_modules/libphonenumber-js/min/exports/PhoneNumberMatcher.js","webpack://random_troops/./node_modules/libphonenumber-js/min/exports/AsYouType.js","webpack://random_troops/./node_modules/libphonenumber-js/min/exports/Metadata.js","webpack://random_troops/./node_modules/libphonenumber-js/es6/findPhoneNumbers_.js","webpack://random_troops/./node_modules/libphonenumber-js/index.es6.exports/PhoneNumberSearch.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsPhoneNumber.js","webpack://random_troops/./node_modules/libphonenumber-js/min/exports/parsePhoneNumberFromString.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsMilitaryTime.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsHash.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsISSN.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsDateString.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsBooleanString.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsNumberString.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsBase32.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsBIC.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsBtcAddress.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsDataURI.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsEAN.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsEthereumAddress.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsHSL.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsIBAN.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsIdentityCard.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsISRC.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsLocale.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsMagnetURI.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsMimeType.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsOctal.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsPassportNumber.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsPostalCode.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsRFC3339.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsRgbColor.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/string/IsSemVer.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/typechecker/IsBoolean.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/typechecker/IsDate.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/typechecker/IsNumber.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/typechecker/IsEnum.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/typechecker/IsInt.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/typechecker/IsString.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/typechecker/IsArray.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/typechecker/IsObject.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/array/ArrayContains.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/array/ArrayNotContains.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/array/ArrayNotEmpty.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/array/ArrayMinSize.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/array/ArrayMaxSize.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/array/ArrayUnique.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/object/IsNotEmptyObject.js","webpack://random_troops/./node_modules/class-validator/esm5/decorator/object/IsInstance.js","webpack://random_troops/./node_modules/class-validator/esm5/index.js","webpack://random_troops/./src/controller/controller.ts","webpack://random_troops/./src/main.ts","webpack://random_troops/./node_modules/validator/lib/alpha.js","webpack://random_troops/./node_modules/validator/lib/contains.js","webpack://random_troops/./node_modules/validator/lib/isAlpha.js","webpack://random_troops/./node_modules/validator/lib/isAlphanumeric.js","webpack://random_troops/./node_modules/validator/lib/isAscii.js","webpack://random_troops/./node_modules/validator/lib/isBIC.js","webpack://random_troops/./node_modules/validator/lib/isBase32.js","webpack://random_troops/./node_modules/validator/lib/isBase64.js","webpack://random_troops/./node_modules/validator/lib/isBoolean.js","webpack://random_troops/./node_modules/validator/lib/isBtcAddress.js","webpack://random_troops/./node_modules/validator/lib/isByteLength.js","webpack://random_troops/./node_modules/validator/lib/isCreditCard.js","webpack://random_troops/./node_modules/validator/lib/isCurrency.js","webpack://random_troops/./node_modules/validator/lib/isDataURI.js","webpack://random_troops/./node_modules/validator/lib/isDecimal.js","webpack://random_troops/./node_modules/validator/lib/isDivisibleBy.js","webpack://random_troops/./node_modules/validator/lib/isEAN.js","webpack://random_troops/./node_modules/validator/lib/isEmail.js","webpack://random_troops/./node_modules/validator/lib/isEthereumAddress.js","webpack://random_troops/./node_modules/validator/lib/isFQDN.js","webpack://random_troops/./node_modules/validator/lib/isFloat.js","webpack://random_troops/./node_modules/validator/lib/isFullWidth.js","webpack://random_troops/./node_modules/validator/lib/isHSL.js","webpack://random_troops/./node_modules/validator/lib/isHalfWidth.js","webpack://random_troops/./node_modules/validator/lib/isHash.js","webpack://random_troops/./node_modules/validator/lib/isHexColor.js","webpack://random_troops/./node_modules/validator/lib/isHexadecimal.js","webpack://random_troops/./node_modules/validator/lib/isIBAN.js","webpack://random_troops/./node_modules/validator/lib/isIP.js","webpack://random_troops/./node_modules/validator/lib/isISBN.js","webpack://random_troops/./node_modules/validator/lib/isISIN.js","webpack://random_troops/./node_modules/validator/lib/isISO31661Alpha2.js","webpack://random_troops/./node_modules/validator/lib/isISO31661Alpha3.js","webpack://random_troops/./node_modules/validator/lib/isISO8601.js","webpack://random_troops/./node_modules/validator/lib/isISRC.js","webpack://random_troops/./node_modules/validator/lib/isISSN.js","webpack://random_troops/./node_modules/validator/lib/isIdentityCard.js","webpack://random_troops/./node_modules/validator/lib/isInt.js","webpack://random_troops/./node_modules/validator/lib/isJSON.js","webpack://random_troops/./node_modules/validator/lib/isJWT.js","webpack://random_troops/./node_modules/validator/lib/isLatLong.js","webpack://random_troops/./node_modules/validator/lib/isLength.js","webpack://random_troops/./node_modules/validator/lib/isLocale.js","webpack://random_troops/./node_modules/validator/lib/isLowercase.js","webpack://random_troops/./node_modules/validator/lib/isMACAddress.js","webpack://random_troops/./node_modules/validator/lib/isMagnetURI.js","webpack://random_troops/./node_modules/validator/lib/isMimeType.js","webpack://random_troops/./node_modules/validator/lib/isMobilePhone.js","webpack://random_troops/./node_modules/validator/lib/isMongoId.js","webpack://random_troops/./node_modules/validator/lib/isMultibyte.js","webpack://random_troops/./node_modules/validator/lib/isNumeric.js","webpack://random_troops/./node_modules/validator/lib/isOctal.js","webpack://random_troops/./node_modules/validator/lib/isPassportNumber.js","webpack://random_troops/./node_modules/validator/lib/isPort.js","webpack://random_troops/./node_modules/validator/lib/isPostalCode.js","webpack://random_troops/./node_modules/validator/lib/isRFC3339.js","webpack://random_troops/./node_modules/validator/lib/isRgbColor.js","webpack://random_troops/./node_modules/validator/lib/isSemVer.js","webpack://random_troops/./node_modules/validator/lib/isSurrogatePair.js","webpack://random_troops/./node_modules/validator/lib/isURL.js","webpack://random_troops/./node_modules/validator/lib/isUUID.js","webpack://random_troops/./node_modules/validator/lib/isUppercase.js","webpack://random_troops/./node_modules/validator/lib/isVariableWidth.js","webpack://random_troops/./node_modules/validator/lib/matches.js","webpack://random_troops/./node_modules/validator/lib/toFloat.js","webpack://random_troops/./node_modules/validator/lib/util/assertString.js","webpack://random_troops/./node_modules/validator/lib/util/includes.js","webpack://random_troops/./node_modules/validator/lib/util/merge.js","webpack://random_troops/./node_modules/validator/lib/util/multilineRegex.js","webpack://random_troops/./node_modules/validator/lib/util/toString.js","webpack://random_troops/webpack/bootstrap","webpack://random_troops/webpack/runtime/compat get default export","webpack://random_troops/webpack/runtime/define property getters","webpack://random_troops/webpack/runtime/hasOwnProperty shorthand","webpack://random_troops/webpack/runtime/make namespace object","webpack://random_troops/webpack/startup"],"sourcesContent":["/**\n * This metadata contains validation rules.\n */\nvar ValidationMetadata = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ValidationMetadata(args) {\n        /**\n         * Validation groups used for this validation.\n         */\n        this.groups = [];\n        /**\n         * Specifies if validated value is an array and each of its item must be validated.\n         */\n        this.each = false;\n        /*\n         * A transient set of data passed through to the validation result for response mapping\n         */\n        this.context = undefined;\n        this.type = args.type;\n        this.target = args.target;\n        this.propertyName = args.propertyName;\n        this.constraints = args.constraints;\n        this.constraintCls = args.constraintCls;\n        this.validationTypeOptions = args.validationTypeOptions;\n        if (args.validationOptions) {\n            this.message = args.validationOptions.message;\n            this.groups = args.validationOptions.groups;\n            this.always = args.validationOptions.always;\n            this.each = args.validationOptions.each;\n            this.context = args.validationOptions.context;\n        }\n    }\n    return ValidationMetadata;\n}());\nexport { ValidationMetadata };\n//# sourceMappingURL=ValidationMetadata.js.map","import { ValidationMetadata } from '../metadata/ValidationMetadata';\n/**\n * Used to transform validation schemas to validation metadatas.\n */\nvar ValidationSchemaToMetadataTransformer = /** @class */ (function () {\n    function ValidationSchemaToMetadataTransformer() {\n    }\n    ValidationSchemaToMetadataTransformer.prototype.transform = function (schema) {\n        var metadatas = [];\n        Object.keys(schema.properties).forEach(function (property) {\n            schema.properties[property].forEach(function (validation) {\n                var validationOptions = {\n                    message: validation.message,\n                    groups: validation.groups,\n                    always: validation.always,\n                    each: validation.each,\n                };\n                var args = {\n                    type: validation.type,\n                    target: schema.name,\n                    propertyName: property,\n                    constraints: validation.constraints,\n                    validationTypeOptions: validation.options,\n                    validationOptions: validationOptions,\n                };\n                metadatas.push(new ValidationMetadata(args));\n            });\n        });\n        return metadatas;\n    };\n    return ValidationSchemaToMetadataTransformer;\n}());\nexport { ValidationSchemaToMetadataTransformer };\n//# sourceMappingURL=ValidationSchemaToMetadataTransformer.js.map","/**\n * This function returns the global object across Node and browsers.\n *\n * Note: `globalThis` is the standardized approach however it has been added to\n * Node.js in version 12. We need to include this snippet until Node 12 EOL.\n */\nexport function getGlobal() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'window'.\n    if (typeof window !== 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Cannot find name 'window'.\n        return window;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'self'.\n    if (typeof self !== 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Cannot find name 'self'.\n        return self;\n    }\n}\n//# sourceMappingURL=get-global.util.js.map","// https://github.com/TylorS/typed-is-promise/blob/abf1514e1b6961adfc75765476b0debb96b2c3ae/src/index.ts\nexport function isPromise(p) {\n    return p !== null && typeof p === 'object' && typeof p.then === 'function';\n}\n//# sourceMappingURL=is-promise.util.js.map","import { ValidationSchemaToMetadataTransformer } from '../validation-schema/ValidationSchemaToMetadataTransformer';\nimport { getGlobal } from '../utils';\n/**\n * Storage all metadatas.\n */\nvar MetadataStorage = /** @class */ (function () {\n    function MetadataStorage() {\n        // -------------------------------------------------------------------------\n        // Private properties\n        // -------------------------------------------------------------------------\n        this.validationMetadatas = [];\n        this.constraintMetadatas = [];\n    }\n    Object.defineProperty(MetadataStorage.prototype, \"hasValidationMetaData\", {\n        get: function () {\n            return !!this.validationMetadatas.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Adds a new validation metadata.\n     */\n    MetadataStorage.prototype.addValidationSchema = function (schema) {\n        var _this = this;\n        var validationMetadatas = new ValidationSchemaToMetadataTransformer().transform(schema);\n        validationMetadatas.forEach(function (validationMetadata) { return _this.addValidationMetadata(validationMetadata); });\n    };\n    /**\n     * Adds a new validation metadata.\n     */\n    MetadataStorage.prototype.addValidationMetadata = function (metadata) {\n        this.validationMetadatas.push(metadata);\n    };\n    /**\n     * Adds a new constraint metadata.\n     */\n    MetadataStorage.prototype.addConstraintMetadata = function (metadata) {\n        this.constraintMetadatas.push(metadata);\n    };\n    /**\n     * Groups metadata by their property names.\n     */\n    MetadataStorage.prototype.groupByPropertyName = function (metadata) {\n        var grouped = {};\n        metadata.forEach(function (metadata) {\n            if (!grouped[metadata.propertyName])\n                grouped[metadata.propertyName] = [];\n            grouped[metadata.propertyName].push(metadata);\n        });\n        return grouped;\n    };\n    /**\n     * Gets all validation metadatas for the given object with the given groups.\n     */\n    MetadataStorage.prototype.getTargetValidationMetadatas = function (targetConstructor, targetSchema, always, strictGroups, groups) {\n        var includeMetadataBecauseOfAlwaysOption = function (metadata) {\n            // `metadata.always` overrides global default.\n            if (typeof metadata.always !== 'undefined')\n                return metadata.always;\n            // `metadata.groups` overrides global default.\n            if (metadata.groups && metadata.groups.length)\n                return false;\n            // Use global default.\n            return always;\n        };\n        var excludeMetadataBecauseOfStrictGroupsOption = function (metadata) {\n            if (strictGroups) {\n                // Validation is not using groups.\n                if (!groups || !groups.length) {\n                    // `metadata.groups` has at least one group.\n                    if (metadata.groups && metadata.groups.length)\n                        return true;\n                }\n            }\n            return false;\n        };\n        // get directly related to a target metadatas\n        var originalMetadatas = this.validationMetadatas.filter(function (metadata) {\n            if (metadata.target !== targetConstructor && metadata.target !== targetSchema)\n                return false;\n            if (includeMetadataBecauseOfAlwaysOption(metadata))\n                return true;\n            if (excludeMetadataBecauseOfStrictGroupsOption(metadata))\n                return false;\n            if (groups && groups.length > 0)\n                return metadata.groups && !!metadata.groups.find(function (group) { return groups.indexOf(group) !== -1; });\n            return true;\n        });\n        // get metadatas for inherited classes\n        var inheritedMetadatas = this.validationMetadatas.filter(function (metadata) {\n            // if target is a string it's means we validate against a schema, and there is no inheritance support for schemas\n            if (typeof metadata.target === 'string')\n                return false;\n            if (metadata.target === targetConstructor)\n                return false;\n            if (metadata.target instanceof Function && !(targetConstructor.prototype instanceof metadata.target))\n                return false;\n            if (includeMetadataBecauseOfAlwaysOption(metadata))\n                return true;\n            if (excludeMetadataBecauseOfStrictGroupsOption(metadata))\n                return false;\n            if (groups && groups.length > 0)\n                return metadata.groups && !!metadata.groups.find(function (group) { return groups.indexOf(group) !== -1; });\n            return true;\n        });\n        // filter out duplicate metadatas, prefer original metadatas instead of inherited metadatas\n        var uniqueInheritedMetadatas = inheritedMetadatas.filter(function (inheritedMetadata) {\n            return !originalMetadatas.find(function (originalMetadata) {\n                return (originalMetadata.propertyName === inheritedMetadata.propertyName &&\n                    originalMetadata.type === inheritedMetadata.type);\n            });\n        });\n        return originalMetadatas.concat(uniqueInheritedMetadatas);\n    };\n    /**\n     * Gets all validator constraints for the given object.\n     */\n    MetadataStorage.prototype.getTargetValidatorConstraints = function (target) {\n        return this.constraintMetadatas.filter(function (metadata) { return metadata.target === target; });\n    };\n    return MetadataStorage;\n}());\nexport { MetadataStorage };\n/**\n * Gets metadata storage.\n * Metadata storage follows the best practices and stores metadata in a global variable.\n */\nexport function getMetadataStorage() {\n    var global = getGlobal();\n    if (!global.classValidatorMetadataStorage) {\n        global.classValidatorMetadataStorage = new MetadataStorage();\n    }\n    return global.classValidatorMetadataStorage;\n}\n//# sourceMappingURL=MetadataStorage.js.map","/**\n * Validation error description.\n */\nvar ValidationError = /** @class */ (function () {\n    function ValidationError() {\n    }\n    /**\n     *\n     * @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability\n     * @param hasParent true when the error is a child of an another one\n     * @param parentPath path as string to the parent of this property\n     */\n    ValidationError.prototype.toString = function (shouldDecorate, hasParent, parentPath) {\n        var _this = this;\n        if (shouldDecorate === void 0) { shouldDecorate = false; }\n        if (hasParent === void 0) { hasParent = false; }\n        if (parentPath === void 0) { parentPath = \"\"; }\n        var boldStart = shouldDecorate ? \"\\u001B[1m\" : \"\";\n        var boldEnd = shouldDecorate ? \"\\u001B[22m\" : \"\";\n        var propConstraintFailed = function (propertyName) {\n            return \" - property \".concat(boldStart).concat(parentPath).concat(propertyName).concat(boldEnd, \" has failed the following constraints: \").concat(boldStart).concat(Object.keys(_this.constraints).join(\", \")).concat(boldEnd, \" \\n\");\n        };\n        if (!hasParent) {\n            return (\"An instance of \".concat(boldStart).concat(this.target ? this.target.constructor.name : 'an object').concat(boldEnd, \" has failed the validation:\\n\") +\n                (this.constraints ? propConstraintFailed(this.property) : \"\") +\n                (this.children\n                    ? this.children.map(function (childError) { return childError.toString(shouldDecorate, true, _this.property); }).join(\"\")\n                    : \"\"));\n        }\n        else {\n            // we format numbers as array indexes for better readability.\n            var formattedProperty_1 = Number.isInteger(+this.property)\n                ? \"[\".concat(this.property, \"]\")\n                : \"\".concat(parentPath ? \".\" : \"\").concat(this.property);\n            if (this.constraints) {\n                return propConstraintFailed(formattedProperty_1);\n            }\n            else {\n                return this.children\n                    ? this.children\n                        .map(function (childError) { return childError.toString(shouldDecorate, true, \"\".concat(parentPath).concat(formattedProperty_1)); })\n                        .join(\"\")\n                    : \"\";\n            }\n        }\n    };\n    return ValidationError;\n}());\nexport { ValidationError };\n//# sourceMappingURL=ValidationError.js.map","/**\n * Validation types.\n */\nvar ValidationTypes = /** @class */ (function () {\n    function ValidationTypes() {\n    }\n    /**\n     * Checks if validation type is valid.\n     */\n    ValidationTypes.isValid = function (type) {\n        var _this = this;\n        return (type !== 'isValid' &&\n            type !== 'getMessage' &&\n            Object.keys(this)\n                .map(function (key) { return _this[key]; })\n                .indexOf(type) !== -1);\n    };\n    /* system */\n    ValidationTypes.CUSTOM_VALIDATION = 'customValidation'; // done\n    ValidationTypes.NESTED_VALIDATION = 'nestedValidation'; // done\n    ValidationTypes.PROMISE_VALIDATION = 'promiseValidation'; // done\n    ValidationTypes.CONDITIONAL_VALIDATION = 'conditionalValidation'; // done\n    ValidationTypes.WHITELIST = 'whitelistValidation'; // done\n    ValidationTypes.IS_DEFINED = 'isDefined'; // done\n    return ValidationTypes;\n}());\nexport { ValidationTypes };\n//# sourceMappingURL=ValidationTypes.js.map","/**\n * Convert the constraint to a string to be shown in an error\n */\nexport function constraintToString(constraint) {\n    if (Array.isArray(constraint)) {\n        return constraint.join(', ');\n    }\n    return \"\".concat(constraint);\n}\nvar ValidationUtils = /** @class */ (function () {\n    function ValidationUtils() {\n    }\n    ValidationUtils.replaceMessageSpecialTokens = function (message, validationArguments) {\n        var messageString;\n        if (message instanceof Function) {\n            messageString = message(validationArguments);\n        }\n        else if (typeof message === 'string') {\n            messageString = message;\n        }\n        if (messageString && Array.isArray(validationArguments.constraints)) {\n            validationArguments.constraints.forEach(function (constraint, index) {\n                messageString = messageString.replace(new RegExp(\"\\\\$constraint\".concat(index + 1), 'g'), constraintToString(constraint));\n            });\n        }\n        if (messageString &&\n            validationArguments.value !== undefined &&\n            validationArguments.value !== null &&\n            typeof validationArguments.value === 'string')\n            messageString = messageString.replace(/\\$value/g, validationArguments.value);\n        if (messageString)\n            messageString = messageString.replace(/\\$property/g, validationArguments.property);\n        if (messageString)\n            messageString = messageString.replace(/\\$target/g, validationArguments.targetName);\n        return messageString;\n    };\n    return ValidationUtils;\n}());\nexport { ValidationUtils };\n//# sourceMappingURL=ValidationUtils.js.map","/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nvar defaultContainer = new (/** @class */ (function () {\n    function class_1() {\n        this.instances = [];\n    }\n    class_1.prototype.get = function (someClass) {\n        var instance = this.instances.find(function (instance) { return instance.type === someClass; });\n        if (!instance) {\n            instance = { type: someClass, object: new someClass() };\n            this.instances.push(instance);\n        }\n        return instance.object;\n    };\n    return class_1;\n}()))();\nvar userContainer;\nvar userContainerOptions;\n/**\n * Sets container to be used by this library.\n */\nexport function useContainer(iocContainer, options) {\n    userContainer = iocContainer;\n    userContainerOptions = options;\n}\n/**\n * Gets the IOC container used by this library.\n */\nexport function getFromContainer(someClass) {\n    if (userContainer) {\n        try {\n            var instance = userContainer.get(someClass);\n            if (instance)\n                return instance;\n            if (!userContainerOptions || !userContainerOptions.fallback)\n                return instance;\n        }\n        catch (error) {\n            if (!userContainerOptions || !userContainerOptions.fallbackOnErrors)\n                throw error;\n        }\n    }\n    return defaultContainer.get(someClass);\n}\n//# sourceMappingURL=container.js.map","import { ValidationError } from './ValidationError';\nimport { ValidationTypes } from './ValidationTypes';\nimport { ValidationUtils } from './ValidationUtils';\nimport { isPromise, convertToArray } from '../utils';\nimport { getMetadataStorage } from '../metadata/MetadataStorage';\n/**\n * Executes validation over given object.\n */\nvar ValidationExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ValidationExecutor(validator, validatorOptions) {\n        this.validator = validator;\n        this.validatorOptions = validatorOptions;\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this.awaitingPromises = [];\n        this.ignoreAsyncValidations = false;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this.metadataStorage = getMetadataStorage();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    ValidationExecutor.prototype.execute = function (object, targetSchema, validationErrors) {\n        var _this = this;\n        var _a;\n        /**\n         * If there is no metadata registered it means possibly the dependencies are not flatterned and\n         * more than one instance is used.\n         *\n         * TODO: This needs proper handling, forcing to use the same container or some other proper solution.\n         */\n        if (!this.metadataStorage.hasValidationMetaData && ((_a = this.validatorOptions) === null || _a === void 0 ? void 0 : _a.enableDebugMessages) === true) {\n            console.warn(\"No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.\");\n        }\n        var groups = this.validatorOptions ? this.validatorOptions.groups : undefined;\n        var strictGroups = (this.validatorOptions && this.validatorOptions.strictGroups) || false;\n        var always = (this.validatorOptions && this.validatorOptions.always) || false;\n        var targetMetadatas = this.metadataStorage.getTargetValidationMetadatas(object.constructor, targetSchema, always, strictGroups, groups);\n        var groupedMetadatas = this.metadataStorage.groupByPropertyName(targetMetadatas);\n        if (this.validatorOptions && this.validatorOptions.forbidUnknownValues && !targetMetadatas.length) {\n            var validationError = new ValidationError();\n            if (!this.validatorOptions ||\n                !this.validatorOptions.validationError ||\n                this.validatorOptions.validationError.target === undefined ||\n                this.validatorOptions.validationError.target === true)\n                validationError.target = object;\n            validationError.value = undefined;\n            validationError.property = undefined;\n            validationError.children = [];\n            validationError.constraints = { unknownValue: 'an unknown value was passed to the validate function' };\n            validationErrors.push(validationError);\n            return;\n        }\n        if (this.validatorOptions && this.validatorOptions.whitelist)\n            this.whitelist(object, groupedMetadatas, validationErrors);\n        // General validation\n        Object.keys(groupedMetadatas).forEach(function (propertyName) {\n            var value = object[propertyName];\n            var definedMetadatas = groupedMetadatas[propertyName].filter(function (metadata) { return metadata.type === ValidationTypes.IS_DEFINED; });\n            var metadatas = groupedMetadatas[propertyName].filter(function (metadata) { return metadata.type !== ValidationTypes.IS_DEFINED && metadata.type !== ValidationTypes.WHITELIST; });\n            if (value instanceof Promise &&\n                metadatas.find(function (metadata) { return metadata.type === ValidationTypes.PROMISE_VALIDATION; })) {\n                _this.awaitingPromises.push(value.then(function (resolvedValue) {\n                    _this.performValidations(object, resolvedValue, propertyName, definedMetadatas, metadatas, validationErrors);\n                }));\n            }\n            else {\n                _this.performValidations(object, value, propertyName, definedMetadatas, metadatas, validationErrors);\n            }\n        });\n    };\n    ValidationExecutor.prototype.whitelist = function (object, groupedMetadatas, validationErrors) {\n        var _this = this;\n        var notAllowedProperties = [];\n        Object.keys(object).forEach(function (propertyName) {\n            // does this property have no metadata?\n            if (!groupedMetadatas[propertyName] || groupedMetadatas[propertyName].length === 0)\n                notAllowedProperties.push(propertyName);\n        });\n        if (notAllowedProperties.length > 0) {\n            if (this.validatorOptions && this.validatorOptions.forbidNonWhitelisted) {\n                // throw errors\n                notAllowedProperties.forEach(function (property) {\n                    var _a;\n                    var validationError = _this.generateValidationError(object, object[property], property);\n                    validationError.constraints = (_a = {}, _a[ValidationTypes.WHITELIST] = \"property \".concat(property, \" should not exist\"), _a);\n                    validationError.children = undefined;\n                    validationErrors.push(validationError);\n                });\n            }\n            else {\n                // strip non allowed properties\n                notAllowedProperties.forEach(function (property) { return delete object[property]; });\n            }\n        }\n    };\n    ValidationExecutor.prototype.stripEmptyErrors = function (errors) {\n        var _this = this;\n        return errors.filter(function (error) {\n            if (error.children) {\n                error.children = _this.stripEmptyErrors(error.children);\n            }\n            if (Object.keys(error.constraints).length === 0) {\n                if (error.children.length === 0) {\n                    return false;\n                }\n                else {\n                    delete error.constraints;\n                }\n            }\n            return true;\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    ValidationExecutor.prototype.performValidations = function (object, value, propertyName, definedMetadatas, metadatas, validationErrors) {\n        var customValidationMetadatas = metadatas.filter(function (metadata) { return metadata.type === ValidationTypes.CUSTOM_VALIDATION; });\n        var nestedValidationMetadatas = metadatas.filter(function (metadata) { return metadata.type === ValidationTypes.NESTED_VALIDATION; });\n        var conditionalValidationMetadatas = metadatas.filter(function (metadata) { return metadata.type === ValidationTypes.CONDITIONAL_VALIDATION; });\n        var validationError = this.generateValidationError(object, value, propertyName);\n        validationErrors.push(validationError);\n        var canValidate = this.conditionalValidations(object, value, conditionalValidationMetadatas);\n        if (!canValidate) {\n            return;\n        }\n        // handle IS_DEFINED validation type the special way - it should work no matter skipUndefinedProperties/skipMissingProperties is set or not\n        this.customValidations(object, value, definedMetadatas, validationError);\n        this.mapContexts(object, value, definedMetadatas, validationError);\n        if (value === undefined && this.validatorOptions && this.validatorOptions.skipUndefinedProperties === true) {\n            return;\n        }\n        if (value === null && this.validatorOptions && this.validatorOptions.skipNullProperties === true) {\n            return;\n        }\n        if ((value === null || value === undefined) &&\n            this.validatorOptions &&\n            this.validatorOptions.skipMissingProperties === true) {\n            return;\n        }\n        this.customValidations(object, value, customValidationMetadatas, validationError);\n        this.nestedValidations(value, nestedValidationMetadatas, validationError.children);\n        this.mapContexts(object, value, metadatas, validationError);\n        this.mapContexts(object, value, customValidationMetadatas, validationError);\n    };\n    ValidationExecutor.prototype.generateValidationError = function (object, value, propertyName) {\n        var validationError = new ValidationError();\n        if (!this.validatorOptions ||\n            !this.validatorOptions.validationError ||\n            this.validatorOptions.validationError.target === undefined ||\n            this.validatorOptions.validationError.target === true)\n            validationError.target = object;\n        if (!this.validatorOptions ||\n            !this.validatorOptions.validationError ||\n            this.validatorOptions.validationError.value === undefined ||\n            this.validatorOptions.validationError.value === true)\n            validationError.value = value;\n        validationError.property = propertyName;\n        validationError.children = [];\n        validationError.constraints = {};\n        return validationError;\n    };\n    ValidationExecutor.prototype.conditionalValidations = function (object, value, metadatas) {\n        return metadatas\n            .map(function (metadata) { return metadata.constraints[0](object, value); })\n            .reduce(function (resultA, resultB) { return resultA && resultB; }, true);\n    };\n    ValidationExecutor.prototype.customValidations = function (object, value, metadatas, error) {\n        var _this = this;\n        metadatas.forEach(function (metadata) {\n            _this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls).forEach(function (customConstraintMetadata) {\n                if (customConstraintMetadata.async && _this.ignoreAsyncValidations)\n                    return;\n                if (_this.validatorOptions &&\n                    _this.validatorOptions.stopAtFirstError &&\n                    Object.keys(error.constraints || {}).length > 0)\n                    return;\n                var validationArguments = {\n                    targetName: object.constructor ? object.constructor.name : undefined,\n                    property: metadata.propertyName,\n                    object: object,\n                    value: value,\n                    constraints: metadata.constraints,\n                };\n                if (!metadata.each || !(Array.isArray(value) || value instanceof Set || value instanceof Map)) {\n                    var validatedValue = customConstraintMetadata.instance.validate(value, validationArguments);\n                    if (isPromise(validatedValue)) {\n                        var promise = validatedValue.then(function (isValid) {\n                            if (!isValid) {\n                                var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata), type = _a[0], message = _a[1];\n                                error.constraints[type] = message;\n                                if (metadata.context) {\n                                    if (!error.contexts) {\n                                        error.contexts = {};\n                                    }\n                                    error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                                }\n                            }\n                        });\n                        _this.awaitingPromises.push(promise);\n                    }\n                    else {\n                        if (!validatedValue) {\n                            var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata), type = _a[0], message = _a[1];\n                            error.constraints[type] = message;\n                        }\n                    }\n                    return;\n                }\n                // convert set and map into array\n                var arrayValue = convertToArray(value);\n                // Validation needs to be applied to each array item\n                var validatedSubValues = arrayValue.map(function (subValue) {\n                    return customConstraintMetadata.instance.validate(subValue, validationArguments);\n                });\n                var validationIsAsync = validatedSubValues.some(function (validatedSubValue) {\n                    return isPromise(validatedSubValue);\n                });\n                if (validationIsAsync) {\n                    // Wrap plain values (if any) in promises, so that all are async\n                    var asyncValidatedSubValues = validatedSubValues.map(function (validatedSubValue) {\n                        return isPromise(validatedSubValue) ? validatedSubValue : Promise.resolve(validatedSubValue);\n                    });\n                    var asyncValidationIsFinishedPromise = Promise.all(asyncValidatedSubValues).then(function (flatValidatedValues) {\n                        var validationResult = flatValidatedValues.every(function (isValid) { return isValid; });\n                        if (!validationResult) {\n                            var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata), type = _a[0], message = _a[1];\n                            error.constraints[type] = message;\n                            if (metadata.context) {\n                                if (!error.contexts) {\n                                    error.contexts = {};\n                                }\n                                error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                            }\n                        }\n                    });\n                    _this.awaitingPromises.push(asyncValidationIsFinishedPromise);\n                    return;\n                }\n                var validationResult = validatedSubValues.every(function (isValid) { return isValid; });\n                if (!validationResult) {\n                    var _b = _this.createValidationError(object, value, metadata, customConstraintMetadata), type = _b[0], message = _b[1];\n                    error.constraints[type] = message;\n                }\n            });\n        });\n    };\n    ValidationExecutor.prototype.nestedValidations = function (value, metadatas, errors) {\n        var _this = this;\n        if (value === void 0) {\n            return;\n        }\n        metadatas.forEach(function (metadata) {\n            var _a;\n            if (metadata.type !== ValidationTypes.NESTED_VALIDATION && metadata.type !== ValidationTypes.PROMISE_VALIDATION) {\n                return;\n            }\n            if (Array.isArray(value) || value instanceof Set || value instanceof Map) {\n                // Treats Set as an array - as index of Set value is value itself and it is common case to have Object as value\n                var arrayLikeValue = value instanceof Set ? Array.from(value) : value;\n                arrayLikeValue.forEach(function (subValue, index) {\n                    _this.performValidations(value, subValue, index.toString(), [], metadatas, errors);\n                });\n            }\n            else if (value instanceof Object) {\n                var targetSchema = typeof metadata.target === 'string' ? metadata.target : metadata.target.name;\n                _this.execute(value, targetSchema, errors);\n            }\n            else {\n                var error = new ValidationError();\n                error.value = value;\n                error.property = metadata.propertyName;\n                error.target = metadata.target;\n                var _b = _this.createValidationError(metadata.target, value, metadata), type = _b[0], message = _b[1];\n                error.constraints = (_a = {},\n                    _a[type] = message,\n                    _a);\n                errors.push(error);\n            }\n        });\n    };\n    ValidationExecutor.prototype.mapContexts = function (object, value, metadatas, error) {\n        var _this = this;\n        return metadatas.forEach(function (metadata) {\n            if (metadata.context) {\n                var customConstraint = void 0;\n                if (metadata.type === ValidationTypes.CUSTOM_VALIDATION) {\n                    var customConstraints = _this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls);\n                    customConstraint = customConstraints[0];\n                }\n                var type = _this.getConstraintType(metadata, customConstraint);\n                if (error.constraints[type]) {\n                    if (!error.contexts) {\n                        error.contexts = {};\n                    }\n                    error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                }\n            }\n        });\n    };\n    ValidationExecutor.prototype.createValidationError = function (object, value, metadata, customValidatorMetadata) {\n        var targetName = object.constructor ? object.constructor.name : undefined;\n        var type = this.getConstraintType(metadata, customValidatorMetadata);\n        var validationArguments = {\n            targetName: targetName,\n            property: metadata.propertyName,\n            object: object,\n            value: value,\n            constraints: metadata.constraints,\n        };\n        var message = metadata.message || '';\n        if (!metadata.message &&\n            (!this.validatorOptions || (this.validatorOptions && !this.validatorOptions.dismissDefaultMessages))) {\n            if (customValidatorMetadata && customValidatorMetadata.instance.defaultMessage instanceof Function) {\n                message = customValidatorMetadata.instance.defaultMessage(validationArguments);\n            }\n        }\n        var messageString = ValidationUtils.replaceMessageSpecialTokens(message, validationArguments);\n        return [type, messageString];\n    };\n    ValidationExecutor.prototype.getConstraintType = function (metadata, customValidatorMetadata) {\n        var type = customValidatorMetadata && customValidatorMetadata.name ? customValidatorMetadata.name : metadata.type;\n        return type;\n    };\n    return ValidationExecutor;\n}());\nexport { ValidationExecutor };\n//# sourceMappingURL=ValidationExecutor.js.map","/**\n * Convert Map, Set to Array\n */\nexport function convertToArray(val) {\n    if (val instanceof Map) {\n        return Array.from(val.values());\n    }\n    return Array.isArray(val) ? val : Array.from(val);\n}\n//# sourceMappingURL=convert-to-array.util.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ValidationExecutor } from './ValidationExecutor';\n/**\n * Validator performs validation of the given object based on its metadata.\n */\nvar Validator = /** @class */ (function () {\n    function Validator() {\n    }\n    /**\n     * Performs validation of the given object based on decorators or validation schema.\n     */\n    Validator.prototype.validate = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {\n        return this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);\n    };\n    /**\n     * Performs validation of the given object based on decorators or validation schema and reject on error.\n     */\n    Validator.prototype.validateOrReject = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errors;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions)];\n                    case 1:\n                        errors = _a.sent();\n                        if (errors.length)\n                            return [2 /*return*/, Promise.reject(errors)];\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Performs validation of the given object based on decorators or validation schema.\n     */\n    Validator.prototype.validateSync = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {\n        var object = typeof objectOrSchemaName === 'string' ? objectOrValidationOptions : objectOrSchemaName;\n        var options = typeof objectOrSchemaName === 'string' ? maybeValidatorOptions : objectOrValidationOptions;\n        var schema = typeof objectOrSchemaName === 'string' ? objectOrSchemaName : undefined;\n        var executor = new ValidationExecutor(this, options);\n        executor.ignoreAsyncValidations = true;\n        var validationErrors = [];\n        executor.execute(object, schema, validationErrors);\n        return executor.stripEmptyErrors(validationErrors);\n    };\n    // -------------------------------------------------------------------------\n    // Private Properties\n    // -------------------------------------------------------------------------\n    /**\n     * Performs validation of the given object based on decorators or validation schema.\n     * Common method for `validateOrReject` and `validate` methods.\n     */\n    Validator.prototype.coreValidate = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {\n        var object = typeof objectOrSchemaName === 'string' ? objectOrValidationOptions : objectOrSchemaName;\n        var options = typeof objectOrSchemaName === 'string' ? maybeValidatorOptions : objectOrValidationOptions;\n        var schema = typeof objectOrSchemaName === 'string' ? objectOrSchemaName : undefined;\n        var executor = new ValidationExecutor(this, options);\n        var validationErrors = [];\n        executor.execute(object, schema, validationErrors);\n        return Promise.all(executor.awaitingPromises).then(function () {\n            return executor.stripEmptyErrors(validationErrors);\n        });\n    };\n    return Validator;\n}());\nexport { Validator };\n//# sourceMappingURL=Validator.js.map","import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * If object has both allowed and not allowed properties a validation error will be thrown.\n */\nexport function Allow(validationOptions) {\n    return function (object, propertyName) {\n        var args = {\n            type: ValidationTypes.WHITELIST,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n//# sourceMappingURL=Allow.js.map","import { getFromContainer } from '../container';\n/**\n * This metadata interface contains information for custom validators.\n */\nvar ConstraintMetadata = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ConstraintMetadata(target, name, async) {\n        if (async === void 0) { async = false; }\n        this.target = target;\n        this.name = name;\n        this.async = async;\n    }\n    Object.defineProperty(ConstraintMetadata.prototype, \"instance\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Instance of the target custom validation class which performs validation.\n         */\n        get: function () {\n            return getFromContainer(this.target);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ConstraintMetadata;\n}());\nexport { ConstraintMetadata };\n//# sourceMappingURL=ConstraintMetadata.js.map","import { ConstraintMetadata } from './metadata/ConstraintMetadata';\nimport { ValidationMetadata } from './metadata/ValidationMetadata';\nimport { ValidationTypes } from './validation/ValidationTypes';\nimport { getFromContainer } from './container';\nimport { MetadataStorage, getMetadataStorage } from './metadata/MetadataStorage';\n/**\n * Registers a custom validation decorator.\n */\nexport function registerDecorator(options) {\n    var constraintCls;\n    if (options.validator instanceof Function) {\n        constraintCls = options.validator;\n        var constraintClasses = getFromContainer(MetadataStorage).getTargetValidatorConstraints(options.validator);\n        if (constraintClasses.length > 1) {\n            throw \"More than one implementation of ValidatorConstraintInterface found for validator on: \".concat(options.target.name, \":\").concat(options.propertyName);\n        }\n    }\n    else {\n        var validator_1 = options.validator;\n        constraintCls = /** @class */ (function () {\n            function CustomConstraint() {\n            }\n            CustomConstraint.prototype.validate = function (value, validationArguments) {\n                return validator_1.validate(value, validationArguments);\n            };\n            CustomConstraint.prototype.defaultMessage = function (validationArguments) {\n                if (validator_1.defaultMessage) {\n                    return validator_1.defaultMessage(validationArguments);\n                }\n                return '';\n            };\n            return CustomConstraint;\n        }());\n        getMetadataStorage().addConstraintMetadata(new ConstraintMetadata(constraintCls, options.name, options.async));\n    }\n    var validationMetadataArgs = {\n        type: options.name && ValidationTypes.isValid(options.name) ? options.name : ValidationTypes.CUSTOM_VALIDATION,\n        target: options.target,\n        propertyName: options.propertyName,\n        validationOptions: options.options,\n        constraintCls: constraintCls,\n        constraints: options.constraints,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(validationMetadataArgs));\n}\n//# sourceMappingURL=register-decorator.js.map","import { registerDecorator } from '../../register-decorator';\nexport function buildMessage(impl, validationOptions) {\n    return function (validationArguments) {\n        var eachPrefix = validationOptions && validationOptions.each ? 'each value in ' : '';\n        return impl(eachPrefix, validationArguments);\n    };\n}\nexport function ValidateBy(options, validationOptions) {\n    return function (object, propertyName) {\n        registerDecorator({\n            name: options.name,\n            target: object.constructor,\n            propertyName: propertyName,\n            options: validationOptions,\n            constraints: options.constraints,\n            validator: options.validator,\n        });\n    };\n}\n//# sourceMappingURL=ValidateBy.js.map","import { buildMessage, ValidateBy } from './ValidateBy';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\n// isDefined is (yet) a special case\nexport var IS_DEFINED = ValidationTypes.IS_DEFINED;\n/**\n * Checks if value is defined (!== undefined, !== null).\n */\nexport function isDefined(value) {\n    return value !== undefined && value !== null;\n}\n/**\n * Checks if value is defined (!== undefined, !== null).\n */\nexport function IsDefined(validationOptions) {\n    return ValidateBy({\n        name: IS_DEFINED,\n        validator: {\n            validate: function (value) { return isDefined(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property should not be null or undefined'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsDefined.js.map","import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Checks if value is missing and if so, ignores all validators.\n */\nexport function IsOptional(validationOptions) {\n    return function (object, propertyName) {\n        var args = {\n            type: ValidationTypes.CONDITIONAL_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [\n                function (object, value) {\n                    return object[propertyName] !== null && object[propertyName] !== undefined;\n                },\n            ],\n            validationOptions: validationOptions,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n//# sourceMappingURL=IsOptional.js.map","import { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ConstraintMetadata } from '../../metadata/ConstraintMetadata';\n/**\n * Registers custom validator class.\n */\nexport function ValidatorConstraint(options) {\n    return function (target) {\n        var isAsync = options && options.async;\n        var name = options && options.name ? options.name : '';\n        if (!name) {\n            name = target.name;\n            if (!name)\n                // generate name if it was not given\n                name = name.replace(/\\.?([A-Z]+)/g, function (x, y) { return '_' + y.toLowerCase(); }).replace(/^_/, '');\n        }\n        var metadata = new ConstraintMetadata(target, name, isAsync);\n        getMetadataStorage().addConstraintMetadata(metadata);\n    };\n}\nexport function Validate(constraintClass, constraintsOrValidationOptions, maybeValidationOptions) {\n    return function (object, propertyName) {\n        var args = {\n            type: ValidationTypes.CUSTOM_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraintCls: constraintClass,\n            constraints: Array.isArray(constraintsOrValidationOptions) ? constraintsOrValidationOptions : undefined,\n            validationOptions: !Array.isArray(constraintsOrValidationOptions)\n                ? constraintsOrValidationOptions\n                : maybeValidationOptions,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n//# sourceMappingURL=Validate.js.map","import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Ignores the other validators on a property when the provided condition function returns false.\n */\nexport function ValidateIf(condition, validationOptions) {\n    return function (object, propertyName) {\n        var args = {\n            type: ValidationTypes.CONDITIONAL_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [condition],\n            validationOptions: validationOptions,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n//# sourceMappingURL=ValidateIf.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidateNested(validationOptions) {\n    var opts = __assign({}, validationOptions);\n    var eachPrefix = opts.each ? 'each value in ' : '';\n    opts.message = opts.message || eachPrefix + 'nested property $property must be either object or array';\n    return function (object, propertyName) {\n        var args = {\n            type: ValidationTypes.NESTED_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: opts,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n//# sourceMappingURL=ValidateNested.js.map","import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Resolve promise before validation\n */\nexport function ValidatePromise(validationOptions) {\n    return function (object, propertyName) {\n        var args = {\n            type: ValidationTypes.PROMISE_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n//# sourceMappingURL=ValidatePromise.js.map","import { buildMessage, ValidateBy } from './ValidateBy';\nimport isLatLongValidator from 'validator/lib/isLatLong';\nexport var IS_LATLONG = 'isLatLong';\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function isLatLong(value) {\n    return typeof value === 'string' && isLatLongValidator(value);\n}\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function IsLatLong(validationOptions) {\n    return ValidateBy({\n        name: IS_LATLONG,\n        validator: {\n            validate: function (value, args) { return isLatLong(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a latitude,longitude string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsLatLong.js.map","import { buildMessage, ValidateBy } from './ValidateBy';\nimport { isLatLong } from './IsLatLong';\nexport var IS_LATITUDE = 'isLatitude';\n/**\n * Checks if a given value is a latitude.\n */\nexport function isLatitude(value) {\n    return (typeof value === 'number' || typeof value === 'string') && isLatLong(\"\".concat(value, \",0\"));\n}\n/**\n * Checks if a given value is a latitude.\n */\nexport function IsLatitude(validationOptions) {\n    return ValidateBy({\n        name: IS_LATITUDE,\n        validator: {\n            validate: function (value, args) { return isLatitude(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a latitude string or number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsLatitude.js.map","import { buildMessage, ValidateBy } from './ValidateBy';\nimport { isLatLong } from './IsLatLong';\nexport var IS_LONGITUDE = 'isLongitude';\n/**\n * Checks if a given value is a longitude.\n */\nexport function isLongitude(value) {\n    return (typeof value === 'number' || typeof value === 'string') && isLatLong(\"0,\".concat(value));\n}\n/**\n * Checks if a given value is a longitude.\n */\nexport function IsLongitude(validationOptions) {\n    return ValidateBy({\n        name: IS_LONGITUDE,\n        validator: {\n            validate: function (value, args) { return isLongitude(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a longitude string or number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsLongitude.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var EQUALS = 'equals';\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function equals(value, comparison) {\n    return value === comparison;\n}\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function Equals(comparison, validationOptions) {\n    return ValidateBy({\n        name: EQUALS,\n        constraints: [comparison],\n        validator: {\n            validate: function (value, args) { return equals(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be equal to $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=Equals.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var NOT_EQUALS = 'notEquals';\n/**\n * Checks if value does not match (\"!==\") the comparison.\n */\nexport function notEquals(value, comparison) {\n    return value !== comparison;\n}\n/**\n * Checks if value does not match (\"!==\") the comparison.\n */\nexport function NotEquals(comparison, validationOptions) {\n    return ValidateBy({\n        name: NOT_EQUALS,\n        constraints: [comparison],\n        validator: {\n            validate: function (value, args) { return notEquals(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property should not be equal to $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=NotEquals.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_EMPTY = 'isEmpty';\n/**\n * Checks if given value is empty (=== '', === null, === undefined).\n */\nexport function isEmpty(value) {\n    return value === '' || value === null || value === undefined;\n}\n/**\n * Checks if given value is empty (=== '', === null, === undefined).\n */\nexport function IsEmpty(validationOptions) {\n    return ValidateBy({\n        name: IS_EMPTY,\n        validator: {\n            validate: function (value, args) { return isEmpty(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be empty'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsEmpty.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_NOT_EMPTY = 'isNotEmpty';\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function isNotEmpty(value) {\n    return value !== '' && value !== null && value !== undefined;\n}\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function IsNotEmpty(validationOptions) {\n    return ValidateBy({\n        name: IS_NOT_EMPTY,\n        validator: {\n            validate: function (value, args) { return isNotEmpty(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property should not be empty'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsNotEmpty.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_IN = 'isIn';\n/**\n * Checks if given value is in a array of allowed values.\n */\nexport function isIn(value, possibleValues) {\n    return !Array.isArray(possibleValues) || possibleValues.some(function (possibleValue) { return possibleValue === value; });\n}\n/**\n * Checks if given value is in a array of allowed values.\n */\nexport function IsIn(values, validationOptions) {\n    return ValidateBy({\n        name: IS_IN,\n        constraints: [values],\n        validator: {\n            validate: function (value, args) { return isIn(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be one of the following values: $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsIn.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_NOT_IN = 'isNotIn';\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function isNotIn(value, possibleValues) {\n    return !Array.isArray(possibleValues) || !possibleValues.some(function (possibleValue) { return possibleValue === value; });\n}\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function IsNotIn(values, validationOptions) {\n    return ValidateBy({\n        name: IS_NOT_IN,\n        constraints: [values],\n        validator: {\n            validate: function (value, args) { return isNotIn(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property should not be one of the following values: $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsNotIn.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDivisibleByValidator from 'validator/lib/isDivisibleBy';\nexport var IS_DIVISIBLE_BY = 'isDivisibleBy';\n/**\n * Checks if value is a number that's divisible by another.\n */\nexport function isDivisibleBy(value, num) {\n    return typeof value === 'number' && typeof num === 'number' && isDivisibleByValidator(String(value), num);\n}\n/**\n * Checks if value is a number that's divisible by another.\n */\nexport function IsDivisibleBy(num, validationOptions) {\n    return ValidateBy({\n        name: IS_DIVISIBLE_BY,\n        constraints: [num],\n        validator: {\n            validate: function (value, args) { return isDivisibleBy(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be divisible by $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsDivisibleBy.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_POSITIVE = 'isPositive';\n/**\n * Checks if the value is a positive number greater than zero.\n */\nexport function isPositive(value) {\n    return typeof value === 'number' && value > 0;\n}\n/**\n * Checks if the value is a positive number greater than zero.\n */\nexport function IsPositive(validationOptions) {\n    return ValidateBy({\n        name: IS_POSITIVE,\n        validator: {\n            validate: function (value, args) { return isPositive(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a positive number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsPositive.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_NEGATIVE = 'isNegative';\n/**\n * Checks if the value is a negative number smaller than zero.\n */\nexport function isNegative(value) {\n    return typeof value === 'number' && value < 0;\n}\n/**\n * Checks if the value is a negative number smaller than zero.\n */\nexport function IsNegative(validationOptions) {\n    return ValidateBy({\n        name: IS_NEGATIVE,\n        validator: {\n            validate: function (value, args) { return isNegative(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a negative number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsNegative.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var MAX = 'max';\n/**\n * Checks if the first number is less than or equal to the second.\n */\nexport function max(num, max) {\n    return typeof num === 'number' && typeof max === 'number' && num <= max;\n}\n/**\n * Checks if the first number is less than or equal to the second.\n */\nexport function Max(maxValue, validationOptions) {\n    return ValidateBy({\n        name: MAX,\n        constraints: [maxValue],\n        validator: {\n            validate: function (value, args) { return max(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must not be greater than $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=Max.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var MIN = 'min';\n/**\n * Checks if the first number is greater than or equal to the second.\n */\nexport function min(num, min) {\n    return typeof num === 'number' && typeof min === 'number' && num >= min;\n}\n/**\n * Checks if the first number is greater than or equal to the second.\n */\nexport function Min(minValue, validationOptions) {\n    return ValidateBy({\n        name: MIN,\n        constraints: [minValue],\n        validator: {\n            validate: function (value, args) { return min(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must not be less than $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=Min.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var MIN_DATE = 'minDate';\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function minDate(date, minDate) {\n    return date instanceof Date && date.getTime() >= minDate.getTime();\n}\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function MinDate(date, validationOptions) {\n    return ValidateBy({\n        name: MIN_DATE,\n        constraints: [date],\n        validator: {\n            validate: function (value, args) { return minDate(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return 'minimal allowed date for ' + eachPrefix + '$property is $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=MinDate.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var MAX_DATE = 'maxDate';\n/**\n * Checks if the value is a date that's before the specified date.\n */\nexport function maxDate(date, maxDate) {\n    return date instanceof Date && date.getTime() <= maxDate.getTime();\n}\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function MaxDate(date, validationOptions) {\n    return ValidateBy({\n        name: MAX_DATE,\n        constraints: [date],\n        validator: {\n            validate: function (value, args) { return maxDate(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return 'maximal allowed date for ' + eachPrefix + '$property is $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=MaxDate.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport containsValidator from 'validator/lib/contains';\nexport var CONTAINS = 'contains';\n/**\n * Checks if the string contains the seed.\n * If given value is not a string, then it returns false.\n */\nexport function contains(value, seed) {\n    return typeof value === 'string' && containsValidator(value, seed);\n}\n/**\n * Checks if the string contains the seed.\n * If given value is not a string, then it returns false.\n */\nexport function Contains(seed, validationOptions) {\n    return ValidateBy({\n        name: CONTAINS,\n        constraints: [seed],\n        validator: {\n            validate: function (value, args) { return contains(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain a $constraint1 string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=Contains.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport containsValidator from 'validator/lib/contains';\nexport var NOT_CONTAINS = 'notContains';\n/**\n * Checks if the string does not contain the seed.\n * If given value is not a string, then it returns false.\n */\nexport function notContains(value, seed) {\n    return typeof value === 'string' && !containsValidator(value, seed);\n}\n/**\n * Checks if the string does not contain the seed.\n * If given value is not a string, then it returns false.\n */\nexport function NotContains(seed, validationOptions) {\n    return ValidateBy({\n        name: NOT_CONTAINS,\n        constraints: [seed],\n        validator: {\n            validate: function (value, args) { return notContains(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property should not contain a $constraint1 string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=NotContains.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAlphaValidator from 'validator/lib/isAlpha';\nexport var IS_ALPHA = 'isAlpha';\n/**\n * Checks if the string contains only letters (a-zA-Z).\n * If given value is not a string, then it returns false.\n */\nexport function isAlpha(value, locale) {\n    return typeof value === 'string' && isAlphaValidator(value, locale);\n}\n/**\n * Checks if the string contains only letters (a-zA-Z).\n * If given value is not a string, then it returns false.\n */\nexport function IsAlpha(locale, validationOptions) {\n    return ValidateBy({\n        name: IS_ALPHA,\n        constraints: [locale],\n        validator: {\n            validate: function (value, args) { return isAlpha(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain only letters (a-zA-Z)'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsAlpha.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAlphanumericValidator from 'validator/lib/isAlphanumeric';\nexport var IS_ALPHANUMERIC = 'isAlphanumeric';\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\nexport function isAlphanumeric(value, locale) {\n    return typeof value === 'string' && isAlphanumericValidator(value, locale);\n}\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\nexport function IsAlphanumeric(locale, validationOptions) {\n    return ValidateBy({\n        name: IS_ALPHANUMERIC,\n        constraints: [locale],\n        validator: {\n            validate: function (value, args) { return isAlphanumeric(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain only letters and numbers'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsAlphanumeric.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDecimalValidator from 'validator/lib/isDecimal';\nexport var IS_DECIMAL = 'isDecimal';\n/**\n * Checks if the string is a valid decimal.\n * If given value is not a string, then it returns false.\n */\nexport function isDecimal(value, options) {\n    return typeof value === 'string' && isDecimalValidator(value, options);\n}\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\nexport function IsDecimal(options, validationOptions) {\n    return ValidateBy({\n        name: IS_DECIMAL,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isDecimal(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property is not a valid decimal number.'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsDecimal.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAsciiValidator from 'validator/lib/isAscii';\nexport var IS_ASCII = 'isAscii';\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\nexport function isAscii(value) {\n    return typeof value === 'string' && isAsciiValidator(value);\n}\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\nexport function IsAscii(validationOptions) {\n    return ValidateBy({\n        name: IS_ASCII,\n        validator: {\n            validate: function (value, args) { return isAscii(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain only ASCII characters'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsAscii.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase64Validator from 'validator/lib/isBase64';\nexport var IS_BASE64 = 'isBase64';\n/**\n * Checks if a string is base64 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function isBase64(value) {\n    return typeof value === 'string' && isBase64Validator(value);\n}\n/**\n * Checks if a string is base64 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function IsBase64(validationOptions) {\n    return ValidateBy({\n        name: IS_BASE64,\n        validator: {\n            validate: function (value, args) { return isBase64(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be base64 encoded'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsBase64.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isByteLengthValidator from 'validator/lib/isByteLength';\nexport var IS_BYTE_LENGTH = 'isByteLength';\n/**\n * Checks if the string's length (in bytes) falls in a range.\n * If given value is not a string, then it returns false.\n */\nexport function isByteLength(value, min, max) {\n    return typeof value === 'string' && isByteLengthValidator(value, { min: min, max: max });\n}\n/**\n * Checks if the string's length (in bytes) falls in a range.\n * If given value is not a string, then it returns false.\n */\nexport function IsByteLength(min, max, validationOptions) {\n    return ValidateBy({\n        name: IS_BYTE_LENGTH,\n        constraints: [min, max],\n        validator: {\n            validate: function (value, args) { return isByteLength(value, args.constraints[0], args.constraints[1]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + \"$property's byte length must fall into ($constraint1, $constraint2) range\"; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsByteLength.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCreditCardValidator from 'validator/lib/isCreditCard';\nexport var IS_CREDIT_CARD = 'isCreditCard';\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function isCreditCard(value) {\n    return typeof value === 'string' && isCreditCardValidator(value);\n}\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function IsCreditCard(validationOptions) {\n    return ValidateBy({\n        name: IS_CREDIT_CARD,\n        validator: {\n            validate: function (value, args) { return isCreditCard(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a credit card'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsCreditCard.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCurrencyValidator from 'validator/lib/isCurrency';\nexport var IS_CURRENCY = 'isCurrency';\n/**\n * Checks if the string is a valid currency amount.\n * If given value is not a string, then it returns false.\n */\nexport function isCurrency(value, options) {\n    return typeof value === 'string' && isCurrencyValidator(value, options);\n}\n/**\n * Checks if the string is a valid currency amount.\n * If given value is not a string, then it returns false.\n */\nexport function IsCurrency(options, validationOptions) {\n    return ValidateBy({\n        name: IS_CURRENCY,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isCurrency(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a currency'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsCurrency.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEmailValidator from 'validator/lib/isEmail';\nexport var IS_EMAIL = 'isEmail';\n/**\n * Checks if the string is an email.\n * If given value is not a string, then it returns false.\n */\nexport function isEmail(value, options) {\n    return typeof value === 'string' && isEmailValidator(value, options);\n}\n/**\n * Checks if the string is an email.\n * If given value is not a string, then it returns false.\n */\nexport function IsEmail(options, validationOptions) {\n    return ValidateBy({\n        name: IS_EMAIL,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isEmail(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an email'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsEmail.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFqdnValidator from 'validator/lib/isFQDN';\nexport var IS_FQDN = 'isFqdn';\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n * If given value is not a string, then it returns false.\n */\nexport function isFQDN(value, options) {\n    return typeof value === 'string' && isFqdnValidator(value, options);\n}\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n * If given value is not a string, then it returns false.\n */\nexport function IsFQDN(options, validationOptions) {\n    return ValidateBy({\n        name: IS_FQDN,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isFQDN(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a valid domain name'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsFQDN.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFullWidthValidator from 'validator/lib/isFullWidth';\nexport var IS_FULL_WIDTH = 'isFullWidth';\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isFullWidth(value) {\n    return typeof value === 'string' && isFullWidthValidator(value);\n}\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsFullWidth(validationOptions) {\n    return ValidateBy({\n        name: IS_FULL_WIDTH,\n        validator: {\n            validate: function (value, args) { return isFullWidth(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain a full-width characters'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsFullWidth.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHalfWidthValidator from 'validator/lib/isHalfWidth';\nexport var IS_HALF_WIDTH = 'isHalfWidth';\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isHalfWidth(value) {\n    return typeof value === 'string' && isHalfWidthValidator(value);\n}\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsHalfWidth(validationOptions) {\n    return ValidateBy({\n        name: IS_HALF_WIDTH,\n        validator: {\n            validate: function (value, args) { return isHalfWidth(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain a half-width characters'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsHalfWidth.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isVariableWidthValidator from 'validator/lib/isVariableWidth';\nexport var IS_VARIABLE_WIDTH = 'isVariableWidth';\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isVariableWidth(value) {\n    return typeof value === 'string' && isVariableWidthValidator(value);\n}\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsVariableWidth(validationOptions) {\n    return ValidateBy({\n        name: IS_VARIABLE_WIDTH,\n        validator: {\n            validate: function (value, args) { return isVariableWidth(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain a full-width and half-width characters'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsVariableWidth.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHexColorValidator from 'validator/lib/isHexColor';\nexport var IS_HEX_COLOR = 'isHexColor';\n/**\n * Checks if the string is a hexadecimal color.\n * If given value is not a string, then it returns false.\n */\nexport function isHexColor(value) {\n    return typeof value === 'string' && isHexColorValidator(value);\n}\n/**\n * Checks if the string is a hexadecimal color.\n * If given value is not a string, then it returns false.\n */\nexport function IsHexColor(validationOptions) {\n    return ValidateBy({\n        name: IS_HEX_COLOR,\n        validator: {\n            validate: function (value, args) { return isHexColor(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a hexadecimal color'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsHexColor.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHexadecimalValidator from 'validator/lib/isHexadecimal';\nexport var IS_HEXADECIMAL = 'isHexadecimal';\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\nexport function isHexadecimal(value) {\n    return typeof value === 'string' && isHexadecimalValidator(value);\n}\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\nexport function IsHexadecimal(validationOptions) {\n    return ValidateBy({\n        name: IS_HEXADECIMAL,\n        validator: {\n            validate: function (value, args) { return isHexadecimal(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a hexadecimal number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsHexadecimal.js.map","export function isValidationOptions(val) {\n    if (!val) {\n        return false;\n    }\n    return 'each' in val || 'message' in val || 'groups' in val || 'always' in val || 'context' in val;\n}\n//# sourceMappingURL=ValidationOptions.js.map","import { isValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMacAddressValidator from 'validator/lib/isMACAddress';\nexport var IS_MAC_ADDRESS = 'isMacAddress';\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function isMACAddress(value, options) {\n    return typeof value === 'string' && isMacAddressValidator(value, options);\n}\nexport function IsMACAddress(optionsOrValidationOptionsArg, validationOptionsArg) {\n    var options = !isValidationOptions(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : undefined;\n    var validationOptions = isValidationOptions(optionsOrValidationOptionsArg)\n        ? optionsOrValidationOptionsArg\n        : validationOptionsArg;\n    return ValidateBy({\n        name: IS_MAC_ADDRESS,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isMACAddress(value, options); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a MAC Address'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsMacAddress.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIPValidator from 'validator/lib/isIP';\nexport var IS_IP = 'isIp';\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function isIP(value, version) {\n    /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n    var versionStr = version ? \"\".concat(version) : undefined;\n    return typeof value === 'string' && isIPValidator(value, versionStr);\n}\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function IsIP(version, validationOptions) {\n    return ValidateBy({\n        name: IS_IP,\n        constraints: [version],\n        validator: {\n            validate: function (value, args) { return isIP(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an ip address'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsIP.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPortValidator from 'validator/lib/isPort';\nexport var IS_PORT = 'isPort';\n/**\n * Check if the string is a valid port number.\n */\nexport function isPort(value) {\n    return typeof value === 'string' && isPortValidator(value);\n}\n/**\n * Check if the string is a valid port number.\n */\nexport function IsPort(validationOptions) {\n    return ValidateBy({\n        name: IS_PORT,\n        validator: {\n            validate: function (value, args) { return isPort(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a port'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsPort.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIsbnValidator from 'validator/lib/isISBN';\nexport var IS_ISBN = 'isIsbn';\n/**\n * Checks if the string is an ISBN (version 10 or 13).\n * If given value is not a string, then it returns false.\n */\nexport function isISBN(value, version) {\n    /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n    var versionStr = version ? \"\".concat(version) : undefined;\n    return typeof value === 'string' && isIsbnValidator(value, versionStr);\n}\n/**\n * Checks if the string is an ISBN (version 10 or 13).\n * If given value is not a string, then it returns false.\n */\nexport function IsISBN(version, validationOptions) {\n    return ValidateBy({\n        name: IS_ISBN,\n        constraints: [version],\n        validator: {\n            validate: function (value, args) { return isISBN(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an ISBN'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsISBN.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIsinValidator from 'validator/lib/isISIN';\nexport var IS_ISIN = 'isIsin';\n/**\n * Checks if the string is an ISIN (stock/security identifier).\n * If given value is not a string, then it returns false.\n */\nexport function isISIN(value) {\n    return typeof value === 'string' && isIsinValidator(value);\n}\n/**\n * Checks if the string is an ISIN (stock/security identifier).\n * If given value is not a string, then it returns false.\n */\nexport function IsISIN(validationOptions) {\n    return ValidateBy({\n        name: IS_ISIN,\n        validator: {\n            validate: function (value, args) { return isISIN(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an ISIN (stock/security identifier)'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsISIN.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIso8601Validator from 'validator/lib/isISO8601';\nexport var IS_ISO8601 = 'isIso8601';\n/**\n * Checks if the string is a valid ISO 8601 date.\n * If given value is not a string, then it returns false.\n * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\nexport function isISO8601(value, options) {\n    return typeof value === 'string' && isIso8601Validator(value, options);\n}\n/**\n * Checks if the string is a valid ISO 8601 date.\n * If given value is not a string, then it returns false.\n * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\nexport function IsISO8601(options, validationOptions) {\n    return ValidateBy({\n        name: IS_ISO8601,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isISO8601(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a valid ISO 8601 date string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsISO8601.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJSONValidator from 'validator/lib/isJSON';\nexport var IS_JSON = 'isJson';\n/**\n * Checks if the string is valid JSON (note: uses JSON.parse).\n * If given value is not a string, then it returns false.\n */\nexport function isJSON(value) {\n    return typeof value === 'string' && isJSONValidator(value);\n}\n/**\n * Checks if the string is valid JSON (note: uses JSON.parse).\n * If given value is not a string, then it returns false.\n */\nexport function IsJSON(validationOptions) {\n    return ValidateBy({\n        name: IS_JSON,\n        validator: {\n            validate: function (value, args) { return isJSON(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a json string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsJSON.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJwtValidator from 'validator/lib/isJWT';\nexport var IS_JWT = 'isJwt';\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function isJWT(value) {\n    return typeof value === 'string' && isJwtValidator(value);\n}\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function IsJWT(validationOptions) {\n    return ValidateBy({\n        name: IS_JWT,\n        validator: {\n            validate: function (value, args) { return isJWT(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a jwt string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsJWT.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLowercaseValidator from 'validator/lib/isLowercase';\nexport var IS_LOWERCASE = 'isLowercase';\n/**\n * Checks if the string is lowercase.\n * If given value is not a string, then it returns false.\n */\nexport function isLowercase(value) {\n    return typeof value === 'string' && isLowercaseValidator(value);\n}\n/**\n * Checks if the string is lowercase.\n * If given value is not a string, then it returns false.\n */\nexport function IsLowercase(validationOptions) {\n    return ValidateBy({\n        name: IS_LOWERCASE,\n        validator: {\n            validate: function (value, args) { return isLowercase(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a lowercase string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsLowercase.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMobilePhoneValidator from 'validator/lib/isMobilePhone';\nexport var IS_MOBILE_PHONE = 'isMobilePhone';\n/**\n * Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])\n * OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',\n * 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',\n * 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',\n * 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',\n * 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',\n * 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',\n * 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',\n * 'zh-HK', 'zh-MO', 'zh-TW']\n * If given value is not a string, then it returns false.\n */\nexport function isMobilePhone(value, locale, options) {\n    return typeof value === 'string' && isMobilePhoneValidator(value, locale, options);\n}\n/**\n * Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])\n * OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',\n * 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',\n * 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',\n * 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',\n * 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',\n * 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',\n * 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',\n * 'zh-HK', 'zh-MO', 'zh-TW']\n * If given value is not a string, then it returns false.\n */\nexport function IsMobilePhone(locale, options, validationOptions) {\n    return ValidateBy({\n        name: IS_MOBILE_PHONE,\n        constraints: [locale, options],\n        validator: {\n            validate: function (value, args) { return isMobilePhone(value, args.constraints[0], args.constraints[1]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a phone number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsMobilePhone.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha2Validator from 'validator/lib/isISO31661Alpha2';\nexport var IS_ISO31661_ALPHA_2 = 'isISO31661Alpha2';\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function isISO31661Alpha2(value) {\n    return typeof value === 'string' && isISO31661Alpha2Validator(value);\n}\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function IsISO31661Alpha2(validationOptions) {\n    return ValidateBy({\n        name: IS_ISO31661_ALPHA_2,\n        validator: {\n            validate: function (value, args) { return isISO31661Alpha2(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a valid ISO31661 Alpha2 code'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsISO31661Alpha2.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha3Validator from 'validator/lib/isISO31661Alpha3';\nexport var IS_ISO31661_ALPHA_3 = 'isISO31661Alpha3';\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function isISO31661Alpha3(value) {\n    return typeof value === 'string' && isISO31661Alpha3Validator(value);\n}\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function IsISO31661Alpha3(validationOptions) {\n    return ValidateBy({\n        name: IS_ISO31661_ALPHA_3,\n        validator: {\n            validate: function (value, args) { return isISO31661Alpha3(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a valid ISO31661 Alpha3 code'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsISO31661Alpha3.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMongoIdValidator from 'validator/lib/isMongoId';\nexport var IS_MONGO_ID = 'isMongoId';\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\nexport function isMongoId(value) {\n    return typeof value === 'string' && isMongoIdValidator(value);\n}\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\nexport function IsMongoId(validationOptions) {\n    return ValidateBy({\n        name: IS_MONGO_ID,\n        validator: {\n            validate: function (value, args) { return isMongoId(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a mongodb id'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsMongoId.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMultibyteValidator from 'validator/lib/isMultibyte';\nexport var IS_MULTIBYTE = 'isMultibyte';\n/**\n * Checks if the string contains one or more multibyte chars.\n * If given value is not a string, then it returns false.\n */\nexport function isMultibyte(value) {\n    return typeof value === 'string' && isMultibyteValidator(value);\n}\n/**\n * Checks if the string contains one or more multibyte chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsMultibyte(validationOptions) {\n    return ValidateBy({\n        name: IS_MULTIBYTE,\n        validator: {\n            validate: function (value, args) { return isMultibyte(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain one or more multibyte chars'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsMultibyte.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isSurrogatePairValidator from 'validator/lib/isSurrogatePair';\nexport var IS_SURROGATE_PAIR = 'isSurrogatePair';\n/**\n * Checks if the string contains any surrogate pairs chars.\n * If given value is not a string, then it returns false.\n */\nexport function isSurrogatePair(value) {\n    return typeof value === 'string' && isSurrogatePairValidator(value);\n}\n/**\n * Checks if the string contains any surrogate pairs chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsSurrogatePair(validationOptions) {\n    return ValidateBy({\n        name: IS_SURROGATE_PAIR,\n        validator: {\n            validate: function (value, args) { return isSurrogatePair(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain any surrogate pairs chars'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsSurrogatePair.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUrlValidator from 'validator/lib/isURL';\nexport var IS_URL = 'isUrl';\n/**\n * Checks if the string is an url.\n * If given value is not a string, then it returns false.\n */\nexport function isURL(value, options) {\n    return typeof value === 'string' && isUrlValidator(value, options);\n}\n/**\n * Checks if the string is an url.\n * If given value is not a string, then it returns false.\n */\nexport function IsUrl(options, validationOptions) {\n    return ValidateBy({\n        name: IS_URL,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isURL(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an URL address'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsUrl.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUuidValidator from 'validator/lib/isUUID';\nexport var IS_UUID = 'isUuid';\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n * If given value is not a string, then it returns false.\n */\nexport function isUUID(value, version) {\n    return typeof value === 'string' && isUuidValidator(value, version);\n}\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n * If given value is not a string, then it returns false.\n */\nexport function IsUUID(version, validationOptions) {\n    return ValidateBy({\n        name: IS_UUID,\n        constraints: [version],\n        validator: {\n            validate: function (value, args) { return isUUID(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a UUID'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsUUID.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_FIREBASE_PUSH_ID = 'IsFirebasePushId';\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function isFirebasePushId(value) {\n    var webSafeRegex = /^[a-zA-Z0-9_-]*$/;\n    return typeof value === 'string' && value.length === 20 && webSafeRegex.test(value);\n}\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function IsFirebasePushId(validationOptions) {\n    return ValidateBy({\n        name: IS_FIREBASE_PUSH_ID,\n        validator: {\n            validate: function (value, args) { return isFirebasePushId(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a Firebase Push Id'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsFirebasePushId.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUppercaseValidator from 'validator/lib/isUppercase';\nexport var IS_UPPERCASE = 'isUppercase';\n/**\n * Checks if the string is uppercase.\n * If given value is not a string, then it returns false.\n */\nexport function isUppercase(value) {\n    return typeof value === 'string' && isUppercaseValidator(value);\n}\n/**\n * Checks if the string is uppercase.\n * If given value is not a string, then it returns false.\n */\nexport function IsUppercase(validationOptions) {\n    return ValidateBy({\n        name: IS_UPPERCASE,\n        validator: {\n            validate: function (value, args) { return isUppercase(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be uppercase'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsUppercase.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport var IS_LENGTH = 'isLength';\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function length(value, min, max) {\n    return typeof value === 'string' && isLengthValidator(value, { min: min, max: max });\n}\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function Length(min, max, validationOptions) {\n    return ValidateBy({\n        name: IS_LENGTH,\n        constraints: [min, max],\n        validator: {\n            validate: function (value, args) { return length(value, args.constraints[0], args.constraints[1]); },\n            defaultMessage: buildMessage(function (eachPrefix, args) {\n                var isMinLength = args.constraints[0] !== null && args.constraints[0] !== undefined;\n                var isMaxLength = args.constraints[1] !== null && args.constraints[1] !== undefined;\n                if (isMinLength && (!args.value || args.value.length < args.constraints[0])) {\n                    return eachPrefix + '$property must be longer than or equal to $constraint1 characters';\n                }\n                else if (isMaxLength && args.value.length > args.constraints[1]) {\n                    return eachPrefix + '$property must be shorter than or equal to $constraint2 characters';\n                }\n                return (eachPrefix +\n                    '$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters');\n            }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=Length.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport var MAX_LENGTH = 'maxLength';\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function maxLength(value, max) {\n    return typeof value === 'string' && isLengthValidator(value, { min: 0, max: max });\n}\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MaxLength(max, validationOptions) {\n    return ValidateBy({\n        name: MAX_LENGTH,\n        constraints: [max],\n        validator: {\n            validate: function (value, args) { return maxLength(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be shorter than or equal to $constraint1 characters'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=MaxLength.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport var MIN_LENGTH = 'minLength';\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function minLength(value, min) {\n    return typeof value === 'string' && isLengthValidator(value, { min: min });\n}\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MinLength(min, validationOptions) {\n    return ValidateBy({\n        name: MIN_LENGTH,\n        constraints: [min],\n        validator: {\n            validate: function (value, args) { return minLength(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be longer than or equal to $constraint1 characters'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=MinLength.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\nexport var MATCHES = 'matches';\nexport function matches(value, pattern, modifiers) {\n    return typeof value === 'string' && matchesValidator(value, pattern, modifiers);\n}\nexport function Matches(pattern, modifiersOrAnnotationOptions, validationOptions) {\n    var modifiers;\n    if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {\n        validationOptions = modifiersOrAnnotationOptions;\n    }\n    else {\n        modifiers = modifiersOrAnnotationOptions;\n    }\n    return ValidateBy({\n        name: MATCHES,\n        constraints: [pattern, modifiers],\n        validator: {\n            validate: function (value, args) { return matches(value, args.constraints[0], args.constraints[1]); },\n            defaultMessage: buildMessage(function (eachPrefix, args) { return eachPrefix + '$property must match $constraint1 regular expression'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=Matches.js.map","// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([457]\\\\d{6})$\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2457]\\\\d{6})$\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([267]\\\\d{6})$\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"0|(183[12])\",0,0,0,[[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[047]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"(?:[25689]\\\\d|40)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]]],\"BL\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-8]\\\\d{6})$\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-24679]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([3-8]\\\\d{6})$\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-79]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}\",[10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|6[578])|4(?:03|1[68]|3[178]|50|74)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47|72)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:355[0-46-9]|4(?:5(?:2[024-9]|5[0-46-9])|60[1-9]|9(?:2[0-5]|49)))\\\\d{4}|52(?:3(?:[2-46-9][02-9]|5[02-46-9])|4(?:[2-478][02-9]|5[034]|6[2-9]|9[05-9])|7[2-4]\\\\d)\\\\d{5}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[1256]|33|44|66|77|88)|622)[2-9]\\\\d{6}\"],0,0,0,[\"600[2-9]\\\\d{6}\"]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"0|([59]\\\\d{7})$\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"(?:10|2[0-57-9])(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"0|(1(?:[12]\\\\d|79)\\\\d\\\\d)\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:(?:1\\\\d|[36])\\\\d{3}|9101)\\\\d{6}|[124-8]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[146][2-9]|[2578]\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"[39]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0([3579]|4(?:[14]4|56))?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"[27]\\\\d{6,7}|[34]\\\\d{5,7}|(?:5|8\\\\d\\\\d)\\\\d{7}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"0|([59]\\\\d{7})$\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:1\\\\d|2[02-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[05]\\\\d|[23]1|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[0568]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[189]\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-59]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-59]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[12]00|[368]|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[1245]|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[0359])|(?:5[0-26-9]|[78][0-49])\\\\d\\\\d|6(?:[0-4]\\\\d\\\\d|50[0-24-69]))|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d\\\\d|1(?:[0-7]\\\\d\\\\d|8(?:[02]\\\\d|1[0-278])))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|81|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"(?:[56]94|80\\\\d|976)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"0|([25-9]\\\\d{5})$\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|81|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d\\\\d|606)\\\\d{5}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|1[0-24-7]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([3-9]\\\\d{6})$\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"9008\\\\d{3}|(?:[2-467]\\\\d\\\\d|862)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-5]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"[2-489]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-489]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"0|([25-8]\\\\d{5})$\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[38]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"0|([0-24-8]\\\\d{5})$\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|81|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|(?:[235-8]\\\\d|99)\\\\d{7}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-8]\\\\d{6})$\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"0|(1001)\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:2|33|5\\\\d|77|88)\\\\d{7}|[4-6]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[4-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(8-$1)\",1]],\"8\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{5})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29|38)[89]\",\"5(?:29|38)[89]0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|9)|892\",\"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5(?:29(?:[189][05]|2[29]|3[01])|38(?:8[057]|9[05]))\\\\d{4}|5(?:2(?:[0-25-7]\\\\d|3[1-578]|4[02-46-8]|8[0235-7]|90)|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|80|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[017]\\\\d|6[0-367]))\\\\d{6}\"],[\"80\\\\d{7}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"592(?:4[0-2]|93)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"0|([24-9]\\\\d{6})$\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[57-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"(?:69|80)\\\\d{7}|(?:59|97)6\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([34]\\\\d{6})$\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:5|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[3467]|9[13-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[129]\\\\d|31|77|88)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"1(?:(?:44|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[017]\\\\d|[235][1-9]|4[0-35-9]|6[0-46-9]|8[1-79]|9[1-8])|[2-9]\\\\d)\\\\d{8}\",[10,11],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"],0,1],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 $3 $4\",[\"1(?:33|5[56]|81)\"],0,1],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 $3 $4\",[\"1\"],0,1]],\"01\",0,\"0(?:[12]|4[45])|1\",0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9])|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1[36-8]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"[2-57-9]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[2-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[04]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-7]|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|[89]\\\\d{6,9}|1\\\\d{4,5}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-57-9]\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[489]|59\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-7]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-579]|6[2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[47]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[29]\\\\d{7,9}|50\\\\d{5}(?:\\\\d{2,3})?|6[0-35-9]\\\\d{6}|7\\\\d{7,8}|8\\\\d{4,9}|(?:11\\\\d|[34])\\\\d{7}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-579]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|[89]0\",\"50(?:[0367]|88)|[89]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[59]|80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7|86\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,0,\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"6\\\\d{5}(?:\\\\d{2})?|8\\\\d{9}|[1-9]\\\\d{6}(?:\\\\d{2})?\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"(?:[45]|80\\\\d\\\\d)\\\\d{5}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"[2-7]\\\\d{7}|800\\\\d{4}(?:\\\\d{2})?|2\\\\d{6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[126]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]]]],\"RE\":[\"262\",\"00\",\"9769\\\\d{5}|(?:26|[68]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,\"26[23]|69|[89]\"],\"RO\":[\"40\",\"00\",\"(?:[2378]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[237-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]]],\"0\"],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-5]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|[57]9)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"24|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3478]|64|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6(?:0[5-7]|[1-35-9])|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|(5\\\\d{6})$\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-479]\\\\d{6})$\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"(?:00|[1-57-9]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[34]7|91[78]\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"[1-6]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|616)\",\"5(?:[0-59]|6161)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-46-8]\\\\d{6})$\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[26-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[45][0-5]|5(?:0|6[37])|6(?:[12][018]|[36-8])|7|89|9[1-9]|(?:48|57)[0137-9]\",\"4[45][0-5]|5(?:0|6(?:3[14-7]|7))|6(?:[12][018]|[36-8])|7|89|9[1-9]|(?:48|57)[0137-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}\",[10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"5(?:05(?:[2-57-9]\\\\d\\\\d|6(?:[0-35-9]\\\\d|44))|82(?:2(?:0[0-3]|[268]2)|3(?:0[02]|22|33)|4(?:00|4[24]|65|82)|5(?:00|29|58|83)|6(?:00|66|82)|7(?:58|77)|8(?:00|42|88)|9(?:00|9[89])))\\\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[0179]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-289]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01579]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:355[0-46-9]|4(?:5(?:2[024-9]|5[0-46-9])|60[1-9]|9(?:2[0-5]|49)))\\\\d{4}|52(?:3(?:[2-46-9][02-9]|5[02-46-9])|4(?:[2-478][02-9]|5[034]|6[2-9]|9[05-9])|7[2-4]\\\\d)\\\\d{5}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[1256]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"4\\\\d{9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"405|8|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"810\",\"(?:33|55|[679]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[35-9]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-578]\\\\d{6})$\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[69]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3578]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23]\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7[24-68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"80\\\\d{7}|(?:26|63)9\\\\d{6}\",[9],0,\"0\",0,0,0,0,\"269|63\"],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:005|[1-9]\\\\d\\\\d)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:005|[1-9]\\\\d\\\\d)\\\\d{5}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"[0-36-9]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-36-9]\"]]],0,0,0,0,0,0,[0,[\"[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|285\\\\d{9}|(?:[19]\\\\d|49)\\\\d{6}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"4\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34[57]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-3]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|3(?:2|47|7\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:(?:285\\\\d\\\\d|3(?:45|[69]\\\\d{3}))\\\\d|9[89])\\\\d{6}\"]]],\"883\":[\"883\",0,\"(?:210|370\\\\d\\\\d)\\\\d{7}|51\\\\d{7}(?:\\\\d{3})?\",[9,10,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[35]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:210|(?:370[1-9]|51[013]0)\\\\d)\\\\d{7}|5100\\\\d{5}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}","// Importing from `.json.js` a workaround for a bug in web browsers' \"native\"\r\n// ES6 importing system which is uncapable of importing \"*.json\" files.\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\r\nimport metadata from '../metadata.min.json.js'\r\nexport default metadata\r\n\r\nexport function withMetadata(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// https://stackoverflow.com/a/46971044/970769\nvar ParseError = function ParseError(code) {\n  _classCallCheck(this, ParseError);\n\n  this.name = this.constructor.name;\n  this.message = code;\n  this.stack = new Error(code).stack;\n};\n\nexport { ParseError as default };\nParseError.prototype = Object.create(Error.prototype);\nParseError.prototype.constructor = ParseError;\n//# sourceMappingURL=ParseError.js.map","// The minimum length of the national significant number.\nexport var MIN_LENGTH_FOR_NSN = 2; // The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\n\nexport var MAX_LENGTH_FOR_NSN = 17; // The maximum length of the country calling code.\n\nexport var MAX_LENGTH_COUNTRY_CODE = 3; // Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\n\nexport var VALID_DIGITS = \"0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9\"; // `DASHES` will be right after the opening square bracket of the \"character class\"\n\nvar DASHES = \"-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D\";\nvar SLASHES = \"\\uFF0F/\";\nvar DOTS = \"\\uFF0E.\";\nexport var WHITESPACE = \" \\xA0\\xAD\\u200B\\u2060\\u3000\";\nvar BRACKETS = \"()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]\"; // export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\n\nvar TILDES = \"~\\u2053\\u223C\\uFF5E\"; // Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\n\nexport var VALID_PUNCTUATION = \"\".concat(DASHES).concat(SLASHES).concat(DOTS).concat(WHITESPACE).concat(BRACKETS).concat(TILDES);\nexport var PLUS_CHARS = \"+\\uFF0B\"; // const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')\n//# sourceMappingURL=constants.js.map","// Copy-pasted from:\n// https://github.com/substack/semver-compare/blob/master/index.js\n//\n// Inlining this function because some users reported issues with\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\n//\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\nexport default function (a, b) {\n  a = a.split('-');\n  b = b.split('-');\n  var pa = a[0].split('.');\n  var pb = b[0].split('.');\n\n  for (var i = 0; i < 3; i++) {\n    var na = Number(pa[i]);\n    var nb = Number(pb[i]);\n    if (na > nb) return 1;\n    if (nb > na) return -1;\n    if (!isNaN(na) && isNaN(nb)) return 1;\n    if (isNaN(na) && !isNaN(nb)) return -1;\n  }\n\n  if (a[1] && b[1]) {\n    return a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : 0;\n  }\n\n  return !a[1] && b[1] ? 1 : a[1] && !b[1] ? -1 : 0;\n}\n//# sourceMappingURL=semver-compare.js.map","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport compare from './tools/semver-compare'; // Added \"possibleLengths\" and renamed\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\n\nvar V2 = '1.0.18'; // Added \"idd_prefix\" and \"default_idd_prefix\".\n\nvar V3 = '1.2.0'; // Moved `001` country code to \"nonGeographic\" section of metadata.\n\nvar V4 = '1.7.35';\nvar DEFAULT_EXT_PREFIX = ' ext. ';\nvar CALLING_CODE_REG_EXP = /^\\d+$/;\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\n\nvar Metadata =\n/*#__PURE__*/\nfunction () {\n  function Metadata(metadata) {\n    _classCallCheck(this, Metadata);\n\n    validateMetadata(metadata);\n    this.metadata = metadata;\n    setVersion.call(this, metadata);\n  }\n\n  _createClass(Metadata, [{\n    key: \"getCountries\",\n    value: function getCountries() {\n      return Object.keys(this.metadata.countries).filter(function (_) {\n        return _ !== '001';\n      });\n    }\n  }, {\n    key: \"getCountryMetadata\",\n    value: function getCountryMetadata(countryCode) {\n      return this.metadata.countries[countryCode];\n    }\n  }, {\n    key: \"nonGeographic\",\n    value: function nonGeographic() {\n      if (this.v1 || this.v2 || this.v3) return; // `nonGeographical` was a typo.\n      // It's present in metadata generated from `1.7.35` to `1.7.37`.\n\n      return this.metadata.nonGeographic || this.metadata.nonGeographical;\n    }\n  }, {\n    key: \"hasCountry\",\n    value: function hasCountry(country) {\n      return this.getCountryMetadata(country) !== undefined;\n    }\n  }, {\n    key: \"hasCallingCode\",\n    value: function hasCallingCode(callingCode) {\n      if (this.getCountryCodesForCallingCode(callingCode)) {\n        return true;\n      }\n\n      if (this.nonGeographic()) {\n        if (this.nonGeographic()[callingCode]) {\n          return true;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"isNonGeographicCallingCode\",\n    value: function isNonGeographicCallingCode(callingCode) {\n      if (this.nonGeographic()) {\n        return this.nonGeographic()[callingCode] ? true : false;\n      } else {\n        return this.getCountryCodesForCallingCode(callingCode) ? false : true;\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"country\",\n    value: function country(countryCode) {\n      return this.selectNumberingPlan(countryCode);\n    }\n  }, {\n    key: \"selectNumberingPlan\",\n    value: function selectNumberingPlan(countryCode, callingCode) {\n      // Supports just passing `callingCode` as the first argument.\n      if (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\n        callingCode = countryCode;\n        countryCode = null;\n      }\n\n      if (countryCode && countryCode !== '001') {\n        if (!this.hasCountry(countryCode)) {\n          throw new Error(\"Unknown country: \".concat(countryCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this);\n      } else if (callingCode) {\n        if (!this.hasCallingCode(callingCode)) {\n          throw new Error(\"Unknown calling code: \".concat(callingCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this);\n      } else {\n        this.numberingPlan = undefined;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getCountryCodesForCallingCode\",\n    value: function getCountryCodesForCallingCode(callingCode) {\n      var countryCodes = this.countryCallingCodes()[callingCode];\n\n      if (countryCodes) {\n        // Metadata before V4 included \"non-geographic entity\" calling codes\n        // inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\n        // Now the semantics of `country_calling_codes` has changed:\n        // it's specifically for \"countries\" now.\n        // Older versions of custom metadata will simply skip parsing\n        // \"non-geographic entity\" phone numbers with new versions\n        // of this library: it's not considered a bug,\n        // because such numbers are extremely rare,\n        // and developers extremely rarely use custom metadata.\n        if (countryCodes.length === 1 && countryCodes[0].length === 3) {\n          return;\n        }\n\n        return countryCodes;\n      }\n    }\n  }, {\n    key: \"getCountryCodeForCallingCode\",\n    value: function getCountryCodeForCallingCode(callingCode) {\n      var countryCodes = this.getCountryCodesForCallingCode(callingCode);\n\n      if (countryCodes) {\n        return countryCodes[0];\n      }\n    }\n  }, {\n    key: \"getNumberingPlanMetadata\",\n    value: function getNumberingPlanMetadata(callingCode) {\n      var countryCode = this.getCountryCodeForCallingCode(callingCode);\n\n      if (countryCode) {\n        return this.getCountryMetadata(countryCode);\n      }\n\n      if (this.nonGeographic()) {\n        var metadata = this.nonGeographic()[callingCode];\n\n        if (metadata) {\n          return metadata;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return this.metadata.countries['001'];\n        }\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"countryCallingCode\",\n    value: function countryCallingCode() {\n      return this.numberingPlan.callingCode();\n    } // Deprecated.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      return this.numberingPlan.IDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      return this.numberingPlan.defaultIDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      return this.numberingPlan.nationalNumberPattern();\n    } // Deprecated.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      return this.numberingPlan.possibleLengths();\n    } // Deprecated.\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return this.numberingPlan.formats();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      return this.numberingPlan.nationalPrefixForParsing();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.numberingPlan.nationalPrefixTransformRule();\n    } // Deprecated.\n\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.numberingPlan.leadingDigits();\n    } // Deprecated.\n\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      return this.numberingPlan.hasTypes();\n    } // Deprecated.\n\n  }, {\n    key: \"type\",\n    value: function type(_type) {\n      return this.numberingPlan.type(_type);\n    } // Deprecated.\n\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      return this.numberingPlan.ext();\n    }\n  }, {\n    key: \"countryCallingCodes\",\n    value: function countryCallingCodes() {\n      if (this.v1) return this.metadata.country_phone_code_to_countries;\n      return this.metadata.country_calling_codes;\n    } // Deprecated.\n\n  }, {\n    key: \"chooseCountryByCountryCallingCode\",\n    value: function chooseCountryByCountryCallingCode(callingCode) {\n      return this.selectNumberingPlan(callingCode);\n    }\n  }, {\n    key: \"hasSelectedNumberingPlan\",\n    value: function hasSelectedNumberingPlan() {\n      return this.numberingPlan !== undefined;\n    }\n  }]);\n\n  return Metadata;\n}();\n\nexport { Metadata as default };\n\nvar NumberingPlan =\n/*#__PURE__*/\nfunction () {\n  function NumberingPlan(metadata, globalMetadataObject) {\n    _classCallCheck(this, NumberingPlan);\n\n    this.globalMetadataObject = globalMetadataObject;\n    this.metadata = metadata;\n    setVersion.call(this, globalMetadataObject.metadata);\n  }\n\n  _createClass(NumberingPlan, [{\n    key: \"callingCode\",\n    value: function callingCode() {\n      return this.metadata[0];\n    } // Formatting information for regions which share\n    // a country calling code is contained by only one region\n    // for performance reasons. For example, for NANPA region\n    // (\"North American Numbering Plan Administration\",\n    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n    // it will be contained in the metadata for `US`.\n\n  }, {\n    key: \"getDefaultCountryMetadataForRegion\",\n    value: function getDefaultCountryMetadataForRegion() {\n      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n    } // Is always present.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[1];\n    } // Is only present when a country supports multiple IDD prefixes.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[12];\n    }\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      if (this.v1 || this.v2) return this.metadata[1];\n      return this.metadata[2];\n    } // Is always present.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.v1) return;\n      return this.metadata[this.v2 ? 2 : 3];\n    }\n  }, {\n    key: \"_getFormats\",\n    value: function _getFormats(metadata) {\n      return metadata[this.v1 ? 2 : this.v2 ? 3 : 4];\n    } // For countries of the same region (e.g. NANPA)\n    // formats are all stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      var _this = this;\n\n      var formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n      return formats.map(function (_) {\n        return new Format(_, _this);\n      });\n    }\n  }, {\n    key: \"nationalPrefix\",\n    value: function nationalPrefix() {\n      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n    }\n  }, {\n    key: \"_getNationalPrefixFormattingRule\",\n    value: function _getNationalPrefixFormattingRule(metadata) {\n      return metadata[this.v1 ? 4 : this.v2 ? 5 : 6];\n    } // For countries of the same region (e.g. NANPA)\n    // national prefix formatting rule is stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"_nationalPrefixForParsing\",\n    value: function _nationalPrefixForParsing() {\n      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n    }\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      // If `national_prefix_for_parsing` is not set explicitly,\n      // then infer it from `national_prefix` (if any)\n      return this._nationalPrefixForParsing() || this.nationalPrefix();\n    }\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n    }\n  }, {\n    key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n    value: function _getNationalPrefixIsOptionalWhenFormatting() {\n      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n    } // For countries of the same region (e.g. NANPA)\n    // \"national prefix is optional when formatting\" flag is\n    // stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n    }\n  }, {\n    key: \"types\",\n    value: function types() {\n      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n    }\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      // Versions 1.2.0 - 1.2.4: can be `[]`.\n\n      /* istanbul ignore next */\n      if (this.types() && this.types().length === 0) {\n        return false;\n      } // Versions <= 1.2.4: can be `undefined`.\n      // Version >= 1.2.5: can be `0`.\n\n\n      return !!this.types();\n    }\n  }, {\n    key: \"type\",\n    value: function type(_type2) {\n      if (this.hasTypes() && getType(this.types(), _type2)) {\n        return new Type(getType(this.types(), _type2), this);\n      }\n    }\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      if (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;\n      return this.metadata[13] || DEFAULT_EXT_PREFIX;\n    }\n  }]);\n\n  return NumberingPlan;\n}();\n\nvar Format =\n/*#__PURE__*/\nfunction () {\n  function Format(format, metadata) {\n    _classCallCheck(this, Format);\n\n    this._format = format;\n    this.metadata = metadata;\n  }\n\n  _createClass(Format, [{\n    key: \"pattern\",\n    value: function pattern() {\n      return this._format[0];\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return this._format[1];\n    }\n  }, {\n    key: \"leadingDigitsPatterns\",\n    value: function leadingDigitsPatterns() {\n      return this._format[2] || [];\n    }\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n    }\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n  }, {\n    key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\n      // National prefix is omitted if there's no national prefix formatting rule\n      // set for this country, or when the national prefix formatting rule\n      // contains no national prefix itself, or when this rule is set but\n      // national prefix is optional for this phone number format\n      // (and it is not enforced explicitly)\n      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    } // Checks whether national prefix formatting rule contains national prefix.\n\n  }, {\n    key: \"usesNationalPrefix\",\n    value: function usesNationalPrefix() {\n      return this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a \"dummy\" one.\n      !FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule()) // In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\n      // when `national_prefix_formatting_rule` is not present.\n      // So, `true` or `false` are returned explicitly here, so that\n      // `0` number isn't returned.\n      ? true : false;\n    }\n  }, {\n    key: \"internationalFormat\",\n    value: function internationalFormat() {\n      return this._format[5] || this.format();\n    }\n  }]);\n\n  return Format;\n}();\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\n\n\nvar FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/;\n\nvar Type =\n/*#__PURE__*/\nfunction () {\n  function Type(type, metadata) {\n    _classCallCheck(this, Type);\n\n    this.type = type;\n    this.metadata = metadata;\n  }\n\n  _createClass(Type, [{\n    key: \"pattern\",\n    value: function pattern() {\n      if (this.metadata.v1) return this.type;\n      return this.type[0];\n    }\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.metadata.v1) return;\n      return this.type[1] || this.metadata.possibleLengths();\n    }\n  }]);\n\n  return Type;\n}();\n\nfunction getType(types, type) {\n  switch (type) {\n    case 'FIXED_LINE':\n      return types[0];\n\n    case 'MOBILE':\n      return types[1];\n\n    case 'TOLL_FREE':\n      return types[2];\n\n    case 'PREMIUM_RATE':\n      return types[3];\n\n    case 'PERSONAL_NUMBER':\n      return types[4];\n\n    case 'VOICEMAIL':\n      return types[5];\n\n    case 'UAN':\n      return types[6];\n\n    case 'PAGER':\n      return types[7];\n\n    case 'VOIP':\n      return types[8];\n\n    case 'SHARED_COST':\n      return types[9];\n  }\n}\n\nexport function validateMetadata(metadata) {\n  if (!metadata) {\n    throw new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.');\n  } // `country_phone_code_to_countries` was renamed to\n  // `country_calling_codes` in `1.0.18`.\n\n\n  if (!is_object(metadata) || !is_object(metadata.countries)) {\n    throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata, \".\"));\n  }\n} // Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\nvar is_object = function is_object(_) {\n  return _typeof(_) === 'object';\n}; // Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\n\nvar type_of = function type_of(_) {\n  return _typeof(_);\n};\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\n\n\nexport function getExtPrefix(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).ext();\n  }\n\n  return DEFAULT_EXT_PREFIX;\n}\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\n\nexport function getCountryCallingCode(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).countryCallingCode();\n  }\n\n  throw new Error(\"Unknown country: \".concat(country));\n}\nexport function isSupportedCountry(country, metadata) {\n  // metadata = new Metadata(metadata)\n  // return metadata.hasCountry(country)\n  return metadata.countries[country] !== undefined;\n}\n\nfunction setVersion(metadata) {\n  var version = metadata.version;\n\n  if (typeof version === 'number') {\n    this.v1 = version === 1;\n    this.v2 = version === 2;\n    this.v3 = version === 3;\n    this.v4 = version === 4;\n  } else {\n    if (!version) {\n      this.v1 = true;\n    } else if (compare(version, V3) === -1) {\n      this.v2 = true;\n    } else if (compare(version, V4) === -1) {\n      this.v3 = true;\n    } else {\n      this.v4 = true;\n    }\n  }\n} // const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\n// function isCountryCode(countryCode) {\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\n// }\n//# sourceMappingURL=metadata.js.map","import { VALID_DIGITS } from '../../constants'; // The RFC 3966 format for extensions.\n\nvar RFC3966_EXTN_PREFIX = ';ext=';\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\n\nvar getExtensionDigitsPattern = function getExtensionDigitsPattern(maxLength) {\n  return \"([\".concat(VALID_DIGITS, \"]{1,\").concat(maxLength, \"})\");\n};\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\n\n\nexport default function createExtensionPattern(purpose) {\n  // We cap the maximum length of an extension based on the ambiguity of the way\n  // the extension is prefixed. As per ITU, the officially allowed length for\n  // extensions is actually 40, but we don't support this since we haven't seen real\n  // examples and this introduces many false interpretations as the extension labels\n  // are not standardized.\n\n  /** @type {string} */\n  var extLimitAfterExplicitLabel = '20';\n  /** @type {string} */\n\n  var extLimitAfterLikelyLabel = '15';\n  /** @type {string} */\n\n  var extLimitAfterAmbiguousChar = '9';\n  /** @type {string} */\n\n  var extLimitWhenNotSure = '6';\n  /** @type {string} */\n\n  var possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\xA0\\\\t,]*\"; // Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\n\n  /** @type {string} */\n\n  var possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\";\n  /** @type {string} */\n\n  var optionalExtnSuffix = \"#?\"; // Here the extension is called out in more explicit way, i.e mentioning it obvious\n  // patterns like \"ext.\".\n\n  /** @type {string} */\n\n  var explicitExtLabels = \"(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\"; // One-character symbols that can be used to indicate an extension, and less\n  // commonly used or more ambiguous extension labels.\n\n  /** @type {string} */\n\n  var ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\"; // When extension is not separated clearly.\n\n  /** @type {string} */\n\n  var ambiguousSeparator = \"[- ]+\"; // This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\n  // comma as extension label may have it.\n\n  /** @type {string} */\n\n  var possibleSeparatorsNumberExtLabelNoComma = \"[ \\xA0\\\\t]*\"; // \",,\" is commonly used for auto dialling the extension when connected. First\n  // comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\n  // not repeat it here. Semi-colon works in Iphone and Android also to pop up a\n  // button with the extension number following.\n\n  /** @type {string} */\n\n  var autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\n  /** @type {string} */\n\n  var rfcExtn = RFC3966_EXTN_PREFIX + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\n  /** @type {string} */\n\n  var explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterExplicitLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var americanStyleExtnWithSuffix = ambiguousSeparator + getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\n  /** @type {string} */\n\n  var autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterLikelyLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma + \"(?:,)+\" + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix; // The first regular expression covers RFC 3966 format, where the extension is added\n  // using \";ext=\". The second more generic where extension is mentioned with explicit\n  // labels like \"ext:\". In both the above cases we allow more numbers in extension than\n  // any other extension labels. The third one captures when single character extension\n  // labels or less commonly used labels are used. In such cases we capture fewer\n  // extension digits in order to reduce the chance of falsely interpreting two\n  // numbers beside each other as a number + extension. The fourth one covers the\n  // special case of American numbers where the extension is written with a hash\n  // at the end, such as \"- 503#\". The fifth one is exclusively for extension\n  // autodialling formats which are used when dialling and in this case we accept longer\n  // extensions. The last one is more liberal on the number of commas that acts as\n  // extension labels, so we have a strict cap on the number of digits in such extensions.\n\n  return rfcExtn + \"|\" + explicitExtn + \"|\" + ambiguousExtn + \"|\" + americanStyleExtnWithSuffix + \"|\" + autoDiallingExtn + \"|\" + onlyCommasExtn;\n}\n//# sourceMappingURL=createExtensionPattern.js.map","import { MIN_LENGTH_FOR_NSN, VALID_DIGITS, VALID_PUNCTUATION, PLUS_CHARS } from '../constants';\nimport createExtensionPattern from './extension/createExtensionPattern'; //  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\n\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'; //\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\n\nexport var VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*'; // This regular expression isn't present in Google's `libphonenumber`\n// and is only used to determine whether the phone number being input\n// is too short for it to even consider it a \"valid\" number.\n// This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nvar VALID_PHONE_NUMBER_START_REG_EXP = new RegExp('^' + '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){1,2}' + '$', 'i');\nexport var VALID_PHONE_NUMBER_WITH_EXTENSION = VALID_PHONE_NUMBER + // Phone number extensions\n'(?:' + createExtensionPattern() + ')?'; // The combined regular expression for valid phone numbers:\n//\n\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp( // Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' + // Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER_WITH_EXTENSION + '$', 'i'); // Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\n\nexport default function isViablePhoneNumber(number) {\n  return number.length >= MIN_LENGTH_FOR_NSN && VALID_PHONE_NUMBER_PATTERN.test(number);\n} // This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nexport function isViablePhoneNumberStart(number) {\n  return VALID_PHONE_NUMBER_START_REG_EXP.test(number);\n}\n//# sourceMappingURL=isViablePhoneNumber.js.map","import createExtensionPattern from './createExtensionPattern'; // Regexp of all known extension prefixes used by different regions followed by\n// 1 or more valid digits, for use when parsing.\n\nvar EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i'); // Strips any extension (as in, the part of the number dialled after the call is\n// connected, usually indicated with extn, ext, x or similar) from the end of\n// the number, and returns it.\n\nexport default function extractExtension(number) {\n  var start = number.search(EXTN_PATTERN);\n\n  if (start < 0) {\n    return {};\n  } // If we find a potential extension, and the number preceding this is a viable\n  // number, we assume it is an extension.\n\n\n  var numberWithoutExtension = number.slice(0, start);\n  var matches = number.match(EXTN_PATTERN);\n  var i = 1;\n\n  while (i < matches.length) {\n    if (matches[i]) {\n      return {\n        number: numberWithoutExtension,\n        ext: matches[i]\n      };\n    }\n\n    i++;\n  }\n}\n//# sourceMappingURL=extractExtension.js.map","// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport var DIGITS = {\n  '0': '0',\n  '1': '1',\n  '2': '2',\n  '3': '3',\n  '4': '4',\n  '5': '5',\n  '6': '6',\n  '7': '7',\n  '8': '8',\n  '9': '9',\n  \"\\uFF10\": '0',\n  // Fullwidth digit 0\n  \"\\uFF11\": '1',\n  // Fullwidth digit 1\n  \"\\uFF12\": '2',\n  // Fullwidth digit 2\n  \"\\uFF13\": '3',\n  // Fullwidth digit 3\n  \"\\uFF14\": '4',\n  // Fullwidth digit 4\n  \"\\uFF15\": '5',\n  // Fullwidth digit 5\n  \"\\uFF16\": '6',\n  // Fullwidth digit 6\n  \"\\uFF17\": '7',\n  // Fullwidth digit 7\n  \"\\uFF18\": '8',\n  // Fullwidth digit 8\n  \"\\uFF19\": '9',\n  // Fullwidth digit 9\n  \"\\u0660\": '0',\n  // Arabic-indic digit 0\n  \"\\u0661\": '1',\n  // Arabic-indic digit 1\n  \"\\u0662\": '2',\n  // Arabic-indic digit 2\n  \"\\u0663\": '3',\n  // Arabic-indic digit 3\n  \"\\u0664\": '4',\n  // Arabic-indic digit 4\n  \"\\u0665\": '5',\n  // Arabic-indic digit 5\n  \"\\u0666\": '6',\n  // Arabic-indic digit 6\n  \"\\u0667\": '7',\n  // Arabic-indic digit 7\n  \"\\u0668\": '8',\n  // Arabic-indic digit 8\n  \"\\u0669\": '9',\n  // Arabic-indic digit 9\n  \"\\u06F0\": '0',\n  // Eastern-Arabic digit 0\n  \"\\u06F1\": '1',\n  // Eastern-Arabic digit 1\n  \"\\u06F2\": '2',\n  // Eastern-Arabic digit 2\n  \"\\u06F3\": '3',\n  // Eastern-Arabic digit 3\n  \"\\u06F4\": '4',\n  // Eastern-Arabic digit 4\n  \"\\u06F5\": '5',\n  // Eastern-Arabic digit 5\n  \"\\u06F6\": '6',\n  // Eastern-Arabic digit 6\n  \"\\u06F7\": '7',\n  // Eastern-Arabic digit 7\n  \"\\u06F8\": '8',\n  // Eastern-Arabic digit 8\n  \"\\u06F9\": '9' // Eastern-Arabic digit 9\n\n};\nexport function parseDigit(character) {\n  return DIGITS[character];\n}\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\n\nexport default function parseDigits(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = string.split(''), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var character = _ref;\n    var digit = parseDigit(character);\n\n    if (digit) {\n      result += digit;\n    }\n  }\n\n  return result;\n}\n//# sourceMappingURL=parseDigits.js.map","import { parseDigit } from './helpers/parseDigits';\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\n\nexport default function parseIncompletePhoneNumber(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = string.split(''), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var character = _ref;\n    result += parsePhoneNumberCharacter(character, result) || '';\n  }\n\n  return result;\n}\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {object} meta - Optional custom use-case-specific metadata.\r\n * @return {string?} The parsed character.\r\n */\n\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters) {\n  // Only allow a leading `+`.\n  if (character === '+') {\n    // If this `+` is not the first parsed character\n    // then discard it.\n    if (prevParsedCharacters) {\n      return;\n    }\n\n    return '+';\n  } // Allow digits.\n\n\n  return parseDigit(character);\n}\n//# sourceMappingURL=parseIncompletePhoneNumber.js.map","import mergeArrays from './mergeArrays';\nexport default function checkNumberLength(nationalNumber, metadata) {\n  return checkNumberLengthForType(nationalNumber, undefined, metadata);\n} // Checks whether a number is possible for the country based on its length.\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\n\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\n  var type_info = metadata.type(type); // There should always be \"<possiblePengths/>\" set for every type element.\n  // This is declared in the XML schema.\n  // For size efficiency, where a sub-description (e.g. fixed-line)\n  // has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\n  // so we fall back to the \"general description\". Where no numbers of the type\n  // exist at all, there is one possible length (-1) which is guaranteed\n  // not to match the length of any real phone number.\n\n  var possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths(); // let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\n  // Metadata before version `1.0.18` didn't contain `possible_lengths`.\n\n  if (!possible_lengths) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (type === 'FIXED_LINE_OR_MOBILE') {\n    // No such country in metadata.\n\n    /* istanbul ignore next */\n    if (!metadata.type('FIXED_LINE')) {\n      // The rare case has been encountered where no fixedLine data is available\n      // (true for some non-geographic entities), so we just check mobile.\n      return checkNumberLengthForType(nationalNumber, 'MOBILE', metadata);\n    }\n\n    var mobile_type = metadata.type('MOBILE');\n\n    if (mobile_type) {\n      // Merge the mobile data in if there was any. \"Concat\" creates a new\n      // array, it doesn't edit possible_lengths in place, so we don't need a copy.\n      // Note that when adding the possible lengths from mobile, we have\n      // to again check they aren't empty since if they are this indicates\n      // they are the same as the general desc and should be obtained from there.\n      possible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths()); // The current list is sorted; we need to merge in the new list and\n      // re-sort (duplicates are okay). Sorting isn't so expensive because\n      // the lists are very small.\n      // if (local_lengths) {\n      // \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\n      // } else {\n      // \tlocal_lengths = mobile_type.possibleLengthsLocal()\n      // }\n    }\n  } // If the type doesn't exist then return 'INVALID_LENGTH'.\n  else if (type && !type_info) {\n      return 'INVALID_LENGTH';\n    }\n\n  var actual_length = nationalNumber.length; // In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\n  // // This is safe because there is never an overlap beween the possible lengths\n  // // and the local-only lengths; this is checked at build time.\n  // if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\n  // {\n  // \treturn 'IS_POSSIBLE_LOCAL_ONLY'\n  // }\n\n  var minimum_length = possible_lengths[0];\n\n  if (minimum_length === actual_length) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (minimum_length > actual_length) {\n    return 'TOO_SHORT';\n  }\n\n  if (possible_lengths[possible_lengths.length - 1] < actual_length) {\n    return 'TOO_LONG';\n  } // We skip the first element since we've already checked it.\n\n\n  return possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH';\n}\n//# sourceMappingURL=checkNumberLength.js.map","/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\nexport default function mergeArrays(a, b) {\n  var merged = a.slice();\n\n  for (var _iterator = b, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var element = _ref;\n\n    if (a.indexOf(element) < 0) {\n      merged.push(element);\n    }\n  }\n\n  return merged.sort(function (a, b) {\n    return a - b;\n  }); // ES6 version, requires Set polyfill.\n  // let merged = new Set(a)\n  // for (const element of b) {\n  // \tmerged.add(i)\n  // }\n  // return Array.from(merged).sort((a, b) => a - b)\n}\n//# sourceMappingURL=mergeArrays.js.map","import Metadata from './metadata';\nimport checkNumberLength from './helpers/checkNumberLength';\nexport default function isPossiblePhoneNumber(input, options, metadata) {\n  /* istanbul ignore if */\n  if (options === undefined) {\n    options = {};\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (options.v2) {\n    if (!input.countryCallingCode) {\n      throw new Error('Invalid phone number object passed');\n    }\n\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else {\n    if (!input.phone) {\n      return false;\n    }\n\n    if (input.country) {\n      if (!metadata.hasCountry(input.country)) {\n        throw new Error(\"Unknown country: \".concat(input.country));\n      }\n\n      metadata.country(input.country);\n    } else {\n      if (!input.countryCallingCode) {\n        throw new Error('Invalid phone number object passed');\n      }\n\n      metadata.selectNumberingPlan(input.countryCallingCode);\n    }\n  }\n\n  if (metadata.possibleLengths()) {\n    return isPossibleNumber(input.phone || input.nationalNumber, metadata);\n  } else {\n    // There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\n    // were missing for \"non-geographical\" numbering plans.\n    // Just assume the number is possible in such cases:\n    // it's unlikely that anyone generated their custom metadata\n    // in that short period of time (one day).\n    // This code can be removed in some future major version update.\n    if (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\n      // \"Non-geographic entities\" did't have `possibleLengths`\n      // due to a bug in metadata generation process.\n      return true;\n    } else {\n      throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n    }\n  }\n}\nexport function isPossibleNumber(nationalNumber, metadata) {\n  //, isInternational) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'IS_POSSIBLE':\n      return true;\n    // This library ignores \"local-only\" phone numbers (for simplicity).\n    // See the readme for more info on what are \"local-only\" phone numbers.\n    // case 'IS_POSSIBLE_LOCAL_ONLY':\n    // \treturn !isInternational\n\n    default:\n      return false;\n  }\n}\n//# sourceMappingURL=isPossibleNumber_.js.map","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport isViablePhoneNumber from './isViablePhoneNumber'; // https://www.ietf.org/rfc/rfc3966.txt\n\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\nexport function parseRFC3966(text) {\n  var number;\n  var ext; // Replace \"tel:\" with \"tel=\" for parsing convenience.\n\n  text = text.replace(/^tel:/, 'tel=');\n\n  for (var _iterator = text.split(';'), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var part = _ref;\n\n    var _part$split = part.split('='),\n        _part$split2 = _slicedToArray(_part$split, 2),\n        name = _part$split2[0],\n        value = _part$split2[1];\n\n    switch (name) {\n      case 'tel':\n        number = value;\n        break;\n\n      case 'ext':\n        ext = value;\n        break;\n\n      case 'phone-context':\n        // Only \"country contexts\" are supported.\n        // \"Domain contexts\" are ignored.\n        if (value[0] === '+') {\n          number = value + number;\n        }\n\n        break;\n    }\n  } // If the phone number is not viable, then abort.\n\n\n  if (!isViablePhoneNumber(number)) {\n    return {};\n  }\n\n  var result = {\n    number: number\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\n\nexport function formatRFC3966(_ref2) {\n  var number = _ref2.number,\n      ext = _ref2.ext;\n\n  if (!number) {\n    return '';\n  }\n\n  if (number[0] !== '+') {\n    throw new Error(\"\\\"formatRFC3966()\\\" expects \\\"number\\\" to be in E.164 format.\");\n  }\n\n  return \"tel:\".concat(number).concat(ext ? ';ext=' + ext : '');\n}\n//# sourceMappingURL=RFC3966.js.map","/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\nexport default function matchesEntirely(text, regular_expression) {\n  // If assigning the `''` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  text = text || '';\n  return new RegExp('^(?:' + regular_expression + ')$').test(text);\n}\n//# sourceMappingURL=matchesEntirely.js.map","import Metadata from '../metadata';\nimport matchesEntirely from './matchesEntirely';\nvar NON_FIXED_LINE_PHONE_TYPES = ['MOBILE', 'PREMIUM_RATE', 'TOLL_FREE', 'SHARED_COST', 'VOIP', 'PERSONAL_NUMBER', 'PAGER', 'UAN', 'VOICEMAIL']; // Finds out national phone number type (fixed line, mobile, etc)\n\nexport default function getNumberType(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {}; // When `parse()` returned `{}`\n  // meaning that the phone number is not a valid one.\n\n  if (!input.country) {\n    return;\n  }\n\n  metadata = new Metadata(metadata);\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode);\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // The following is copy-pasted from the original function:\n  // https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n  // Is this national number even valid for this country\n\n  if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\n    return;\n  } // Is it fixed line number\n\n\n  if (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\n    // Because duplicate regular expressions are removed\n    // to reduce metadata size, if \"mobile\" pattern is \"\"\n    // then it means it was removed due to being a duplicate of the fixed-line pattern.\n    //\n    if (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // v1 metadata.\n    // Legacy.\n    // Deprecated.\n\n\n    if (!metadata.type('MOBILE')) {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // Check if the number happens to qualify as both fixed line and mobile.\n    // (no such country in the minimal metadata set)\n\n    /* istanbul ignore if */\n\n\n    if (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\n      return 'FIXED_LINE_OR_MOBILE';\n    }\n\n    return 'FIXED_LINE';\n  }\n\n  for (var _i = 0, _NON_FIXED_LINE_PHONE = NON_FIXED_LINE_PHONE_TYPES; _i < _NON_FIXED_LINE_PHONE.length; _i++) {\n    var type = _NON_FIXED_LINE_PHONE[_i];\n\n    if (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\n      return type;\n    }\n  }\n}\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\n  type = metadata.type(type);\n\n  if (!type || !type.pattern()) {\n    return false;\n  } // Check if any possible number lengths are present;\n  // if so, we use them to avoid checking\n  // the validation pattern if they don't match.\n  // If they are absent, this means they match\n  // the general description, which we have\n  // already checked before a specific number type.\n\n\n  if (type.possibleLengths() && type.possibleLengths().indexOf(nationalNumber.length) < 0) {\n    return false;\n  }\n\n  return matchesEntirely(nationalNumber, type.pattern());\n}\n//# sourceMappingURL=getNumberType.js.map","import Metadata from './metadata';\nimport matchesEntirely from './helpers/matchesEntirely';\nimport getNumberType from './helpers/getNumberType';\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\n\nexport default function isValidNumber(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata); // This is just to support `isValidNumber({})`\n  // for cases when `parseNumber()` returns `{}`.\n\n  if (!input.country) {\n    return false;\n  }\n\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode); // By default, countries only have type regexps when it's required for\n  // distinguishing different countries having the same `countryCallingCode`.\n\n  if (metadata.hasTypes()) {\n    return getNumberType(input, options, metadata.metadata) !== undefined;\n  } // If there are no type regexps for this country in metadata then use\n  // `nationalNumberPattern` as a \"better than nothing\" replacement.\n\n\n  var national_number = options.v2 ? input.nationalNumber : input.phone;\n  return matchesEntirely(national_number, metadata.nationalNumberPattern());\n}\n//# sourceMappingURL=validate_.js.map","import { VALID_PUNCTUATION } from '../constants'; // Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\n//\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\n//\n// \"The country calling code for all countries participating in the NANP is 1.\n// In international format, an NANP number should be listed as +1 301 555 01 00,\n// where 301 is an area code (Maryland).\"\n//\n// I personally prefer the international format without any punctuation.\n// For example, brackets are remnants of the old age, meaning that the\n// phone number part in brackets (so called \"area code\") can be omitted\n// if dialing within the same \"area\".\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\n// He has a couple of seconds to memorize that number until it passes by.\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\n// but with hyphens instead of spaces the grouping is more explicit.\n// I personally think that hyphens introduce visual clutter,\n// so I prefer replacing them with spaces in international numbers.\n// In the modern age all output is done on displays where spaces are clearly distinguishable\n// so hyphens can be safely replaced with spaces without losing any legibility.\n//\n\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\n  return formattedNumber.replace(new RegExp(\"[\".concat(VALID_PUNCTUATION, \"]+\"), 'g'), ' ').trim();\n}\n//# sourceMappingURL=applyInternationalSeparatorStyle.js.map","import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle'; // This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly. Therefore, we use `\\d`, so that the first\n// group actually used in the pattern will be matched.\n\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\nexport default function formatNationalNumberUsingFormat(number, format, _ref) {\n  var useInternationalFormat = _ref.useInternationalFormat,\n      withNationalPrefix = _ref.withNationalPrefix,\n      carrierCode = _ref.carrierCode,\n      metadata = _ref.metadata;\n  var formattedNumber = number.replace(new RegExp(format.pattern()), useInternationalFormat ? format.internationalFormat() : // This library doesn't use `domestic_carrier_code_formatting_rule`,\n  // because that one is only used when formatting phone numbers\n  // for dialing from a mobile phone, and this is not a dialing library.\n  // carrierCode && format.domesticCarrierCodeFormattingRule()\n  // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n  // \t// Then, replace the $FG in the formatting rule with the first group\n  // \t// and the carrier code combined in the appropriate way.\n  // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n  // \t: (\n  // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n  // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n  // \t\t\t: format.format()\n  // \t)\n  withNationalPrefix && format.nationalPrefixFormattingRule() ? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) : format.format());\n\n  if (useInternationalFormat) {\n    return applyInternationalSeparatorStyle(formattedNumber);\n  }\n\n  return formattedNumber;\n}\n//# sourceMappingURL=formatNationalNumberUsingFormat.js.map","import Metadata from '../metadata';\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\n\nvar SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/; // For regions that have multiple IDD prefixes\n// a preferred IDD prefix is returned.\n\nexport default function getIddPrefix(country, callingCode, metadata) {\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n\n  if (countryMetadata.defaultIDDPrefix()) {\n    return countryMetadata.defaultIDDPrefix();\n  }\n\n  if (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\n    return countryMetadata.IDDPrefix();\n  }\n}\n//# sourceMappingURL=getIddPrefix.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport matchesEntirely from './helpers/matchesEntirely';\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat';\nimport Metadata, { getCountryCallingCode } from './metadata';\nimport getIddPrefix from './helpers/getIddPrefix';\nimport { formatRFC3966 } from './helpers/RFC3966';\nvar DEFAULT_OPTIONS = {\n  formatExtension: function formatExtension(formattedNumber, extension, metadata) {\n    return \"\".concat(formattedNumber).concat(metadata.ext()).concat(extension);\n  } // Formats a phone number\n  //\n  // Example use cases:\n  //\n  // ```js\n  // formatNumber('8005553535', 'RU', 'INTERNATIONAL')\n  // formatNumber('8005553535', 'RU', 'INTERNATIONAL', metadata)\n  // formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL')\n  // formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', metadata)\n  // formatNumber('+78005553535', 'NATIONAL')\n  // formatNumber('+78005553535', 'NATIONAL', metadata)\n  // ```\n  //\n\n};\nexport default function formatNumber(input, format, options, metadata) {\n  // Apply default options.\n  if (options) {\n    options = _objectSpread({}, DEFAULT_OPTIONS, options);\n  } else {\n    options = DEFAULT_OPTIONS;\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (input.country && input.country !== '001') {\n    // Validate `input.country`.\n    if (!metadata.hasCountry(input.country)) {\n      throw new Error(\"Unknown country: \".concat(input.country));\n    }\n\n    metadata.country(input.country);\n  } else if (input.countryCallingCode) {\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else return input.phone || '';\n\n  var countryCallingCode = metadata.countryCallingCode();\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // This variable should have been declared inside `case`s\n  // but Babel has a bug and it says \"duplicate variable declaration\".\n\n  var number;\n\n  switch (format) {\n    case 'NATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return '';\n      }\n\n      number = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'INTERNATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return \"+\".concat(countryCallingCode);\n      }\n\n      number = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options);\n      number = \"+\".concat(countryCallingCode, \" \").concat(number);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'E.164':\n      // `E.164` doesn't define \"phone number extensions\".\n      return \"+\".concat(countryCallingCode).concat(nationalNumber);\n\n    case 'RFC3966':\n      return formatRFC3966({\n        number: \"+\".concat(countryCallingCode).concat(nationalNumber),\n        ext: input.ext\n      });\n    // For reference, here's Google's IDD formatter:\n    // https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\n    // Not saying that this IDD formatter replicates it 1:1, but it seems to work.\n    // Who would even need to format phone numbers in IDD format anyway?\n\n    case 'IDD':\n      if (!options.fromCountry) {\n        return; // throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\n      }\n\n      var formattedNumber = formatIDD(nationalNumber, input.carrierCode, countryCallingCode, options.fromCountry, metadata);\n      return addExtension(formattedNumber, input.ext, metadata, options.formatExtension);\n\n    default:\n      throw new Error(\"Unknown \\\"format\\\" argument passed to \\\"formatNumber()\\\": \\\"\".concat(format, \"\\\"\"));\n  }\n}\n\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\n  var format = chooseFormatForNumber(metadata.formats(), number);\n\n  if (!format) {\n    return number;\n  }\n\n  return formatNationalNumberUsingFormat(number, format, {\n    useInternationalFormat: formatAs === 'INTERNATIONAL',\n    withNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && options && options.nationalPrefix === false ? false : true,\n    carrierCode: carrierCode,\n    metadata: metadata\n  });\n}\n\nfunction chooseFormatForNumber(availableFormats, nationalNnumber) {\n  for (var _iterator = availableFormats, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var format = _ref;\n\n    // Validate leading digits\n    if (format.leadingDigitsPatterns().length > 0) {\n      // The last leading_digits_pattern is used here, as it is the most detailed\n      var lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]; // If leading digits don't match then move on to the next phone number format\n\n      if (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\n        continue;\n      }\n    } // Check that the national number matches the phone number format regular expression\n\n\n    if (matchesEntirely(nationalNnumber, format.pattern())) {\n      return format;\n    }\n  }\n}\n\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\n  return ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber;\n}\n\nfunction formatIDD(nationalNumber, carrierCode, countryCallingCode, fromCountry, metadata) {\n  var fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata); // When calling within the same country calling code.\n\n  if (fromCountryCallingCode === countryCallingCode) {\n    var formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata); // For NANPA regions, return the national format for these regions\n    // but prefix it with the country calling code.\n\n    if (countryCallingCode === '1') {\n      return countryCallingCode + ' ' + formattedNumber;\n    } // If regions share a country calling code, the country calling code need\n    // not be dialled. This also applies when dialling within a region, so this\n    // if clause covers both these cases. Technically this is the case for\n    // dialling from La Reunion to other overseas departments of France (French\n    // Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\n    // this edge case for now and for those cases return the version including\n    // country calling code. Details here:\n    // http://www.petitfute.com/voyage/225-info-pratiques-reunion\n    //\n\n\n    return formattedNumber;\n  }\n\n  var iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata);\n\n  if (iddPrefix) {\n    return \"\".concat(iddPrefix, \" \").concat(countryCallingCode, \" \").concat(formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata));\n  }\n}\n//# sourceMappingURL=format_.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport Metadata from './metadata';\nimport isPossibleNumber from './isPossibleNumber_';\nimport isValidNumber from './validate_';\nimport isValidNumberForRegion from './isValidNumberForRegion_';\nimport getNumberType from './helpers/getNumberType';\nimport formatNumber from './format_';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\n\nvar PhoneNumber =\n/*#__PURE__*/\nfunction () {\n  function PhoneNumber(countryCallingCode, nationalNumber, metadata) {\n    _classCallCheck(this, PhoneNumber);\n\n    if (!countryCallingCode) {\n      throw new TypeError('`country` or `countryCallingCode` not passed');\n    }\n\n    if (!nationalNumber) {\n      throw new TypeError('`nationalNumber` not passed');\n    }\n\n    if (!metadata) {\n      throw new TypeError('`metadata` not passed');\n    }\n\n    var _metadata = new Metadata(metadata); // If country code is passed then derive `countryCallingCode` from it.\n    // Also store the country code as `.country`.\n\n\n    if (isCountryCode(countryCallingCode)) {\n      this.country = countryCallingCode;\n\n      _metadata.country(countryCallingCode);\n\n      countryCallingCode = _metadata.countryCallingCode();\n    } else {\n      /* istanbul ignore if */\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        if (_metadata.isNonGeographicCallingCode(countryCallingCode)) {\n          this.country = '001';\n        }\n      }\n    }\n\n    this.countryCallingCode = countryCallingCode;\n    this.nationalNumber = nationalNumber;\n    this.number = '+' + this.countryCallingCode + this.nationalNumber;\n    this.metadata = metadata;\n  }\n\n  _createClass(PhoneNumber, [{\n    key: \"setExt\",\n    value: function setExt(ext) {\n      this.ext = ext;\n    }\n  }, {\n    key: \"isPossible\",\n    value: function isPossible() {\n      return isPossibleNumber(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return isValidNumber(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function isNonGeographic() {\n      var metadata = new Metadata(this.metadata);\n      return metadata.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(phoneNumber) {\n      return this.number === phoneNumber.number && this.ext === phoneNumber.ext;\n    } // // Is just an alias for `this.isValid() && this.country === country`.\n    // // https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\n    // isValidForRegion(country) {\n    // \treturn isValidNumberForRegion(this, country, { v2: true }, this.metadata)\n    // }\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return getNumberType(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"format\",\n    value: function format(_format, options) {\n      return formatNumber(this, _format, options ? _objectSpread({}, options, {\n        v2: true\n      }) : {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"formatNational\",\n    value: function formatNational(options) {\n      return this.format('NATIONAL', options);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function formatInternational(options) {\n      return this.format('INTERNATIONAL', options);\n    }\n  }, {\n    key: \"getURI\",\n    value: function getURI(options) {\n      return this.format('RFC3966', options);\n    }\n  }]);\n\n  return PhoneNumber;\n}();\n\nexport { PhoneNumber as default };\n\nvar isCountryCode = function isCountryCode(value) {\n  return /^[A-Z]{2}$/.test(value);\n};\n//# sourceMappingURL=PhoneNumber.js.map","import Metadata from '../metadata';\nimport { VALID_DIGITS } from '../constants';\nvar CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])');\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\n  if (!country) {\n    return;\n  } // Check if the number is IDD-prefixed.\n\n\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n  var IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix());\n\n  if (number.search(IDDPrefixPattern) !== 0) {\n    return;\n  } // Strip IDD prefix.\n\n\n  number = number.slice(number.match(IDDPrefixPattern)[0].length); // If there're any digits after an IDD prefix,\n  // then those digits are a country calling code.\n  // Since no country code starts with a `0`,\n  // the code below validates that the next digit (if present) is not `0`.\n\n  var matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);\n\n  if (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\n    if (matchedGroups[1] === '0') {\n      return;\n    }\n  }\n\n  return number;\n}\n//# sourceMappingURL=stripIddPrefix.js.map","/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`.\r\n */\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\n  if (number && metadata.numberingPlan.nationalPrefixForParsing()) {\n    // See METADATA.md for the description of\n    // `national_prefix_for_parsing` and `national_prefix_transform_rule`.\n    // Attempt to parse the first digits as a national prefix.\n    var prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')');\n    var prefixMatch = prefixPattern.exec(number);\n\n    if (prefixMatch) {\n      var nationalNumber;\n      var carrierCode; // https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\n      // If a `national_prefix_for_parsing` has any \"capturing groups\"\n      // then it means that the national (significant) number is equal to\n      // those \"capturing groups\" transformed via `national_prefix_transform_rule`,\n      // and nothing could be said about the actual national prefix:\n      // what is it and was it even there.\n      // If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\n      // then everything it matches is a national prefix.\n      // To determine whether `national_prefix_for_parsing` matched any\n      // \"capturing groups\", the value of the result of calling `.exec()`\n      // is looked at, and if it has non-undefined values where there're\n      // \"capturing groups\" in the regular expression, then it means\n      // that \"capturing groups\" have been matched.\n      // It's not possible to tell whether there'll be any \"capturing gropus\"\n      // before the matching process, because a `national_prefix_for_parsing`\n      // could exhibit both behaviors.\n\n      var capturedGroupsCount = prefixMatch.length - 1;\n      var hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount];\n\n      if (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\n        nationalNumber = number.replace(prefixPattern, metadata.nationalPrefixTransformRule()); // If there's more than one captured group,\n        // then carrier code is the second one.\n\n        if (capturedGroupsCount > 1) {\n          carrierCode = prefixMatch[1];\n        }\n      } // If there're no \"capturing groups\",\n      // or if there're \"capturing groups\" but no\n      // `national_prefix_transform_rule`,\n      // then just strip the national prefix from the number,\n      // and possibly a carrier code.\n      // Seems like there could be more.\n      else {\n          // `prefixBeforeNationalNumber` is the whole substring matched by\n          // the `national_prefix_for_parsing` regular expression.\n          // There seem to be no guarantees that it's just a national prefix.\n          // For example, if there's a carrier code, it's gonna be a\n          // part of `prefixBeforeNationalNumber` too.\n          var prefixBeforeNationalNumber = prefixMatch[0];\n          nationalNumber = number.slice(prefixBeforeNationalNumber.length); // If there's at least one captured group,\n          // then carrier code is the first one.\n\n          if (hasCapturedGroups) {\n            carrierCode = prefixMatch[1];\n          }\n        } // Tries to guess whether a national prefix was present in the input.\n      // This is not something copy-pasted from Google's library:\n      // they don't seem to have an equivalent for that.\n      // So this isn't an \"officially approved\" way of doing something like that.\n      // But since there seems no other existing method, this library uses it.\n\n\n      var nationalPrefix;\n\n      if (hasCapturedGroups) {\n        var possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1]);\n        var possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup); // Example: an Argentinian (AR) phone number `0111523456789`.\n        // `prefixMatch[0]` is `01115`, and `$1` is `11`,\n        // and the rest of the phone number is `23456789`.\n        // The national number is transformed via `9$1` to `91123456789`.\n        // National prefix `0` is detected being present at the start.\n        // if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\n\n        if (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\n          nationalPrefix = metadata.numberingPlan.nationalPrefix();\n        }\n      } else {\n        nationalPrefix = prefixMatch[0];\n      }\n\n      return {\n        nationalNumber: nationalNumber,\n        nationalPrefix: nationalPrefix,\n        carrierCode: carrierCode\n      };\n    }\n  }\n\n  return {\n    nationalNumber: number\n  };\n}\n//# sourceMappingURL=extractNationalNumberFromPossiblyIncompleteNumber.js.map","import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber';\nimport matchesEntirely from './matchesEntirely';\nimport checkNumberLength from './checkNumberLength';\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\n\nexport default function extractNationalNumber(number, metadata) {\n  // Parsing national prefixes and carrier codes\n  // is only required for local phone numbers\n  // but some people don't understand that\n  // and sometimes write international phone numbers\n  // with national prefixes (or maybe even carrier codes).\n  // http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\n  // Google's original library forgives such mistakes\n  // and so does this library, because it has been requested:\n  // https://github.com/catamphetamine/libphonenumber-js/issues/127\n  var _extractNationalNumbe = extractNationalNumberFromPossiblyIncompleteNumber(number, metadata),\n      nationalNumber = _extractNationalNumbe.nationalNumber,\n      carrierCode = _extractNationalNumbe.carrierCode;\n\n  if (!shouldExtractNationalPrefix(number, nationalNumber, metadata)) {\n    // Don't strip the national prefix.\n    return {\n      nationalNumber: number\n    };\n  } // If a national prefix has been extracted, check to see\n  // if the resultant number isn't too short.\n  // Same code in Google's `libphonenumber`:\n  // https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3291-L3302\n  // For some reason, they do this check right after the `national_number_pattern` check\n  // this library does in `shouldExtractNationalPrefix()` function.\n  // Why is there a second \"resultant\" number validity check?\n  // They don't provide an explanation.\n  // This library just copies the behavior.\n\n\n  if (number.length !== nationalNumber.length + (carrierCode ? carrierCode.length : 0)) {\n    // If not using legacy generated metadata (before version `1.0.18`)\n    // then it has \"possible lengths\", so use those to validate the number length.\n    if (metadata.possibleLengths()) {\n      // \"We require that the NSN remaining after stripping the national prefix and\n      // carrier code be long enough to be a possible length for the region.\n      // Otherwise, we don't do the stripping, since the original number could be\n      // a valid short number.\"\n      // https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\n      switch (checkNumberLength(nationalNumber, metadata)) {\n        case 'TOO_SHORT':\n        case 'INVALID_LENGTH':\n          // case 'IS_POSSIBLE_LOCAL_ONLY':\n          // Don't strip the national prefix.\n          return {\n            nationalNumber: number\n          };\n      }\n    }\n  }\n\n  return {\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n} // In some countries, the same digit could be a national prefix\n// or a leading digit of a valid phone number.\n// For example, in Russia, national prefix is `8`,\n// and also `800 555 35 35` is a valid number\n// in which `8` is not a national prefix, but the first digit\n// of a national (significant) number.\n// Same's with Belarus:\n// `82004910060` is a valid national (significant) number,\n// but `2004910060` is not.\n// To support such cases (to prevent the code from always stripping\n// national prefix), a condition is imposed: a national prefix\n// is not extracted when the original number is \"viable\" and the\n// resultant number is not, a \"viable\" national number being the one\n// that matches `national_number_pattern`.\n\nfunction shouldExtractNationalPrefix(number, nationalSignificantNumber, metadata) {\n  // The equivalent in Google's code is:\n  // https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\n  if (matchesEntirely(number, metadata.nationalNumberPattern()) && !matchesEntirely(nationalSignificantNumber, metadata.nationalNumberPattern())) {\n    return false;\n  } // Just \"possible\" number check would be more relaxed, so it's not used.\n  // if (isPossibleNumber(number, metadata) &&\n  // \t!isPossibleNumber(numberWithNationalPrefixExtracted, metadata)) {\n  // \treturn false\n  // }\n\n\n  return true;\n}\n//# sourceMappingURL=extractNationalNumber.js.map","import Metadata from '../metadata';\nimport matchesEntirely from './matchesEntirely';\nimport extractNationalNumber from './extractNationalNumber';\nimport checkNumberLength from './checkNumberLength';\nimport getCountryCallingCode from '../getCountryCallingCode';\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\n\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata) {\n  var countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode;\n\n  if (number.indexOf(countryCallingCode) === 0) {\n    metadata = new Metadata(metadata);\n    metadata.selectNumberingPlan(country, callingCode);\n    var possibleShorterNumber = number.slice(countryCallingCode.length);\n\n    var _extractNationalNumbe = extractNationalNumber(possibleShorterNumber, metadata),\n        possibleShorterNationalNumber = _extractNationalNumbe.nationalNumber;\n\n    var _extractNationalNumbe2 = extractNationalNumber(number, metadata),\n        nationalNumber = _extractNationalNumbe2.nationalNumber; // If the number was not valid before but is valid now,\n    // or if it was too long before, we consider the number\n    // with the country calling code stripped to be a better result\n    // and keep that instead.\n    // For example, in Germany (+49), `49` is a valid area code,\n    // so if a number starts with `49`, it could be both a valid\n    // national German number or an international number without\n    // a leading `+`.\n\n\n    if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) && matchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern()) || checkNumberLength(nationalNumber, metadata) === 'TOO_LONG') {\n      return {\n        countryCallingCode: countryCallingCode,\n        number: possibleShorterNumber\n      };\n    }\n  }\n\n  return {\n    number: number\n  };\n}\n//# sourceMappingURL=extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js.map","import stripIddPrefix from './stripIddPrefix';\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign';\nimport Metadata from '../metadata';\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants';\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\n\nexport default function extractCountryCallingCode(number, country, callingCode, metadata) {\n  if (!number) {\n    return {};\n  } // If this is not an international phone number,\n  // then either extract an \"IDD\" prefix, or extract a\n  // country calling code from a number by autocorrecting it\n  // by prepending a leading `+` in cases when it starts\n  // with the country calling code.\n  // https://wikitravel.org/en/International_dialling_prefix\n  // https://github.com/catamphetamine/libphonenumber-js/issues/376\n\n\n  if (number[0] !== '+') {\n    // Convert an \"out-of-country\" dialing phone number\n    // to a proper international phone number.\n    var numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata); // If an IDD prefix was stripped then\n    // convert the number to international one\n    // for subsequent parsing.\n\n    if (numberWithoutIDD && numberWithoutIDD !== number) {\n      number = '+' + numberWithoutIDD;\n    } else {\n      // Check to see if the number starts with the country calling code\n      // for the default country. If so, we remove the country calling code,\n      // and do some checks on the validity of the number before and after.\n      // https://github.com/catamphetamine/libphonenumber-js/issues/376\n      if (country || callingCode) {\n        var _extractCountryCallin = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata),\n            countryCallingCode = _extractCountryCallin.countryCallingCode,\n            shorterNumber = _extractCountryCallin.number;\n\n        if (countryCallingCode) {\n          return {\n            countryCallingCode: countryCallingCode,\n            number: shorterNumber\n          };\n        }\n      }\n\n      return {\n        number: number\n      };\n    }\n  } // Fast abortion: country codes do not begin with a '0'\n\n\n  if (number[1] === '0') {\n    return {};\n  }\n\n  metadata = new Metadata(metadata); // The thing with country phone codes\n  // is that they are orthogonal to each other\n  // i.e. there's no such country phone code A\n  // for which country phone code B exists\n  // where B starts with A.\n  // Therefore, while scanning digits,\n  // if a valid country code is found,\n  // that means that it is the country code.\n  //\n\n  var i = 2;\n\n  while (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n    var _countryCallingCode = number.slice(1, i);\n\n    if (metadata.hasCallingCode(_countryCallingCode)) {\n      metadata.selectNumberingPlan(_countryCallingCode);\n      return {\n        countryCallingCode: _countryCallingCode,\n        number: number.slice(i)\n      };\n    }\n\n    i++;\n  }\n\n  return {};\n}\n//# sourceMappingURL=extractCountryCallingCode.js.map","import Metadata from '../metadata';\nimport getNumberType from './getNumberType';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\nexport default function getCountryByCallingCode(callingCode, nationalPhoneNumber, metadata) {\n  /* istanbul ignore if */\n  if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n    if (metadata.isNonGeographicCallingCode(callingCode)) {\n      return '001';\n    }\n  } // Is always non-empty, because `callingCode` is always valid\n\n\n  var possibleCountries = metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return;\n  } // If there's just one country corresponding to the country code,\n  // then just return it, without further phone number digits validation.\n\n\n  if (possibleCountries.length === 1) {\n    return possibleCountries[0];\n  }\n\n  return selectCountryFromList(possibleCountries, nationalPhoneNumber, metadata.metadata);\n}\n\nfunction selectCountryFromList(possibleCountries, nationalPhoneNumber, metadata) {\n  // Re-create `metadata` because it will be selecting a `country`.\n  metadata = new Metadata(metadata);\n\n  for (var _iterator = possibleCountries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var country = _ref;\n    metadata.country(country); // Leading digits check would be the simplest and fastest one.\n    // Leading digits patterns are only defined for about 20% of all countries.\n    // https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\n    // Matching \"leading digits\" is a sufficient but not necessary condition.\n\n    if (metadata.leadingDigits()) {\n      if (nationalPhoneNumber && nationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\n        return country;\n      }\n    } // Else perform full validation with all of those\n    // fixed-line/mobile/etc regular expressions.\n    else if (getNumberType({\n        phone: nationalPhoneNumber,\n        country: country\n      }, undefined, metadata.metadata)) {\n        return country;\n      }\n  }\n}\n//# sourceMappingURL=getCountryByCallingCode.js.map","// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport { VALID_DIGITS, PLUS_CHARS, MIN_LENGTH_FOR_NSN, MAX_LENGTH_FOR_NSN } from './constants';\nimport ParseError from './ParseError';\nimport Metadata from './metadata';\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber';\nimport extractExtension from './helpers/extension/extractExtension';\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber';\nimport getCountryCallingCode from './getCountryCallingCode';\nimport { isPossibleNumber } from './isPossibleNumber_';\nimport { parseRFC3966 } from './helpers/RFC3966';\nimport PhoneNumber from './PhoneNumber';\nimport matchesEntirely from './helpers/matchesEntirely';\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode';\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign';\nimport extractNationalNumber from './helpers/extractNationalNumber';\nimport stripIddPrefix from './helpers/stripIddPrefix';\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode'; // We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\n\nvar MAX_INPUT_STRING_LENGTH = 250; // This consists of the plus symbol, digits, and arabic-indic digits.\n\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']'); // Regular expression of trailing characters that we want to remove.\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\n\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$');\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false; // Examples:\n//\n// ```js\n// parse('8 (800) 555-35-35', 'RU')\n// parse('8 (800) 555-35-35', 'RU', metadata)\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n// parse('+7 800 555 35 35')\n// parse('+7 800 555 35 35', metadata)\n// ```\n//\n\nexport default function parse(text, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata); // Validate `defaultCountry`.\n\n  if (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    throw new Error(\"Unknown country: \".concat(options.defaultCountry));\n  } // Parse the phone number.\n\n\n  var _parseInput = parseInput(text, options.v2, options.extract),\n      formattedPhoneNumber = _parseInput.number,\n      ext = _parseInput.ext,\n      error = _parseInput.error; // If the phone number is not viable then return nothing.\n\n\n  if (!formattedPhoneNumber) {\n    if (options.v2) {\n      if (error === 'TOO_SHORT') {\n        throw new ParseError('TOO_SHORT');\n      }\n\n      throw new ParseError('NOT_A_NUMBER');\n    }\n\n    return {};\n  }\n\n  var _parsePhoneNumber = parsePhoneNumber(formattedPhoneNumber, options.defaultCountry, options.defaultCallingCode, metadata),\n      country = _parsePhoneNumber.country,\n      nationalNumber = _parsePhoneNumber.nationalNumber,\n      countryCallingCode = _parsePhoneNumber.countryCallingCode,\n      carrierCode = _parsePhoneNumber.carrierCode;\n\n  if (!metadata.hasSelectedNumberingPlan()) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    return {};\n  } // Validate national (significant) number length.\n\n\n  if (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\n    // Won't throw here because the regexp already demands length > 1.\n\n    /* istanbul ignore if */\n    if (options.v2) {\n      throw new ParseError('TOO_SHORT');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  } // Validate national (significant) number length.\n  //\n  // A sidenote:\n  //\n  // They say that sometimes national (significant) numbers\n  // can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n  // https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n  // Such numbers will just be discarded.\n  //\n\n\n  if (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\n    if (options.v2) {\n      throw new ParseError('TOO_LONG');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  }\n\n  if (options.v2) {\n    var phoneNumber = new PhoneNumber(countryCallingCode, nationalNumber, metadata.metadata);\n\n    if (country) {\n      phoneNumber.country = country;\n    }\n\n    if (carrierCode) {\n      phoneNumber.carrierCode = carrierCode;\n    }\n\n    if (ext) {\n      phoneNumber.ext = ext;\n    }\n\n    return phoneNumber;\n  } // Check if national phone number pattern matches the number.\n  // National number pattern is different for each country,\n  // even for those ones which are part of the \"NANPA\" group.\n\n\n  var valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ? matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) : false;\n\n  if (!options.extended) {\n    return valid ? result(country, nationalNumber, ext) : {};\n  } // isInternational: countryCallingCode !== undefined\n\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    carrierCode: carrierCode,\n    valid: valid,\n    possible: valid ? true : options.extended === true && metadata.possibleLengths() && isPossibleNumber(nationalNumber, metadata) ? true : false,\n    phone: nationalNumber,\n    ext: ext\n  };\n}\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\n\nfunction extractFormattedPhoneNumber(text, extract, throwOnError) {\n  if (!text) {\n    return;\n  }\n\n  if (text.length > MAX_INPUT_STRING_LENGTH) {\n    if (throwOnError) {\n      throw new ParseError('TOO_LONG');\n    }\n\n    return;\n  }\n\n  if (extract === false) {\n    return text;\n  } // Attempt to extract a possible number from the string passed in\n\n\n  var startsAt = text.search(PHONE_NUMBER_START_PATTERN);\n\n  if (startsAt < 0) {\n    return;\n  }\n\n  return text // Trim everything to the left of the phone number\n  .slice(startsAt) // Remove trailing non-numerical characters\n  .replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\n\nfunction parseInput(text, v2, extract) {\n  // Parse RFC 3966 phone number URI.\n  if (text && text.indexOf('tel:') === 0) {\n    return parseRFC3966(text);\n  }\n\n  var number = extractFormattedPhoneNumber(text, extract, v2); // If the phone number is not viable, then abort.\n\n  if (!number) {\n    return {};\n  }\n\n  if (!isViablePhoneNumber(number)) {\n    if (isViablePhoneNumberStart(number)) {\n      return {\n        error: 'TOO_SHORT'\n      };\n    }\n\n    return {};\n  } // Attempt to parse extension first, since it doesn't require region-specific\n  // data and we want to have the non-normalised number here.\n\n\n  var withExtensionStripped = extractExtension(number);\n\n  if (withExtensionStripped.ext) {\n    return withExtensionStripped;\n  }\n\n  return {\n    number: number\n  };\n}\n/**\r\n * Creates `parse()` result object.\r\n */\n\n\nfunction result(country, nationalNumber, ext) {\n  var result = {\n    country: country,\n    phone: nationalNumber\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\n\n\nfunction parsePhoneNumber(formattedPhoneNumber, defaultCountry, defaultCallingCode, metadata) {\n  // Extract calling code from phone number.\n  var _extractCountryCallin = extractCountryCallingCode(parseIncompletePhoneNumber(formattedPhoneNumber), defaultCountry, defaultCallingCode, metadata.metadata),\n      countryCallingCode = _extractCountryCallin.countryCallingCode,\n      number = _extractCountryCallin.number; // Choose a country by `countryCallingCode`.\n\n\n  var country;\n\n  if (countryCallingCode) {\n    metadata.selectNumberingPlan(countryCallingCode);\n  } // If `formattedPhoneNumber` is in \"national\" format\n  // then `number` is defined and `countryCallingCode` isn't.\n  else if (number && (defaultCountry || defaultCallingCode)) {\n      metadata.selectNumberingPlan(defaultCountry, defaultCallingCode);\n\n      if (defaultCountry) {\n        country = defaultCountry;\n      } else {\n        /* istanbul ignore if */\n        if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n          if (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\n            country = '001';\n          }\n        }\n      }\n\n      countryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata);\n    } else return {};\n\n  if (!number) {\n    return {\n      countryCallingCode: countryCallingCode\n    };\n  }\n\n  var _extractNationalNumbe = extractNationalNumber(parseIncompletePhoneNumber(number), metadata),\n      nationalNumber = _extractNationalNumbe.nationalNumber,\n      carrierCode = _extractNationalNumbe.carrierCode; // Sometimes there are several countries\n  // corresponding to the same country phone code\n  // (e.g. NANPA countries all having `1` country phone code).\n  // Therefore, to reliably determine the exact country,\n  // national (significant) number should have been parsed first.\n  //\n  // When `metadata.json` is generated, all \"ambiguous\" country phone codes\n  // get their countries populated with the full set of\n  // \"phone number type\" regular expressions.\n  //\n\n\n  var exactCountry = getCountryByCallingCode(countryCallingCode, nationalNumber, metadata);\n\n  if (exactCountry) {\n    country = exactCountry;\n    /* istanbul ignore if */\n\n    if (exactCountry === '001') {// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\n      // If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\n      // then remove the \"istanbul ignore if\".\n    } else {\n      metadata.country(country);\n    }\n  }\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n}\n//# sourceMappingURL=parse_.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parseNumber from './parse_';\nexport default function parsePhoneNumber(text, options, metadata) {\n  return parseNumber(text, _objectSpread({}, options, {\n    v2: true\n  }), metadata);\n}\n//# sourceMappingURL=parsePhoneNumber_.js.map","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport parsePhoneNumber_ from './parsePhoneNumber_';\nexport default function parsePhoneNumber() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return parsePhoneNumber_(text, options, metadata);\n}\nexport function normalizeArguments(args) {\n  var _Array$prototype$slic = Array.prototype.slice.call(args),\n      _Array$prototype$slic2 = _slicedToArray(_Array$prototype$slic, 4),\n      arg_1 = _Array$prototype$slic2[0],\n      arg_2 = _Array$prototype$slic2[1],\n      arg_3 = _Array$prototype$slic2[2],\n      arg_4 = _Array$prototype$slic2[3];\n\n  var text;\n  var options;\n  var metadata; // If the phone number is passed as a string.\n  // `parsePhoneNumber('88005553535', ...)`.\n\n  if (typeof arg_1 === 'string') {\n    text = arg_1;\n  } else throw new TypeError('A text for parsing must be a string.'); // If \"default country\" argument is being passed then move it to `options`.\n  // `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\n\n\n  if (!arg_2 || typeof arg_2 === 'string') {\n    if (arg_4) {\n      options = arg_3;\n      metadata = arg_4;\n    } else {\n      options = undefined;\n      metadata = arg_3;\n    }\n\n    if (arg_2) {\n      options = _objectSpread({\n        defaultCountry: arg_2\n      }, options);\n    }\n  } // `defaultCountry` is not passed.\n  // Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\n  else if (isObject(arg_2)) {\n      if (arg_3) {\n        options = arg_2;\n        metadata = arg_3;\n      } else {\n        metadata = arg_2;\n      }\n    } else throw new Error(\"Invalid second argument: \".concat(arg_2));\n\n  return {\n    text: text,\n    options: options,\n    metadata: metadata\n  };\n} // Otherwise istanbul would show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\nvar isObject = function isObject(_) {\n  return _typeof(_) === 'object';\n};\n//# sourceMappingURL=parsePhoneNumber.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parsePhoneNumber from './parsePhoneNumber_';\nimport ParseError from './ParseError';\nimport { isSupportedCountry } from './metadata';\nexport default function parsePhoneNumberFromString(text, options, metadata) {\n  // Validate `defaultCountry`.\n  if (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\n    options = _objectSpread({}, options, {\n      defaultCountry: undefined\n    });\n  } // Parse phone number.\n\n\n  try {\n    return parsePhoneNumber(text, options, metadata);\n  } catch (error) {\n    /* istanbul ignore else */\n    if (error instanceof ParseError) {//\n    } else {\n      throw error;\n    }\n  }\n}\n//# sourceMappingURL=parsePhoneNumberFromString_.js.map","import { normalizeArguments } from './parsePhoneNumber';\nimport parsePhoneNumberFromString_ from './parsePhoneNumberFromString_';\nexport default function parsePhoneNumberFromString() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return parsePhoneNumberFromString_(text, options, metadata);\n}\n//# sourceMappingURL=parsePhoneNumberFromString.js.map","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// https://medium.com/dsinjs/implementing-lru-cache-in-javascript-94ba6755cda9\nvar Node = function Node(key, value) {\n  var next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var prev = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  _classCallCheck(this, Node);\n\n  this.key = key;\n  this.value = value;\n  this.next = next;\n  this.prev = prev;\n};\n\nvar LRUCache =\n/*#__PURE__*/\nfunction () {\n  //set default limit of 10 if limit is not passed.\n  function LRUCache() {\n    var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n\n    _classCallCheck(this, LRUCache);\n\n    this.size = 0;\n    this.limit = limit;\n    this.head = null;\n    this.tail = null;\n    this.cache = {};\n  } // Write Node to head of LinkedList\n  // update cache with Node key and Node reference\n\n\n  _createClass(LRUCache, [{\n    key: \"put\",\n    value: function put(key, value) {\n      this.ensureLimit();\n\n      if (!this.head) {\n        this.head = this.tail = new Node(key, value);\n      } else {\n        var node = new Node(key, value, this.head);\n        this.head.prev = node;\n        this.head = node;\n      } //Update the cache map\n\n\n      this.cache[key] = this.head;\n      this.size++;\n    } // Read from cache map and make that node as new Head of LinkedList\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      if (this.cache[key]) {\n        var value = this.cache[key].value; // node removed from it's position and cache\n\n        this.remove(key); // write node again to the head of LinkedList to make it most recently used\n\n        this.put(key, value);\n        return value;\n      }\n\n      console.log(\"Item not available in cache for key \".concat(key));\n    }\n  }, {\n    key: \"ensureLimit\",\n    value: function ensureLimit() {\n      if (this.size === this.limit) {\n        this.remove(this.tail.key);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      var node = this.cache[key];\n\n      if (node.prev !== null) {\n        node.prev.next = node.next;\n      } else {\n        this.head = node.next;\n      }\n\n      if (node.next !== null) {\n        node.next.prev = node.prev;\n      } else {\n        this.tail = node.prev;\n      }\n\n      delete this.cache[key];\n      this.size--;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = null;\n      this.tail = null;\n      this.size = 0;\n      this.cache = {};\n    } // // Invokes the callback function with every node of the chain and the index of the node.\n    // forEach(fn) {\n    //   let node = this.head;\n    //   let counter = 0;\n    //   while (node) {\n    //     fn(node, counter);\n    //     node = node.next;\n    //     counter++;\n    //   }\n    // }\n    // // To iterate over LRU with a 'for...of' loop\n    // *[Symbol.iterator]() {\n    //   let node = this.head;\n    //   while (node) {\n    //     yield node;\n    //     node = node.next;\n    //   }\n    // }\n\n  }]);\n\n  return LRUCache;\n}();\n\nexport { LRUCache as default };\n//# sourceMappingURL=LRUCache.js.map","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport LRUCache from './LRUCache'; // A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\n// countries being used for the same doc with ~10 patterns for each country. Some pages will have\n// a lot more countries in use, but typically fewer numbers for each so expanding the cache for\n// that use-case won't have a lot of benefit.\n\nvar RegExpCache =\n/*#__PURE__*/\nfunction () {\n  function RegExpCache(size) {\n    _classCallCheck(this, RegExpCache);\n\n    this.cache = new LRUCache(size);\n  }\n\n  _createClass(RegExpCache, [{\n    key: \"getPatternForRegExp\",\n    value: function getPatternForRegExp(pattern) {\n      var regExp = this.cache.get(pattern);\n\n      if (!regExp) {\n        regExp = new RegExp('^' + pattern);\n        this.cache.put(pattern, regExp);\n      }\n\n      return regExp;\n    }\n  }]);\n\n  return RegExpCache;\n}();\n\nexport { RegExpCache as default };\n//# sourceMappingURL=RegExpCache.js.map","/** Returns a regular expression quantifier with an upper and lower limit. */\nexport function limit(lower, upper) {\n  if (lower < 0 || upper <= 0 || upper < lower) {\n    throw new TypeError();\n  }\n\n  return \"{\".concat(lower, \",\").concat(upper, \"}\");\n}\n/**\r\n * Trims away any characters after the first match of {@code pattern} in {@code candidate},\r\n * returning the trimmed version.\r\n */\n\nexport function trimAfterFirstMatch(regexp, string) {\n  var index = string.search(regexp);\n\n  if (index >= 0) {\n    return string.slice(0, index);\n  }\n\n  return string;\n}\nexport function startsWith(string, substring) {\n  return string.indexOf(substring) === 0;\n}\nexport function endsWith(string, substring) {\n  return string.indexOf(substring, string.length - substring.length) === string.length - substring.length;\n}\n//# sourceMappingURL=util.js.map","// Javascript doesn't support UTF-8 regular expressions.\n// So mimicking them here.\n// Copy-pasted from `PhoneNumberMatcher.js`.\n\n/**\r\n * \"\\p{Z}\" is any kind of whitespace or invisible separator (\"Separator\").\r\n * http://www.regular-expressions.info/unicode.html\r\n * \"\\P{Z}\" is the reverse of \"\\p{Z}\".\r\n * \"\\p{N}\" is any kind of numeric character in any script (\"Number\").\r\n * \"\\p{Nd}\" is a digit zero through nine in any script except \"ideographic scripts\" (\"Decimal_Digit_Number\").\r\n * \"\\p{Sc}\" is a currency symbol (\"Currency_Symbol\").\r\n * \"\\p{L}\" is any kind of letter from any language (\"Letter\").\r\n * \"\\p{Mn}\" is \"non-spacing mark\".\r\n *\r\n * Javascript doesn't support Unicode Regular Expressions\r\n * so substituting it with this explicit set of characters.\r\n *\r\n * https://stackoverflow.com/questions/13210194/javascript-regex-equivalent-of-a-za-z-using-pl\r\n * https://github.com/danielberndt/babel-plugin-utf-8-regex/blob/master/src/transformer.js\r\n */\nvar _pZ = \" \\xA0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\";\nexport var pZ = \"[\".concat(_pZ, \"]\");\nexport var PZ = \"[^\".concat(_pZ, \"]\");\nexport var _pN = \"0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19\"; // const pN = `[${_pN}]`\n\nvar _pNd = \"0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19\";\nexport var pNd = \"[\".concat(_pNd, \"]\");\nexport var _pL = \"A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar pL = \"[\".concat(_pL, \"]\");\nvar pL_regexp = new RegExp(pL);\nvar _pSc = \"$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20B9\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6\";\nvar pSc = \"[\".concat(_pSc, \"]\");\nvar pSc_regexp = new RegExp(pSc);\nvar _pMn = \"\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u08FE\\u0900-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26\";\nvar pMn = \"[\".concat(_pMn, \"]\");\nvar pMn_regexp = new RegExp(pMn);\nvar _InBasic_Latin = \"\\0-\\x7F\";\nvar _InLatin_1_Supplement = \"\\x80-\\xFF\";\nvar _InLatin_Extended_A = \"\\u0100-\\u017F\";\nvar _InLatin_Extended_Additional = \"\\u1E00-\\u1EFF\";\nvar _InLatin_Extended_B = \"\\u0180-\\u024F\";\nvar _InCombining_Diacritical_Marks = \"\\u0300-\\u036F\";\nvar latinLetterRegexp = new RegExp('[' + _InBasic_Latin + _InLatin_1_Supplement + _InLatin_Extended_A + _InLatin_Extended_Additional + _InLatin_Extended_B + _InCombining_Diacritical_Marks + ']');\n/**\r\n * Helper method to determine if a character is a Latin-script letter or not.\r\n * For our purposes, combining marks should also return true since we assume\r\n * they have been added to a preceding Latin character.\r\n */\n\nexport function isLatinLetter(letter) {\n  // Combining marks are a subset of non-spacing-mark.\n  if (!pL_regexp.test(letter) && !pMn_regexp.test(letter)) {\n    return false;\n  }\n\n  return latinLetterRegexp.test(letter);\n}\nexport function isInvalidPunctuationSymbol(character) {\n  return character === '%' || pSc_regexp.test(character);\n}\n//# sourceMappingURL=utf-8.js.map","import isValidNumber from '../validate_';\nimport parseDigits from '../helpers/parseDigits';\nimport { startsWith, endsWith } from './util';\n/**\r\n * Leniency when finding potential phone numbers in text segments\r\n * The levels here are ordered in increasing strictness.\r\n */\n\nexport default {\n  /**\r\n   * Phone numbers accepted are \"possible\", but not necessarily \"valid\".\r\n   */\n  POSSIBLE: function POSSIBLE(number, candidate, metadata) {\n    return true;\n  },\n\n  /**\r\n   * Phone numbers accepted are \"possible\" and \"valid\".\r\n   * Numbers written in national format must have their national-prefix\r\n   * present if it is usually written for a number of this type.\r\n   */\n  VALID: function VALID(number, candidate, metadata) {\n    if (!isValidNumber(number, undefined, metadata) || !containsOnlyValidXChars(number, candidate.toString(), metadata)) {\n      return false;\n    } // Skipped for simplicity.\n    // return isNationalPrefixPresentIfRequired(number, metadata)\n\n\n    return true;\n  },\n\n  /**\r\n   * Phone numbers accepted are \"valid\" and\r\n   * are grouped in a possible way for this locale. For example, a US number written as\r\n   * \"65 02 53 00 00\" and \"650253 0000\" are not accepted at this leniency level, whereas\r\n   * \"650 253 0000\", \"650 2530000\" or \"6502530000\" are.\r\n   * Numbers with more than one '/' symbol in the national significant number\r\n   * are also dropped at this level.\r\n   *\r\n   * Warning: This level might result in lower coverage especially for regions outside of\r\n   * country code \"+1\". If you are not sure about which level to use,\r\n   * email the discussion group libphonenumber-discuss@googlegroups.com.\r\n   */\n  STRICT_GROUPING: function STRICT_GROUPING(number, candidate, metadata, regExpCache) {\n    var candidateString = candidate.toString();\n\n    if (!isValidNumber(number, undefined, metadata) || !containsOnlyValidXChars(number, candidateString, metadata) || containsMoreThanOneSlashInNationalNumber(number, candidateString) || !isNationalPrefixPresentIfRequired(number, metadata)) {\n      return false;\n    }\n\n    return checkNumberGroupingIsValid(number, candidate, metadata, allNumberGroupsRemainGrouped, regExpCache);\n  },\n\n  /**\r\n   * Phone numbers accepted are {@linkplain PhoneNumberUtil#isValidNumber(PhoneNumber) valid} and\r\n   * are grouped in the same way that we would have formatted it, or as a single block. For\r\n   * example, a US number written as \"650 2530000\" is not accepted at this leniency level, whereas\r\n   * \"650 253 0000\" or \"6502530000\" are.\r\n   * Numbers with more than one '/' symbol are also dropped at this level.\r\n   * <p>\r\n   * Warning: This level might result in lower coverage especially for regions outside of country\r\n   * code \"+1\". If you are not sure about which level to use, email the discussion group\r\n   * libphonenumber-discuss@googlegroups.com.\r\n   */\n  EXACT_GROUPING: function EXACT_GROUPING(number, candidate, metadata, regExpCache) {\n    var candidateString = candidate.toString();\n\n    if (!isValidNumber(number, undefined, metadata) || !containsOnlyValidXChars(number, candidateString, metadata) || containsMoreThanOneSlashInNationalNumber(number, candidateString) || !isNationalPrefixPresentIfRequired(number, metadata)) {\n      return false;\n    }\n\n    return checkNumberGroupingIsValid(number, candidate, metadata, allNumberGroupsAreExactlyPresent, regExpCache);\n  }\n};\n\nfunction containsOnlyValidXChars(number, candidate, metadata) {\n  // The characters 'x' and 'X' can be (1) a carrier code, in which case they always precede the\n  // national significant number or (2) an extension sign, in which case they always precede the\n  // extension number. We assume a carrier code is more than 1 digit, so the first case has to\n  // have more than 1 consecutive 'x' or 'X', whereas the second case can only have exactly 1 'x'\n  // or 'X'. We ignore the character if it appears as the last character of the string.\n  for (var index = 0; index < candidate.length - 1; index++) {\n    var charAtIndex = candidate.charAt(index);\n\n    if (charAtIndex === 'x' || charAtIndex === 'X') {\n      var charAtNextIndex = candidate.charAt(index + 1);\n\n      if (charAtNextIndex === 'x' || charAtNextIndex === 'X') {\n        // This is the carrier code case, in which the 'X's always precede the national\n        // significant number.\n        index++;\n\n        if (util.isNumberMatch(number, candidate.substring(index)) != MatchType.NSN_MATCH) {\n          return false;\n        } // This is the extension sign case, in which the 'x' or 'X' should always precede the\n        // extension number.\n\n      } else if (parseDigits(candidate.substring(index)) !== number.ext) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction isNationalPrefixPresentIfRequired(number, _metadata) {\n  // First, check how we deduced the country code. If it was written in international format, then\n  // the national prefix is not required.\n  if (number.getCountryCodeSource() != 'FROM_DEFAULT_COUNTRY') {\n    return true;\n  }\n\n  var phoneNumberRegion = util.getRegionCodeForCountryCode(number.getCountryCode());\n  var metadata = util.getMetadataForRegion(phoneNumberRegion);\n\n  if (metadata == null) {\n    return true;\n  } // Check if a national prefix should be present when formatting this number.\n\n\n  var nationalNumber = util.getNationalSignificantNumber(number);\n  var formatRule = util.chooseFormattingPatternForNumber(metadata.numberFormats(), nationalNumber); // To do this, we check that a national prefix formatting rule was present\n  // and that it wasn't just the first-group symbol ($1) with punctuation.\n\n  if (formatRule && formatRule.getNationalPrefixFormattingRule().length > 0) {\n    if (formatRule.getNationalPrefixOptionalWhenFormatting()) {\n      // The national-prefix is optional in these cases, so we don't need to check if it was\n      // present.\n      return true;\n    }\n\n    if (PhoneNumberUtil.formattingRuleHasFirstGroupOnly(formatRule.getNationalPrefixFormattingRule())) {\n      // National Prefix not needed for this number.\n      return true;\n    } // Normalize the remainder.\n\n\n    var rawInputCopy = PhoneNumberUtil.normalizeDigitsOnly(number.getRawInput()); // Check if we found a national prefix and/or carrier code at the start of the raw input, and\n    // return the result.\n\n    return util.maybeStripNationalPrefixAndCarrierCode(rawInputCopy, metadata, null);\n  }\n\n  return true;\n}\n\nexport function containsMoreThanOneSlashInNationalNumber(number, candidate) {\n  var firstSlashInBodyIndex = candidate.indexOf('/');\n\n  if (firstSlashInBodyIndex < 0) {\n    // No slashes, this is okay.\n    return false;\n  } // Now look for a second one.\n\n\n  var secondSlashInBodyIndex = candidate.indexOf('/', firstSlashInBodyIndex + 1);\n\n  if (secondSlashInBodyIndex < 0) {\n    // Only one slash, this is okay.\n    return false;\n  } // If the first slash is after the country calling code, this is permitted.\n\n\n  var candidateHasCountryCode = number.getCountryCodeSource() === CountryCodeSource.FROM_NUMBER_WITH_PLUS_SIGN || number.getCountryCodeSource() === CountryCodeSource.FROM_NUMBER_WITHOUT_PLUS_SIGN;\n\n  if (candidateHasCountryCode && PhoneNumberUtil.normalizeDigitsOnly(candidate.substring(0, firstSlashInBodyIndex)) === String(number.getCountryCode())) {\n    // Any more slashes and this is illegal.\n    return candidate.slice(secondSlashInBodyIndex + 1).indexOf('/') >= 0;\n  }\n\n  return true;\n}\n\nfunction checkNumberGroupingIsValid(number, candidate, metadata, checkGroups, regExpCache) {\n  var normalizedCandidate = normalizeDigits(candidate, true\n  /* keep non-digits */\n  );\n  var formattedNumberGroups = getNationalNumberGroups(metadata, number, null);\n\n  if (checkGroups(metadata, number, normalizedCandidate, formattedNumberGroups)) {\n    return true;\n  } // If this didn't pass, see if there are any alternate formats that match, and try them instead.\n\n\n  var alternateFormats = MetadataManager.getAlternateFormatsForCountry(number.getCountryCode());\n  var nationalSignificantNumber = util.getNationalSignificantNumber(number);\n\n  if (alternateFormats) {\n    for (var _iterator = alternateFormats.numberFormats(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var alternateFormat = _ref;\n\n      if (alternateFormat.leadingDigitsPatterns().length > 0) {\n        // There is only one leading digits pattern for alternate formats.\n        var leadingDigitsRegExp = regExpCache.getPatternForRegExp('^' + alternateFormat.leadingDigitsPatterns()[0]);\n\n        if (!leadingDigitsRegExp.test(nationalSignificantNumber)) {\n          // Leading digits don't match; try another one.\n          continue;\n        }\n      }\n\n      formattedNumberGroups = getNationalNumberGroups(metadata, number, alternateFormat);\n\n      if (checkGroups(metadata, number, normalizedCandidate, formattedNumberGroups)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n/**\r\n * Helper method to get the national-number part of a number, formatted without any national\r\n * prefix, and return it as a set of digit blocks that would be formatted together following\r\n * standard formatting rules.\r\n */\n\n\nfunction getNationalNumberGroups(metadata, number, formattingPattern) {\n  if (formattingPattern) {\n    // We format the NSN only, and split that according to the separator.\n    var nationalSignificantNumber = util.getNationalSignificantNumber(number);\n    return util.formatNsnUsingPattern(nationalSignificantNumber, formattingPattern, 'RFC3966', metadata).split('-');\n  } // This will be in the format +CC-DG1-DG2-DGX;ext=EXT where DG1..DGX represents groups of digits.\n\n\n  var rfc3966Format = formatNumber(number, 'RFC3966', metadata); // We remove the extension part from the formatted string before splitting it into different\n  // groups.\n\n  var endIndex = rfc3966Format.indexOf(';');\n\n  if (endIndex < 0) {\n    endIndex = rfc3966Format.length;\n  } // The country-code will have a '-' following it.\n\n\n  var startIndex = rfc3966Format.indexOf('-') + 1;\n  return rfc3966Format.slice(startIndex, endIndex).split('-');\n}\n\nfunction allNumberGroupsAreExactlyPresent(metadata, number, normalizedCandidate, formattedNumberGroups) {\n  var candidateGroups = normalizedCandidate.split(NON_DIGITS_PATTERN); // Set this to the last group, skipping it if the number has an extension.\n\n  var candidateNumberGroupIndex = number.hasExtension() ? candidateGroups.length - 2 : candidateGroups.length - 1; // First we check if the national significant number is formatted as a block.\n  // We use contains and not equals, since the national significant number may be present with\n  // a prefix such as a national number prefix, or the country code itself.\n\n  if (candidateGroups.length == 1 || candidateGroups[candidateNumberGroupIndex].contains(util.getNationalSignificantNumber(number))) {\n    return true;\n  } // Starting from the end, go through in reverse, excluding the first group, and check the\n  // candidate and number groups are the same.\n\n\n  var formattedNumberGroupIndex = formattedNumberGroups.length - 1;\n\n  while (formattedNumberGroupIndex > 0 && candidateNumberGroupIndex >= 0) {\n    if (candidateGroups[candidateNumberGroupIndex] !== formattedNumberGroups[formattedNumberGroupIndex]) {\n      return false;\n    }\n\n    formattedNumberGroupIndex--;\n    candidateNumberGroupIndex--;\n  } // Now check the first group. There may be a national prefix at the start, so we only check\n  // that the candidate group ends with the formatted number group.\n\n\n  return candidateNumberGroupIndex >= 0 && endsWith(candidateGroups[candidateNumberGroupIndex], formattedNumberGroups[0]);\n}\n\nfunction allNumberGroupsRemainGrouped(metadata, number, normalizedCandidate, formattedNumberGroups) {\n  var fromIndex = 0;\n\n  if (number.getCountryCodeSource() !== CountryCodeSource.FROM_DEFAULT_COUNTRY) {\n    // First skip the country code if the normalized candidate contained it.\n    var countryCode = String(number.getCountryCode());\n    fromIndex = normalizedCandidate.indexOf(countryCode) + countryCode.length();\n  } // Check each group of consecutive digits are not broken into separate groupings in the\n  // {@code normalizedCandidate} string.\n\n\n  for (var i = 0; i < formattedNumberGroups.length; i++) {\n    // Fails if the substring of {@code normalizedCandidate} starting from {@code fromIndex}\n    // doesn't contain the consecutive digits in formattedNumberGroups[i].\n    fromIndex = normalizedCandidate.indexOf(formattedNumberGroups[i], fromIndex);\n\n    if (fromIndex < 0) {\n      return false;\n    } // Moves {@code fromIndex} forward.\n\n\n    fromIndex += formattedNumberGroups[i].length();\n\n    if (i == 0 && fromIndex < normalizedCandidate.length()) {\n      // We are at the position right after the NDC. We get the region used for formatting\n      // information based on the country code in the phone number, rather than the number itself,\n      // as we do not need to distinguish between different countries with the same country\n      // calling code and this is faster.\n      var region = util.getRegionCodeForCountryCode(number.getCountryCode());\n\n      if (util.getNddPrefixForRegion(region, true) != null && Character.isDigit(normalizedCandidate.charAt(fromIndex))) {\n        // This means there is no formatting symbol after the NDC. In this case, we only\n        // accept the number if there is no formatting symbol at all in the number, except\n        // for extensions. This is only important for countries with national prefixes.\n        var nationalSignificantNumber = util.getNationalSignificantNumber(number);\n        return startsWith(normalizedCandidate.slice(fromIndex - formattedNumberGroups[i].length), nationalSignificantNumber);\n      }\n    }\n  } // The check here makes sure that we haven't mistakenly already used the extension to\n  // match the last group of the subscriber number. Note the extension cannot have\n  // formatting in-between digits.\n\n\n  return normalizedCandidate.slice(fromIndex).contains(number.getExtension());\n}\n//# sourceMappingURL=Leniency.js.map","import { trimAfterFirstMatch } from './util'; // Regular expression of characters typically used to start a second phone number for the purposes\n// of parsing. This allows us to strip off parts of the number that are actually the start of\n// another number, such as for: (530) 583-6985 x302/x2303 -> the second extension here makes this\n// actually two phone numbers, (530) 583-6985 x302 and (530) 583-6985 x2303. We remove the second\n// extension so that the first number is parsed correctly.\n//\n// Matches a slash (\\ or /) followed by a space followed by an `x`.\n//\n\nvar SECOND_NUMBER_START_PATTERN = /[\\\\/] *x/;\nexport default function parsePreCandidate(candidate) {\n  // Check for extra numbers at the end.\n  // TODO: This is the place to start when trying to support extraction of multiple phone number\n  // from split notations (+41 79 123 45 67 / 68).\n  return trimAfterFirstMatch(SECOND_NUMBER_START_PATTERN, candidate);\n}\n//# sourceMappingURL=parsePreCandidate.js.map","// Matches strings that look like dates using \"/\" as a separator.\n// Examples: 3/10/2011, 31/10/96 or 08/31/95.\nvar SLASH_SEPARATED_DATES = /(?:(?:[0-3]?\\d\\/[01]?\\d)|(?:[01]?\\d\\/[0-3]?\\d))\\/(?:[12]\\d)?\\d{2}/; // Matches timestamps.\n// Examples: \"2012-01-02 08:00\".\n// Note that the reg-ex does not include the\n// trailing \":\\d\\d\" -- that is covered by TIME_STAMPS_SUFFIX.\n\nvar TIME_STAMPS = /[12]\\d{3}[-/]?[01]\\d[-/]?[0-3]\\d +[0-2]\\d$/;\nvar TIME_STAMPS_SUFFIX_LEADING = /^:[0-5]\\d/;\nexport default function isValidPreCandidate(candidate, offset, text) {\n  // Skip a match that is more likely to be a date.\n  if (SLASH_SEPARATED_DATES.test(candidate)) {\n    return false;\n  } // Skip potential time-stamps.\n\n\n  if (TIME_STAMPS.test(candidate)) {\n    var followingText = text.slice(offset + candidate.length);\n\n    if (TIME_STAMPS_SUFFIX_LEADING.test(followingText)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n//# sourceMappingURL=isValidPreCandidate.js.map","// Copy-pasted from `PhoneNumberMatcher.js`.\nimport { PLUS_CHARS } from '../constants';\nimport { limit } from './util';\nimport { isLatinLetter, isInvalidPunctuationSymbol } from './utf-8';\nvar OPENING_PARENS = \"(\\\\[\\uFF08\\uFF3B\";\nvar CLOSING_PARENS = \")\\\\]\\uFF09\\uFF3D\";\nvar NON_PARENS = \"[^\".concat(OPENING_PARENS).concat(CLOSING_PARENS, \"]\");\nexport var LEAD_CLASS = \"[\".concat(OPENING_PARENS).concat(PLUS_CHARS, \"]\"); // Punctuation that may be at the start of a phone number - brackets and plus signs.\n\nvar LEAD_CLASS_LEADING = new RegExp('^' + LEAD_CLASS); // Limit on the number of pairs of brackets in a phone number.\n\nvar BRACKET_PAIR_LIMIT = limit(0, 3);\n/**\r\n * Pattern to check that brackets match. Opening brackets should be closed within a phone number.\r\n * This also checks that there is something inside the brackets. Having no brackets at all is also\r\n * fine.\r\n *\r\n * An opening bracket at the beginning may not be closed, but subsequent ones should be.  It's\r\n * also possible that the leading bracket was dropped, so we shouldn't be surprised if we see a\r\n * closing bracket first. We limit the sets of brackets in a phone number to four.\r\n */\n\nvar MATCHING_BRACKETS_ENTIRE = new RegExp('^' + \"(?:[\" + OPENING_PARENS + \"])?\" + \"(?:\" + NON_PARENS + \"+\" + \"[\" + CLOSING_PARENS + \"])?\" + NON_PARENS + \"+\" + \"(?:[\" + OPENING_PARENS + \"]\" + NON_PARENS + \"+[\" + CLOSING_PARENS + \"])\" + BRACKET_PAIR_LIMIT + NON_PARENS + \"*\" + '$');\n/**\r\n * Matches strings that look like publication pages. Example:\r\n * <pre>Computing Complete Answers to Queries in the Presence of Limited Access Patterns.\r\n * Chen Li. VLDB J. 12(3): 211-227 (2003).</pre>\r\n *\r\n * The string \"211-227 (2003)\" is not a telephone number.\r\n */\n\nvar PUB_PAGES = /\\d{1,5}-+\\d{1,5}\\s{0,4}\\(\\d{1,4}/;\nexport default function isValidCandidate(candidate, offset, text, leniency) {\n  // Check the candidate doesn't contain any formatting\n  // which would indicate that it really isn't a phone number.\n  if (!MATCHING_BRACKETS_ENTIRE.test(candidate) || PUB_PAGES.test(candidate)) {\n    return;\n  } // If leniency is set to VALID or stricter, we also want to skip numbers that are surrounded\n  // by Latin alphabetic characters, to skip cases like abc8005001234 or 8005001234def.\n\n\n  if (leniency !== 'POSSIBLE') {\n    // If the candidate is not at the start of the text,\n    // and does not start with phone-number punctuation,\n    // check the previous character.\n    if (offset > 0 && !LEAD_CLASS_LEADING.test(candidate)) {\n      var previousChar = text[offset - 1]; // We return null if it is a latin letter or an invalid punctuation symbol.\n\n      if (isInvalidPunctuationSymbol(previousChar) || isLatinLetter(previousChar)) {\n        return false;\n      }\n    }\n\n    var lastCharIndex = offset + candidate.length;\n\n    if (lastCharIndex < text.length) {\n      var nextChar = text[lastCharIndex];\n\n      if (isInvalidPunctuationSymbol(nextChar) || isLatinLetter(nextChar)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n//# sourceMappingURL=isValidCandidate.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\r\n * A port of Google's `PhoneNumberMatcher.java`.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberMatcher.java\r\n * Date: 08.03.2018.\r\n */\nimport PhoneNumber from './PhoneNumber';\nimport { MAX_LENGTH_FOR_NSN, MAX_LENGTH_COUNTRY_CODE, VALID_PUNCTUATION } from './constants';\nimport createExtensionPattern from './helpers/extension/createExtensionPattern';\nimport RegExpCache from './findNumbers/RegExpCache';\nimport { limit, trimAfterFirstMatch } from './findNumbers/util';\nimport { _pL, _pN, pZ, PZ, pNd } from './findNumbers/utf-8';\nimport Leniency from './findNumbers/Leniency';\nimport parsePreCandidate from './findNumbers/parsePreCandidate';\nimport isValidPreCandidate from './findNumbers/isValidPreCandidate';\nimport isValidCandidate, { LEAD_CLASS } from './findNumbers/isValidCandidate';\nimport { isSupportedCountry } from './metadata';\nimport parseNumber from './parse_';\nvar EXTN_PATTERNS_FOR_MATCHING = createExtensionPattern('matching');\n/**\r\n * Patterns used to extract phone numbers from a larger phone-number-like pattern. These are\r\n * ordered according to specificity. For example, white-space is last since that is frequently\r\n * used in numbers, not just to separate two numbers. We have separate patterns since we don't\r\n * want to break up the phone-number-like text on more than one different kind of symbol at one\r\n * time, although symbols of the same type (e.g. space) can be safely grouped together.\r\n *\r\n * Note that if there is a match, we will always check any text found up to the first match as\r\n * well.\r\n */\n\nvar INNER_MATCHES = [// Breaks on the slash - e.g. \"651-234-2345/332-445-1234\"\n'\\\\/+(.*)/', // Note that the bracket here is inside the capturing group, since we consider it part of the\n// phone number. Will match a pattern like \"(650) 223 3345 (754) 223 3321\".\n'(\\\\([^(]*)', // Breaks on a hyphen - e.g. \"12345 - 332-445-1234 is my number.\"\n// We require a space on either side of the hyphen for it to be considered a separator.\n\"(?:\".concat(pZ, \"-|-\").concat(pZ, \")\").concat(pZ, \"*(.+)\"), // Various types of wide hyphens. Note we have decided not to enforce a space here, since it's\n// possible that it's supposed to be used to break two numbers without spaces, and we haven't\n// seen many instances of it used within a number.\n\"[\\u2012-\\u2015\\uFF0D]\".concat(pZ, \"*(.+)\"), // Breaks on a full stop - e.g. \"12345. 332-445-1234 is my number.\"\n\"\\\\.+\".concat(pZ, \"*([^.]+)\"), // Breaks on space - e.g. \"3324451234 8002341234\"\n\"\".concat(pZ, \"+(\").concat(PZ, \"+)\")]; // Limit on the number of leading (plus) characters.\n\nvar leadLimit = limit(0, 2); // Limit on the number of consecutive punctuation characters.\n\nvar punctuationLimit = limit(0, 4);\n/* The maximum number of digits allowed in a digit-separated block. As we allow all digits in a\r\n * single block, set high enough to accommodate the entire national number and the international\r\n * country code. */\n\nvar digitBlockLimit = MAX_LENGTH_FOR_NSN + MAX_LENGTH_COUNTRY_CODE; // Limit on the number of blocks separated by punctuation.\n// Uses digitBlockLimit since some formats use spaces to separate each digit.\n\nvar blockLimit = limit(0, digitBlockLimit);\n/* A punctuation sequence allowing white space. */\n\nvar punctuation = \"[\".concat(VALID_PUNCTUATION, \"]\") + punctuationLimit; // A digits block without punctuation.\n\nvar digitSequence = pNd + limit(1, digitBlockLimit);\n/**\r\n * Phone number pattern allowing optional punctuation.\r\n * The phone number pattern used by `find()`, similar to\r\n * VALID_PHONE_NUMBER, but with the following differences:\r\n * <ul>\r\n *   <li>All captures are limited in order to place an upper bound to the text matched by the\r\n *       pattern.\r\n * <ul>\r\n *   <li>Leading punctuation / plus signs are limited.\r\n *   <li>Consecutive occurrences of punctuation are limited.\r\n *   <li>Number of digits is limited.\r\n * </ul>\r\n *   <li>No whitespace is allowed at the start or end.\r\n *   <li>No alpha digits (vanity numbers such as 1-800-SIX-FLAGS) are currently supported.\r\n * </ul>\r\n */\n\nvar PATTERN = '(?:' + LEAD_CLASS + punctuation + ')' + leadLimit + digitSequence + '(?:' + punctuation + digitSequence + ')' + blockLimit + '(?:' + EXTN_PATTERNS_FOR_MATCHING + ')?'; // Regular expression of trailing characters that we want to remove.\n// We remove all characters that are not alpha or numerical characters.\n// The hash character is retained here, as it may signify\n// the previous block was an extension.\n//\n// // Don't know what does '&&' mean here.\n// const UNWANTED_END_CHAR_PATTERN = new RegExp(`[[\\\\P{N}&&\\\\P{L}]&&[^#]]+$`)\n//\n\nvar UNWANTED_END_CHAR_PATTERN = new RegExp(\"[^\".concat(_pN).concat(_pL, \"#]+$\"));\nvar NON_DIGITS_PATTERN = /(\\D+)/;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n/**\r\n * A stateful class that finds and extracts telephone numbers from {@linkplain CharSequence text}.\r\n * Instances can be created using the {@linkplain PhoneNumberUtil#findNumbers factory methods} in\r\n * {@link PhoneNumberUtil}.\r\n *\r\n * <p>Vanity numbers (phone numbers using alphabetic digits such as <tt>1-800-SIX-FLAGS</tt> are\r\n * not found.\r\n *\r\n * <p>This class is not thread-safe.\r\n */\n\nvar PhoneNumberMatcher =\n/*#__PURE__*/\nfunction () {\n  /** The iteration tristate. */\n\n  /** The next index to start searching at. Undefined in {@link State#DONE}. */\n  // A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\n  // countries being used for the same doc with ~10 patterns for each country. Some pages will have\n  // a lot more countries in use, but typically fewer numbers for each so expanding the cache for\n  // that use-case won't have a lot of benefit.\n\n  /**\r\n   * Creates a new instance. See the factory methods in {@link PhoneNumberUtil} on how to obtain a\r\n   * new instance.\r\n   *\r\n   * @param util  the phone number util to use\r\n   * @param text  the character sequence that we will search, null for no text\r\n   * @param country  the country to assume for phone numbers not written in international format\r\n   *     (with a leading plus, or with the international dialing prefix of the specified region).\r\n   *     May be null or \"ZZ\" if only numbers with a leading plus should be\r\n   *     considered.\r\n   * @param leniency  the leniency to use when evaluating candidate phone numbers\r\n   * @param maxTries  the maximum number of invalid numbers to try before giving up on the text.\r\n   *     This is to cover degenerate cases where the text has a lot of false positives in it. Must\r\n   *     be {@code >= 0}.\r\n   */\n  function PhoneNumberMatcher() {\n    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var metadata = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, PhoneNumberMatcher);\n\n    _defineProperty(this, \"state\", 'NOT_READY');\n\n    _defineProperty(this, \"searchIndex\", 0);\n\n    _defineProperty(this, \"regExpCache\", new RegExpCache(32));\n\n    options = _objectSpread({}, options, {\n      defaultCallingCode: options.defaultCallingCode,\n      defaultCountry: options.defaultCountry && isSupportedCountry(options.defaultCountry, metadata) ? options.defaultCountry : undefined,\n      leniency: options.leniency || options.extended ? 'POSSIBLE' : 'VALID',\n      maxTries: options.maxTries || MAX_SAFE_INTEGER\n    });\n\n    if (!options.leniency) {\n      throw new TypeError('`Leniency` not supplied');\n    }\n\n    if (options.maxTries < 0) {\n      throw new TypeError('`maxTries` not supplied');\n    }\n\n    this.text = text;\n    this.options = options;\n    this.metadata = metadata;\n    /** The degree of validation requested. */\n\n    this.leniency = Leniency[options.leniency];\n\n    if (!this.leniency) {\n      throw new TypeError(\"Unknown leniency: \".concat(options.leniency, \".\"));\n    }\n    /** The maximum number of retries after matching an invalid number. */\n\n\n    this.maxTries = options.maxTries;\n    this.PATTERN = new RegExp(PATTERN, 'ig');\n  }\n  /**\r\n   * Attempts to find the next subsequence in the searched sequence on or after {@code searchIndex}\r\n   * that represents a phone number. Returns the next match, null if none was found.\r\n   *\r\n   * @param index  the search index to start searching at\r\n   * @return  the phone number match found, null if none can be found\r\n   */\n\n\n  _createClass(PhoneNumberMatcher, [{\n    key: \"find\",\n    value: function find() {\n      // // Reset the regular expression.\n      // this.PATTERN.lastIndex = index\n      var matches;\n\n      while (this.maxTries > 0 && (matches = this.PATTERN.exec(this.text)) !== null) {\n        var candidate = matches[0];\n        var offset = matches.index;\n        candidate = parsePreCandidate(candidate);\n\n        if (isValidPreCandidate(candidate, offset, this.text)) {\n          var match = // Try to come up with a valid match given the entire candidate.\n          this.parseAndVerify(candidate, offset, this.text) // If that failed, try to find an \"inner match\" -\n          // there might be a phone number within this candidate.\n          || this.extractInnerMatch(candidate, offset, this.text);\n\n          if (match) {\n            if (this.options.v2) {\n              var phoneNumber = new PhoneNumber(match.country || match.countryCallingCode, match.phone, this.metadata);\n\n              if (match.ext) {\n                phoneNumber.ext = match.ext;\n              }\n\n              return {\n                startsAt: match.startsAt,\n                endsAt: match.endsAt,\n                number: phoneNumber\n              };\n            }\n\n            return match;\n          }\n        }\n\n        this.maxTries--;\n      }\n    }\n    /**\r\n     * Attempts to extract a match from `substring`\r\n     * if the substring itself does not qualify as a match.\r\n     */\n\n  }, {\n    key: \"extractInnerMatch\",\n    value: function extractInnerMatch(substring, offset, text) {\n      for (var _i = 0, _INNER_MATCHES = INNER_MATCHES; _i < _INNER_MATCHES.length; _i++) {\n        var innerMatchPattern = _INNER_MATCHES[_i];\n        var isFirstMatch = true;\n        var candidateMatch = void 0;\n        var innerMatchRegExp = new RegExp(innerMatchPattern, 'g');\n\n        while (this.maxTries > 0 && (candidateMatch = innerMatchRegExp.exec(substring)) !== null) {\n          if (isFirstMatch) {\n            // We should handle any group before this one too.\n            var _candidate = trimAfterFirstMatch(UNWANTED_END_CHAR_PATTERN, substring.slice(0, candidateMatch.index));\n\n            var _match = this.parseAndVerify(_candidate, offset, text);\n\n            if (_match) {\n              return _match;\n            }\n\n            this.maxTries--;\n            isFirstMatch = false;\n          }\n\n          var candidate = trimAfterFirstMatch(UNWANTED_END_CHAR_PATTERN, candidateMatch[1]); // Java code does `groupMatcher.start(1)` here,\n          // but there's no way in javascript to get a `candidate` start index,\n          // therefore resort to using this kind of an approximation.\n          // (`groupMatcher` is called `candidateInSubstringMatch` in this javascript port)\n          // https://stackoverflow.com/questions/15934353/get-index-of-each-capture-in-a-javascript-regex\n\n          var candidateIndexGuess = substring.indexOf(candidate, candidateMatch.index);\n          var match = this.parseAndVerify(candidate, offset + candidateIndexGuess, text);\n\n          if (match) {\n            return match;\n          }\n\n          this.maxTries--;\n        }\n      }\n    }\n    /**\r\n     * Parses a phone number from the `candidate` using `parseNumber` and\r\n     * verifies it matches the requested `leniency`. If parsing and verification succeed,\r\n     * a corresponding `PhoneNumberMatch` is returned, otherwise this method returns `null`.\r\n     *\r\n     * @param candidate  the candidate match\r\n     * @param offset  the offset of {@code candidate} within {@link #text}\r\n     * @return  the parsed and validated phone number match, or null\r\n     */\n\n  }, {\n    key: \"parseAndVerify\",\n    value: function parseAndVerify(candidate, offset, text) {\n      if (!isValidCandidate(candidate, offset, text, this.options.leniency)) {\n        return;\n      }\n\n      var number = parseNumber(candidate, {\n        extended: true,\n        defaultCountry: this.options.defaultCountry,\n        defaultCallingCode: this.options.defaultCallingCode\n      }, this.metadata);\n\n      if (!number.possible) {\n        return;\n      }\n\n      if (this.leniency(number, candidate, this.metadata, this.regExpCache)) {\n        // // We used parseAndKeepRawInput to create this number,\n        // // but for now we don't return the extra values parsed.\n        // // TODO: stop clearing all values here and switch all users over\n        // // to using rawInput() rather than the rawString() of PhoneNumberMatch.\n        // number.clearCountryCodeSource()\n        // number.clearRawInput()\n        // number.clearPreferredDomesticCarrierCode()\n        var result = {\n          startsAt: offset,\n          endsAt: offset + candidate.length,\n          phone: number.phone\n        };\n\n        if (number.country && number.country !== '001') {\n          result.country = number.country;\n        } else {\n          result.countryCallingCode = number.countryCallingCode;\n        }\n\n        if (number.ext) {\n          result.ext = number.ext;\n        }\n\n        return result;\n      }\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      if (this.state === 'NOT_READY') {\n        this.lastMatch = this.find(); // (this.searchIndex)\n\n        if (this.lastMatch) {\n          // this.searchIndex = this.lastMatch.endsAt\n          this.state = 'READY';\n        } else {\n          this.state = 'DONE';\n        }\n      }\n\n      return this.state === 'READY';\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      // Check the state and find the next match as a side-effect if necessary.\n      if (!this.hasNext()) {\n        throw new Error('No next element');\n      } // Don't retain that memory any longer than necessary.\n\n\n      var result = this.lastMatch;\n      this.lastMatch = null;\n      this.state = 'NOT_READY';\n      return result;\n    }\n  }]);\n\n  return PhoneNumberMatcher;\n}();\n\nexport { PhoneNumberMatcher as default };\n//# sourceMappingURL=PhoneNumberMatcher.js.map","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar AsYouTypeState =\n/*#__PURE__*/\nfunction () {\n  function AsYouTypeState(_ref) {\n    var _this = this;\n\n    var onCountryChange = _ref.onCountryChange,\n        onCallingCodeChange = _ref.onCallingCodeChange;\n\n    _classCallCheck(this, AsYouTypeState);\n\n    _defineProperty(this, \"update\", function (properties) {\n      for (var _i = 0, _Object$keys = Object.keys(properties); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        _this[key] = properties[key];\n      }\n    });\n\n    this.onCountryChange = onCountryChange;\n    this.onCallingCodeChange = onCallingCodeChange;\n  }\n\n  _createClass(AsYouTypeState, [{\n    key: \"reset\",\n    value: function reset(defaultCountry, defaultCallingCode) {\n      this.international = false;\n      this.IDDPrefix = undefined;\n      this.missingPlus = undefined;\n      this.callingCode = undefined;\n      this.digits = '';\n      this.resetNationalSignificantNumber();\n      this.initCountryAndCallingCode(defaultCountry, defaultCallingCode);\n    }\n  }, {\n    key: \"resetNationalSignificantNumber\",\n    value: function resetNationalSignificantNumber() {\n      this.nationalSignificantNumber = this.getNationalDigits();\n      this.nationalSignificantNumberMatchesInput = true;\n      this.nationalPrefix = undefined;\n      this.carrierCode = undefined;\n      this.complexPrefixBeforeNationalSignificantNumber = undefined;\n    }\n  }, {\n    key: \"initCountryAndCallingCode\",\n    value: function initCountryAndCallingCode(country, callingCode) {\n      this.setCountry(country);\n      this.setCallingCode(callingCode);\n    }\n  }, {\n    key: \"setCountry\",\n    value: function setCountry(country) {\n      this.country = country;\n      this.onCountryChange(country);\n    }\n  }, {\n    key: \"setCallingCode\",\n    value: function setCallingCode(callingCode) {\n      this.callingCode = callingCode;\n      return this.onCallingCodeChange(this.country, callingCode);\n    }\n  }, {\n    key: \"startInternationalNumber\",\n    value: function startInternationalNumber() {\n      // Prepend the `+` to parsed input.\n      this.international = true; // If a default country was set then reset it\n      // because an explicitly international phone\n      // number is being entered.\n\n      this.initCountryAndCallingCode();\n    }\n  }, {\n    key: \"appendDigits\",\n    value: function appendDigits(nextDigits) {\n      this.digits += nextDigits;\n    }\n  }, {\n    key: \"appendNationalSignificantNumberDigits\",\n    value: function appendNationalSignificantNumberDigits(nextDigits) {\n      this.nationalSignificantNumber += nextDigits;\n    }\n    /**\r\n     * Returns the part of `this.digits` that corresponds to the national number.\r\n     * Basically, all digits that have been input by the user, except for the\r\n     * international prefix and the country calling code part\r\n     * (if the number is an international one).\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"getNationalDigits\",\n    value: function getNationalDigits() {\n      if (this.international) {\n        return this.digits.slice((this.IDDPrefix ? this.IDDPrefix.length : 0) + (this.callingCode ? this.callingCode.length : 0));\n      }\n\n      return this.digits;\n    }\n  }, {\n    key: \"getDigitsWithoutInternationalPrefix\",\n    value: function getDigitsWithoutInternationalPrefix() {\n      if (this.international) {\n        if (this.IDDPrefix) {\n          return this.digits.slice(this.IDDPrefix.length);\n        }\n      }\n\n      return this.digits;\n    }\n  }]);\n\n  return AsYouTypeState;\n}();\n\nexport { AsYouTypeState as default };\n//# sourceMappingURL=AsYouTypeState.js.map","// Should be the same as `DIGIT_PLACEHOLDER` in `libphonenumber-metadata-generator`.\nexport var DIGIT_PLACEHOLDER = 'x'; // '\\u2008' (punctuation space)\n\nvar DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER); // Counts all occurences of a symbol in a string.\n// Unicode-unsafe (because using `.split()`).\n\nexport function countOccurences(symbol, string) {\n  var count = 0; // Using `.split('')` to iterate through a string here\n  // to avoid requiring `Symbol.iterator` polyfill.\n  // `.split('')` is generally not safe for Unicode,\n  // but in this particular case for counting brackets it is safe.\n  // for (const character of string)\n\n  for (var _iterator = string.split(''), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var character = _ref;\n\n    if (character === symbol) {\n      count++;\n    }\n  }\n\n  return count;\n} // Repeats a string (or a symbol) N times.\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\n\nexport function repeat(string, times) {\n  if (times < 1) {\n    return '';\n  }\n\n  var result = '';\n\n  while (times > 1) {\n    if (times & 1) {\n      result += string;\n    }\n\n    times >>= 1;\n    string += string;\n  }\n\n  return result + string;\n}\nexport function cutAndStripNonPairedParens(string, cutBeforeIndex) {\n  if (string[cutBeforeIndex] === ')') {\n    cutBeforeIndex++;\n  }\n\n  return stripNonPairedParens(string.slice(0, cutBeforeIndex));\n}\nexport function closeNonPairedParens(template, cut_before) {\n  var retained_template = template.slice(0, cut_before);\n  var opening_braces = countOccurences('(', retained_template);\n  var closing_braces = countOccurences(')', retained_template);\n  var dangling_braces = opening_braces - closing_braces;\n\n  while (dangling_braces > 0 && cut_before < template.length) {\n    if (template[cut_before] === ')') {\n      dangling_braces--;\n    }\n\n    cut_before++;\n  }\n\n  return template.slice(0, cut_before);\n}\nexport function stripNonPairedParens(string) {\n  var dangling_braces = [];\n  var i = 0;\n\n  while (i < string.length) {\n    if (string[i] === '(') {\n      dangling_braces.push(i);\n    } else if (string[i] === ')') {\n      dangling_braces.pop();\n    }\n\n    i++;\n  }\n\n  var start = 0;\n  var cleared_string = '';\n  dangling_braces.push(string.length);\n\n  for (var _i2 = 0, _dangling_braces = dangling_braces; _i2 < _dangling_braces.length; _i2++) {\n    var index = _dangling_braces[_i2];\n    cleared_string += string.slice(start, index);\n    start = index + 1;\n  }\n\n  return cleared_string;\n}\nexport function populateTemplateWithDigits(template, position, digits) {\n  // Using `.split('')` to iterate through a string here\n  // to avoid requiring `Symbol.iterator` polyfill.\n  // `.split('')` is generally not safe for Unicode,\n  // but in this particular case for `digits` it is safe.\n  // for (const digit of digits)\n  for (var _iterator2 = digits.split(''), _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i3 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i3++];\n    } else {\n      _i3 = _iterator2.next();\n      if (_i3.done) break;\n      _ref2 = _i3.value;\n    }\n\n    var digit = _ref2;\n\n    // If there is room for more digits in current `template`,\n    // then set the next digit in the `template`,\n    // and return the formatted digits so far.\n    // If more digits are entered than the current format could handle.\n    if (template.slice(position + 1).search(DIGIT_PLACEHOLDER_MATCHER) < 0) {\n      return;\n    }\n\n    position = template.search(DIGIT_PLACEHOLDER_MATCHER);\n    template = template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);\n  }\n\n  return [template, position];\n}\n//# sourceMappingURL=AsYouTypeFormatter.util.js.map","import checkNumberLength from './helpers/checkNumberLength';\nimport parseDigits from './helpers/parseDigits';\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat';\nexport default function formatCompleteNumber(state, format, _ref) {\n  var metadata = _ref.metadata,\n      shouldTryNationalPrefixFormattingRule = _ref.shouldTryNationalPrefixFormattingRule,\n      getSeparatorAfterNationalPrefix = _ref.getSeparatorAfterNationalPrefix;\n  var matcher = new RegExp(\"^(?:\".concat(format.pattern(), \")$\"));\n\n  if (matcher.test(state.nationalSignificantNumber)) {\n    return formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, {\n      metadata: metadata,\n      shouldTryNationalPrefixFormattingRule: shouldTryNationalPrefixFormattingRule,\n      getSeparatorAfterNationalPrefix: getSeparatorAfterNationalPrefix\n    });\n  }\n}\nexport function canFormatCompleteNumber(nationalSignificantNumber, metadata) {\n  return checkNumberLength(nationalSignificantNumber, metadata) === 'IS_POSSIBLE';\n}\n\nfunction formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, _ref2) {\n  var metadata = _ref2.metadata,\n      shouldTryNationalPrefixFormattingRule = _ref2.shouldTryNationalPrefixFormattingRule,\n      getSeparatorAfterNationalPrefix = _ref2.getSeparatorAfterNationalPrefix;\n  // `format` has already been checked for `nationalPrefix` requirement.\n  var nationalSignificantNumber = state.nationalSignificantNumber,\n      international = state.international,\n      nationalPrefix = state.nationalPrefix,\n      carrierCode = state.carrierCode; // Format the number with using `national_prefix_formatting_rule`.\n  // If the resulting formatted number is a valid formatted number, then return it.\n  //\n  // Google's AsYouType formatter is different in a way that it doesn't try\n  // to format using the \"national prefix formatting rule\", and instead it\n  // simply prepends a national prefix followed by a \" \" character.\n  // This code does that too, but as a fallback.\n  // The reason is that \"national prefix formatting rule\" may use parentheses,\n  // which wouldn't be included has it used the simpler Google's way.\n  //\n\n  if (shouldTryNationalPrefixFormattingRule(format)) {\n    var formattedNumber = formatNationalNumber(state, format, {\n      useNationalPrefixFormattingRule: true,\n      getSeparatorAfterNationalPrefix: getSeparatorAfterNationalPrefix,\n      metadata: metadata\n    });\n\n    if (formattedNumber) {\n      return formattedNumber;\n    }\n  } // Format the number without using `national_prefix_formatting_rule`.\n\n\n  return formatNationalNumber(state, format, {\n    useNationalPrefixFormattingRule: false,\n    getSeparatorAfterNationalPrefix: getSeparatorAfterNationalPrefix,\n    metadata: metadata\n  });\n}\n\nfunction formatNationalNumber(state, format, _ref3) {\n  var metadata = _ref3.metadata,\n      useNationalPrefixFormattingRule = _ref3.useNationalPrefixFormattingRule,\n      getSeparatorAfterNationalPrefix = _ref3.getSeparatorAfterNationalPrefix;\n  var formattedNationalNumber = formatNationalNumberUsingFormat(state.nationalSignificantNumber, format, {\n    carrierCode: state.carrierCode,\n    useInternationalFormat: state.international,\n    withNationalPrefix: useNationalPrefixFormattingRule,\n    metadata: metadata\n  });\n\n  if (!useNationalPrefixFormattingRule) {\n    if (state.nationalPrefix) {\n      // If a national prefix was extracted, then just prepend it,\n      // followed by a \" \" character.\n      formattedNationalNumber = state.nationalPrefix + getSeparatorAfterNationalPrefix(format) + formattedNationalNumber;\n    } else if (state.complexPrefixBeforeNationalSignificantNumber) {\n      formattedNationalNumber = state.complexPrefixBeforeNationalSignificantNumber + ' ' + formattedNationalNumber;\n    }\n  }\n\n  if (isValidFormattedNationalNumber(formattedNationalNumber, state)) {\n    return formattedNationalNumber;\n  }\n} // Check that the formatted phone number contains exactly\n// the same digits that have been input by the user.\n// For example, when \"0111523456789\" is input for `AR` country,\n// the extracted `this.nationalSignificantNumber` is \"91123456789\",\n// which means that the national part of `this.digits` isn't simply equal to\n// `this.nationalPrefix` + `this.nationalSignificantNumber`.\n//\n// Also, a `format` can add extra digits to the `this.nationalSignificantNumber`\n// being formatted via `metadata[country].national_prefix_transform_rule`.\n// For example, for `VI` country, it prepends `340` to the national number,\n// and if this check hasn't been implemented, then there would be a bug\n// when `340` \"area coude\" is \"duplicated\" during input for `VI` country:\n// https://github.com/catamphetamine/libphonenumber-js/issues/318\n//\n// So, all these \"gotchas\" are filtered out.\n//\n// In the original Google's code, the comments say:\n// \"Check that we didn't remove nor add any extra digits when we matched\n// this formatting pattern. This usually happens after we entered the last\n// digit during AYTF. Eg: In case of MX, we swallow mobile token (1) when\n// formatted but AYTF should retain all the number entered and not change\n// in order to match a format (of same leading digits and length) display\n// in that way.\"\n// \"If it's the same (i.e entered number and format is same), then it's\n// safe to return this in formatted number as nothing is lost / added.\"\n// Otherwise, don't use this format.\n// https://github.com/google/libphonenumber/commit/3e7c1f04f5e7200f87fb131e6f85c6e99d60f510#diff-9149457fa9f5d608a11bb975c6ef4bc5\n// https://github.com/google/libphonenumber/commit/3ac88c7106e7dcb553bcc794b15f19185928a1c6#diff-2dcb77e833422ee304da348b905cde0b\n//\n\n\nfunction isValidFormattedNationalNumber(formattedNationalNumber, state) {\n  return parseDigits(formattedNationalNumber) === state.getNationalDigits();\n}\n//# sourceMappingURL=AsYouTypeFormatter.complete.js.map","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PatternMatcher =\n/*#__PURE__*/\nfunction () {\n  function PatternMatcher(pattern) {\n    _classCallCheck(this, PatternMatcher);\n\n    this.matchTree = new PatternParser().parse(pattern);\n  }\n\n  _createClass(PatternMatcher, [{\n    key: \"match\",\n    value: function match(string) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          allowOverflow = _ref.allowOverflow;\n\n      if (!string) {\n        throw new Error('String is required');\n      }\n\n      var result = _match(string.split(''), this.matchTree, true);\n\n      if (result && result.match) {\n        delete result.matchedChars;\n      }\n\n      if (result && result.overflow) {\n        if (!allowOverflow) {\n          return;\n        }\n      }\n\n      return result;\n    }\n  }]);\n\n  return PatternMatcher;\n}();\n\nexport { PatternMatcher as default };\n\nfunction _match(characters, tree, last) {\n  if (typeof tree === 'string') {\n    if (last) {\n      // `tree` is always a single character.\n      if (characters.length > tree.length) {\n        return {\n          overflow: true\n        };\n      }\n    }\n\n    var characterString = characters.join('');\n\n    if (tree.indexOf(characterString) === 0) {\n      // `tree` is always a single character.\n      // If `tree.indexOf(characterString) === 0`\n      // then `characters.length === tree.length`.\n\n      /* istanbul ignore else */\n      if (characters.length === tree.length) {\n        return {\n          match: true,\n          matchedChars: characters\n        };\n      } // `tree` is always a single character.\n      // If `tree.indexOf(characterString) === 0`\n      // then `characters.length === tree.length`.\n\n      /* istanbul ignore next */\n\n\n      return {\n        partialMatch: true // matchedChars: characters\n\n      };\n    }\n\n    if (characterString.indexOf(tree) === 0) {\n      return {\n        match: true,\n        matchedChars: characters.slice(0, tree.length)\n      };\n    }\n\n    return;\n  }\n\n  if (Array.isArray(tree)) {\n    var restCharacters = characters.slice();\n    var i = 0;\n\n    while (i < tree.length) {\n      var subtree = tree[i];\n\n      var result = _match(restCharacters, subtree, last && i === tree.length - 1);\n\n      if (!result) {\n        return;\n      } else if (result.overflow) {\n        return result;\n      } else if (result.match) {\n        // Continue with the next subtree with the rest of the characters.\n        restCharacters = restCharacters.slice(result.matchedChars.length);\n\n        if (restCharacters.length === 0) {\n          if (i === tree.length - 1) {\n            return {\n              match: true,\n              matchedChars: characters\n            };\n          } else {\n            return {\n              partialMatch: true // matchedChars: characters\n\n            };\n          }\n        }\n      } else {\n        /* istanbul ignore else */\n        if (result.partialMatch) {\n          return {\n            partialMatch: true // matchedChars: characters\n\n          };\n        } else {\n          throw new Error(\"Unsupported match result:\\n\".concat(JSON.stringify(result, null, 2)));\n        }\n      }\n\n      i++;\n    } // If `last` then overflow has already been checked\n    // by the last element of the `tree` array.\n\n    /* istanbul ignore if */\n\n\n    if (last) {\n      return {\n        overflow: true\n      };\n    }\n\n    return {\n      match: true,\n      matchedChars: characters.slice(0, characters.length - restCharacters.length)\n    };\n  }\n\n  switch (tree.op) {\n    case '|':\n      var partialMatch;\n\n      for (var _iterator = tree.args, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var branch = _ref2;\n\n        var _result = _match(characters, branch, last);\n\n        if (_result) {\n          if (_result.overflow) {\n            return _result;\n          } else if (_result.match) {\n            return {\n              match: true,\n              matchedChars: _result.matchedChars\n            };\n          } else {\n            /* istanbul ignore else */\n            if (_result.partialMatch) {\n              partialMatch = true;\n            } else {\n              throw new Error(\"Unsupported match result:\\n\".concat(JSON.stringify(_result, null, 2)));\n            }\n          }\n        }\n      }\n\n      if (partialMatch) {\n        return {\n          partialMatch: true // matchedChars: ...\n\n        };\n      } // Not even a partial match.\n\n\n      return;\n\n    case '[]':\n      for (var _iterator2 = tree.args, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref3 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref3 = _i2.value;\n        }\n\n        var _char = _ref3;\n\n        if (characters[0] === _char) {\n          if (characters.length === 1) {\n            return {\n              match: true,\n              matchedChars: characters\n            };\n          }\n\n          if (last) {\n            return {\n              overflow: true\n            };\n          }\n\n          return {\n            match: true,\n            matchedChars: [_char]\n          };\n        }\n      } // No character matches.\n\n\n      return;\n\n    /* istanbul ignore next */\n\n    default:\n      throw new Error(\"Unsupported instruction tree: \".concat(tree));\n  }\n}\n\nvar OPERATOR = new RegExp( // any of:\n'(' + // or operator\n'\\\\|' + // or\n'|' + // or group start\n'\\\\(\\\\?\\\\:' + // or\n'|' + // or group end\n'\\\\)' + // or\n'|' + // one-of set start\n'\\\\[' + // or\n'|' + // one-of set end\n'\\\\]' + ')');\nvar ILLEGAL_CHARACTER_REGEXP = /[\\(\\)\\[\\]\\?\\:\\|]/;\n\nvar PatternParser =\n/*#__PURE__*/\nfunction () {\n  function PatternParser() {\n    _classCallCheck(this, PatternParser);\n  }\n\n  _createClass(PatternParser, [{\n    key: \"parse\",\n    value: function parse(pattern) {\n      this.context = [{\n        or: true,\n        instructions: []\n      }];\n      this.parsePattern(pattern);\n\n      if (this.context.length !== 1) {\n        throw new Error('Non-finalized contexts left when pattern parse ended');\n      }\n\n      var _this$context$ = this.context[0],\n          branches = _this$context$.branches,\n          instructions = _this$context$.instructions;\n\n      if (branches) {\n        return [{\n          op: '|',\n          args: branches.concat([instructions])\n        }];\n      }\n      /* istanbul ignore if */\n\n\n      if (instructions.length === 0) {\n        throw new Error('Pattern is required');\n      }\n\n      return instructions;\n    }\n  }, {\n    key: \"startContext\",\n    value: function startContext(context) {\n      this.context.push(context);\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this.context.pop();\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.context[this.context.length - 1];\n    }\n  }, {\n    key: \"parsePattern\",\n    value: function parsePattern(pattern) {\n      if (!pattern) {\n        throw new Error('Pattern is required');\n      }\n\n      var match = pattern.match(OPERATOR);\n\n      if (!match) {\n        if (ILLEGAL_CHARACTER_REGEXP.test(pattern)) {\n          throw new Error(\"Illegal characters found in a pattern: \".concat(pattern));\n        }\n\n        this.getContext().instructions = this.getContext().instructions.concat(pattern.split(''));\n        return;\n      }\n\n      var operator = match[1];\n      var before = pattern.slice(0, match.index);\n      var rightPart = pattern.slice(match.index + operator.length);\n\n      switch (operator) {\n        case '(?:':\n          if (before) {\n            this.parsePattern(before);\n          }\n\n          this.startContext({\n            or: true,\n            instructions: [],\n            branches: []\n          });\n          break;\n\n        case ')':\n          if (!this.getContext().or) {\n            throw new Error('\")\" operator must be preceded by \"(?:\" operator');\n          }\n\n          if (before) {\n            this.parsePattern(before);\n          }\n\n          if (this.getContext().instructions.length === 0) {\n            throw new Error('No instructions found after \"|\" operator in an \"or\" group');\n          }\n\n          var _this$getContext = this.getContext(),\n              branches = _this$getContext.branches;\n\n          branches.push(this.getContext().instructions);\n          this.endContext();\n          this.getContext().instructions.push({\n            op: '|',\n            args: branches\n          });\n          break;\n\n        case '|':\n          if (!this.getContext().or) {\n            throw new Error('\"|\" operator can only be used inside \"or\" groups');\n          }\n\n          if (before) {\n            this.parsePattern(before);\n          } // The top-level is an implicit \"or\" group, if required.\n\n\n          if (!this.getContext().branches) {\n            // `branches` are not defined only for the root implicit \"or\" operator.\n\n            /* istanbul ignore else */\n            if (this.context.length === 1) {\n              this.getContext().branches = [];\n            } else {\n              throw new Error('\"branches\" not found in an \"or\" group context');\n            }\n          }\n\n          this.getContext().branches.push(this.getContext().instructions);\n          this.getContext().instructions = [];\n          break;\n\n        case '[':\n          if (before) {\n            this.parsePattern(before);\n          }\n\n          this.startContext({\n            oneOfSet: true\n          });\n          break;\n\n        case ']':\n          if (!this.getContext().oneOfSet) {\n            throw new Error('\"]\" operator must be preceded by \"[\" operator');\n          }\n\n          this.endContext();\n          this.getContext().instructions.push({\n            op: '[]',\n            args: parseOneOfSet(before)\n          });\n          break;\n\n        /* istanbul ignore next */\n\n        default:\n          throw new Error(\"Unknown operator: \".concat(operator));\n      }\n\n      if (rightPart) {\n        this.parsePattern(rightPart);\n      }\n    }\n  }]);\n\n  return PatternParser;\n}();\n\nfunction parseOneOfSet(pattern) {\n  var values = [];\n  var i = 0;\n\n  while (i < pattern.length) {\n    if (pattern[i] === '-') {\n      if (i === 0 || i === pattern.length - 1) {\n        throw new Error(\"Couldn't parse a one-of set pattern: \".concat(pattern));\n      }\n\n      var prevValue = pattern[i - 1].charCodeAt(0) + 1;\n      var nextValue = pattern[i + 1].charCodeAt(0) - 1;\n      var value = prevValue;\n\n      while (value <= nextValue) {\n        values.push(String.fromCharCode(value));\n        value++;\n      }\n    } else {\n      values.push(pattern[i]);\n    }\n\n    i++;\n  }\n\n  return values;\n}\n//# sourceMappingURL=AsYouTypeFormatter.PatternMatcher.js.map","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DIGIT_PLACEHOLDER, countOccurences, repeat, cutAndStripNonPairedParens, closeNonPairedParens, stripNonPairedParens, populateTemplateWithDigits } from './AsYouTypeFormatter.util';\nimport formatCompleteNumber, { canFormatCompleteNumber } from './AsYouTypeFormatter.complete';\nimport PatternMatcher from './AsYouTypeFormatter.PatternMatcher';\nimport parseDigits from './helpers/parseDigits';\nexport { DIGIT_PLACEHOLDER } from './AsYouTypeFormatter.util';\nimport { FIRST_GROUP_PATTERN } from './helpers/formatNationalNumberUsingFormat';\nimport { VALID_PUNCTUATION } from './constants';\nimport applyInternationalSeparatorStyle from './helpers/applyInternationalSeparatorStyle'; // Used in phone number format template creation.\n// Could be any digit, I guess.\n\nvar DUMMY_DIGIT = '9'; // I don't know why is it exactly `15`\n\nvar LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15; // Create a phone number consisting only of the digit 9 that matches the\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\n\nvar LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH); // A set of characters that, if found in a national prefix formatting rules, are an indicator to\n// us that we should separate the national prefix from the number when formatting.\n\nvar NATIONAL_PREFIX_SEPARATORS_PATTERN = /[- ]/; // Deprecated: Google has removed some formatting pattern related code from their repo.\n// https://github.com/googlei18n/libphonenumber/commit/a395b4fef3caf57c4bc5f082e1152a4d2bd0ba4c\n// \"We no longer have numbers in formatting matching patterns, only \\d.\"\n// Because this library supports generating custom metadata\n// some users may still be using old metadata so the relevant\n// code seems to stay until some next major version update.\n\nvar SUPPORT_LEGACY_FORMATTING_PATTERNS = true; // A pattern that is used to match character classes in regular expressions.\n// An example of a character class is \"[1-4]\".\n\nvar CREATE_CHARACTER_CLASS_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && function () {\n  return /\\[([^\\[\\]])*\\]/g;\n}; // Any digit in a regular expression that actually denotes a digit. For\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\n// (8 and 0) are standalone digits, but the rest are not.\n// Two look-aheads are needed because the number following \\\\d could be a\n// two-digit number, since the phone number can be as long as 15 digits.\n\n\nvar CREATE_STANDALONE_DIGIT_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && function () {\n  return /\\d(?=[^,}][^,}])/g;\n}; // A regular expression that is used to determine if a `format` is\n// suitable to be used in the \"as you type formatter\".\n// A `format` is suitable when the resulting formatted number has\n// the same digits as the user has entered.\n//\n// In the simplest case, that would mean that the format\n// doesn't add any additional digits when formatting a number.\n// Google says that it also shouldn't add \"star\" (`*`) characters,\n// like it does in some Israeli formats.\n// Such basic format would only contain \"valid punctuation\"\n// and \"captured group\" identifiers ($1, $2, etc).\n//\n// An example of a format that adds additional digits:\n//\n// Country: `AR` (Argentina).\n// Format:\n// {\n//    \"pattern\": \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n//    \"leading_digits_patterns\": [\"91\"],\n//    \"national_prefix_formatting_rule\": \"0$1\",\n//    \"format\": \"$2 15-$3-$4\",\n//    \"international_format\": \"$1 $2 $3-$4\"\n// }\n//\n// In the format above, the `format` adds `15` to the digits when formatting a number.\n// A sidenote: this format actually is suitable because `national_prefix_for_parsing`\n// has previously removed `15` from a national number, so re-adding `15` in `format`\n// doesn't actually result in any extra digits added to user's input.\n// But verifying that would be a complex procedure, so the code chooses a simpler path:\n// it simply filters out all `format`s that contain anything but \"captured group\" ids.\n//\n// This regular expression is called `ELIGIBLE_FORMAT_PATTERN` in Google's\n// `libphonenumber` code.\n//\n\n\nvar NON_ALTERING_FORMAT_REG_EXP = new RegExp('^' + '[' + VALID_PUNCTUATION + ']*' + '(\\\\$\\\\d[' + VALID_PUNCTUATION + ']*)+' + '$'); // This is the minimum length of the leading digits of a phone number\n// to guarantee the first \"leading digits pattern\" for a phone number format\n// to be preemptive.\n\nvar MIN_LEADING_DIGITS_LENGTH = 3;\n\nvar AsYouTypeFormatter =\n/*#__PURE__*/\nfunction () {\n  function AsYouTypeFormatter(_ref) {\n    var _this = this;\n\n    var state = _ref.state,\n        metadata = _ref.metadata;\n\n    _classCallCheck(this, AsYouTypeFormatter);\n\n    _defineProperty(this, \"getSeparatorAfterNationalPrefix\", function (format) {\n      // `US` metadata doesn't have a `national_prefix_formatting_rule`,\n      // so the `if` condition below doesn't apply to `US`,\n      // but in reality there shoudl be a separator\n      // between a national prefix and a national (significant) number.\n      // So `US` national prefix separator is a \"special\" \"hardcoded\" case.\n      if (_this.isNANP) {\n        return ' ';\n      } // If a `format` has a `national_prefix_formatting_rule`\n      // and that rule has a separator after a national prefix,\n      // then it means that there should be a separator\n      // between a national prefix and a national (significant) number.\n\n\n      if (format && format.nationalPrefixFormattingRule() && NATIONAL_PREFIX_SEPARATORS_PATTERN.test(format.nationalPrefixFormattingRule())) {\n        return ' ';\n      } // At this point, there seems to be no clear evidence that\n      // there should be a separator between a national prefix\n      // and a national (significant) number. So don't insert one.\n\n\n      return '';\n    });\n\n    _defineProperty(this, \"shouldTryNationalPrefixFormattingRule\", function (format, _ref2) {\n      var international = _ref2.international,\n          nationalPrefix = _ref2.nationalPrefix;\n\n      if (format.nationalPrefixFormattingRule()) {\n        // In some countries, `national_prefix_formatting_rule` is `($1)`,\n        // so it applies even if the user hasn't input a national prefix.\n        // `format.usesNationalPrefix()` detects such cases.\n        var usesNationalPrefix = format.usesNationalPrefix();\n\n        if (usesNationalPrefix && nationalPrefix || !usesNationalPrefix && !international) {\n          return true;\n        }\n      }\n    });\n\n    this.metadata = metadata;\n    this.resetFormat();\n  }\n\n  _createClass(AsYouTypeFormatter, [{\n    key: \"resetFormat\",\n    value: function resetFormat() {\n      this.chosenFormat = undefined;\n      this.template = undefined;\n      this.nationalNumberTemplate = undefined;\n      this.populatedNationalNumberTemplate = undefined;\n      this.populatedNationalNumberTemplatePosition = -1;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(numberingPlan, state) {\n      this.resetFormat();\n\n      if (numberingPlan) {\n        this.isNANP = numberingPlan.callingCode() === '1';\n        this.matchingFormats = numberingPlan.formats();\n\n        if (state.nationalSignificantNumber) {\n          this.narrowDownMatchingFormats(state);\n        }\n      } else {\n        this.isNANP = undefined;\n        this.matchingFormats = [];\n      }\n    }\n    /**\r\n     * Formats an updated phone number.\r\n     * @param  {string} nextDigits — Additional phone number digits.\r\n     * @param  {object} state — `AsYouType` state.\r\n     * @return {[string]} Returns undefined if the updated phone number can't be formatted using any of the available formats.\r\n     */\n\n  }, {\n    key: \"format\",\n    value: function format(nextDigits, state) {\n      var _this2 = this;\n\n      // See if the phone number digits can be formatted as a complete phone number.\n      // If not, use the results from `formatNationalNumberWithNextDigits()`,\n      // which formats based on the chosen formatting pattern.\n      //\n      // Attempting to format complete phone number first is how it's done\n      // in Google's `libphonenumber`, so this library just follows it.\n      // Google's `libphonenumber` code doesn't explain in detail why does it\n      // attempt to format digits as a complete phone number\n      // instead of just going with a previoulsy (or newly) chosen `format`:\n      //\n      // \"Checks to see if there is an exact pattern match for these digits.\n      //  If so, we should use this instead of any other formatting template\n      //  whose leadingDigitsPattern also matches the input.\"\n      //\n      if (canFormatCompleteNumber(state.nationalSignificantNumber, this.metadata)) {\n        for (var _iterator = this.matchingFormats, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref3;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref3 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref3 = _i.value;\n          }\n\n          var format = _ref3;\n          var formattedCompleteNumber = formatCompleteNumber(state, format, {\n            metadata: this.metadata,\n            shouldTryNationalPrefixFormattingRule: function shouldTryNationalPrefixFormattingRule(format) {\n              return _this2.shouldTryNationalPrefixFormattingRule(format, {\n                international: state.international,\n                nationalPrefix: state.nationalPrefix\n              });\n            },\n            getSeparatorAfterNationalPrefix: this.getSeparatorAfterNationalPrefix\n          });\n\n          if (formattedCompleteNumber) {\n            this.resetFormat();\n            this.chosenFormat = format;\n            this.setNationalNumberTemplate(formattedCompleteNumber.replace(/\\d/g, DIGIT_PLACEHOLDER), state);\n            this.populatedNationalNumberTemplate = formattedCompleteNumber; // With a new formatting template, the matched position\n            // using the old template needs to be reset.\n\n            this.populatedNationalNumberTemplatePosition = this.template.lastIndexOf(DIGIT_PLACEHOLDER);\n            return formattedCompleteNumber;\n          }\n        }\n      } // Format the digits as a partial (incomplete) phone number\n      // using the previously chosen formatting pattern (or a newly chosen one).\n\n\n      return this.formatNationalNumberWithNextDigits(nextDigits, state);\n    } // Formats the next phone number digits.\n\n  }, {\n    key: \"formatNationalNumberWithNextDigits\",\n    value: function formatNationalNumberWithNextDigits(nextDigits, state) {\n      var previouslyChosenFormat = this.chosenFormat; // Choose a format from the list of matching ones.\n\n      var newlyChosenFormat = this.chooseFormat(state);\n\n      if (newlyChosenFormat) {\n        if (newlyChosenFormat === previouslyChosenFormat) {\n          // If it can format the next (current) digits\n          // using the previously chosen phone number format\n          // then return the updated formatted number.\n          return this.formatNextNationalNumberDigits(nextDigits);\n        } else {\n          // If a more appropriate phone number format\n          // has been chosen for these \"leading digits\",\n          // then re-format the national phone number part\n          // using the newly selected format.\n          return this.formatNextNationalNumberDigits(state.getNationalDigits());\n        }\n      }\n    }\n  }, {\n    key: \"narrowDownMatchingFormats\",\n    value: function narrowDownMatchingFormats(_ref4) {\n      var _this3 = this;\n\n      var nationalSignificantNumber = _ref4.nationalSignificantNumber,\n          nationalPrefix = _ref4.nationalPrefix,\n          international = _ref4.international;\n      var leadingDigits = nationalSignificantNumber; // \"leading digits\" pattern list starts with a\n      // \"leading digits\" pattern fitting a maximum of 3 leading digits.\n      // So, after a user inputs 3 digits of a national (significant) phone number\n      // this national (significant) number can already be formatted.\n      // The next \"leading digits\" pattern is for 4 leading digits max,\n      // and the \"leading digits\" pattern after it is for 5 leading digits max, etc.\n      // This implementation is different from Google's\n      // in that it searches for a fitting format\n      // even if the user has entered less than\n      // `MIN_LEADING_DIGITS_LENGTH` digits of a national number.\n      // Because some leading digit patterns already match for a single first digit.\n\n      var leadingDigitsPatternIndex = leadingDigits.length - MIN_LEADING_DIGITS_LENGTH;\n\n      if (leadingDigitsPatternIndex < 0) {\n        leadingDigitsPatternIndex = 0;\n      }\n\n      this.matchingFormats = this.matchingFormats.filter(function (format) {\n        return _this3.formatSuits(format, international, nationalPrefix) && _this3.formatMatches(format, leadingDigits, leadingDigitsPatternIndex);\n      }); // If there was a phone number format chosen\n      // and it no longer holds given the new leading digits then reset it.\n      // The test for this `if` condition is marked as:\n      // \"Reset a chosen format when it no longer holds given the new leading digits\".\n      // To construct a valid test case for this one can find a country\n      // in `PhoneNumberMetadata.xml` yielding one format for 3 `<leadingDigits>`\n      // and yielding another format for 4 `<leadingDigits>` (Australia in this case).\n\n      if (this.chosenFormat && this.matchingFormats.indexOf(this.chosenFormat) === -1) {\n        this.resetFormat();\n      }\n    }\n  }, {\n    key: \"formatSuits\",\n    value: function formatSuits(format, international, nationalPrefix) {\n      // When a prefix before a national (significant) number is\n      // simply a national prefix, then it's parsed as `this.nationalPrefix`.\n      // In more complex cases, a prefix before national (significant) number\n      // could include a national prefix as well as some \"capturing groups\",\n      // and in that case there's no info whether a national prefix has been parsed.\n      // If national prefix is not used when formatting a phone number\n      // using this format, but a national prefix has been entered by the user,\n      // and was extracted, then discard such phone number format.\n      // In Google's \"AsYouType\" formatter code, the equivalent would be this part:\n      // https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L175-L184\n      if (nationalPrefix && !format.usesNationalPrefix() && // !format.domesticCarrierCodeFormattingRule() &&\n      !format.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) {\n        return false;\n      } // If national prefix is mandatory for this phone number format\n      // and there're no guarantees that a national prefix is present in user input\n      // then discard this phone number format as not suitable.\n      // In Google's \"AsYouType\" formatter code, the equivalent would be this part:\n      // https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L185-L193\n\n\n      if (!international && !nationalPrefix && format.nationalPrefixIsMandatoryWhenFormattingInNationalFormat()) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"formatMatches\",\n    value: function formatMatches(format, leadingDigits, leadingDigitsPatternIndex) {\n      var leadingDigitsPatternsCount = format.leadingDigitsPatterns().length; // If this format is not restricted to a certain\n      // leading digits pattern then it fits.\n\n      if (leadingDigitsPatternsCount === 0) {\n        return true;\n      } // Start narrowing down the list of possible formats based on the leading digits.\n      // (only previously matched formats take part in the narrowing down process)\n      // `leading_digits_patterns` start with 3 digits min\n      // and then go up from there one digit at a time.\n\n\n      leadingDigitsPatternIndex = Math.min(leadingDigitsPatternIndex, leadingDigitsPatternsCount - 1);\n      var leadingDigitsPattern = format.leadingDigitsPatterns()[leadingDigitsPatternIndex]; // Google imposes a requirement on the leading digits\n      // to be minimum 3 digits long in order to be eligible\n      // for checking those with a leading digits pattern.\n      //\n      // Since `leading_digits_patterns` start with 3 digits min,\n      // Google's original `libphonenumber` library only starts\n      // excluding any non-matching formats only when the\n      // national number entered so far is at least 3 digits long,\n      // otherwise format matching would give false negatives.\n      //\n      // For example, when the digits entered so far are `2`\n      // and the leading digits pattern is `21` –\n      // it's quite obvious in this case that the format could be the one\n      // but due to the absence of further digits it would give false negative.\n      //\n      // Also, `leading_digits_patterns` doesn't always correspond to a single\n      // digits count. For example, `60|8` pattern would already match `8`\n      // but the `60` part would require having at least two leading digits,\n      // so the whole pattern would require inputting two digits first in order to\n      // decide on whether it matches the input, even when the input is \"80\".\n      //\n      // This library — `libphonenumber-js` — allows filtering by `leading_digits_patterns`\n      // even when there's only 1 or 2 digits of the national (significant) number.\n      // To do that, it uses a non-strict pattern matcher written specifically for that.\n      //\n\n      if (leadingDigits.length < MIN_LEADING_DIGITS_LENGTH) {\n        // Before leading digits < 3 matching was implemented:\n        // return true\n        //\n        // After leading digits < 3 matching was implemented:\n        try {\n          return new PatternMatcher(leadingDigitsPattern).match(leadingDigits, {\n            allowOverflow: true\n          }) !== undefined;\n        } catch (error)\n        /* istanbul ignore next */\n        {\n          // There's a slight possibility that there could be some undiscovered bug\n          // in the pattern matcher code. Since the \"leading digits < 3 matching\"\n          // feature is not \"essential\" for operation, it can fall back to the old way\n          // in case of any issues rather than halting the application's execution.\n          console.error(error);\n          return true;\n        }\n      } // If at least `MIN_LEADING_DIGITS_LENGTH` digits of a national number are\n      // available then use the usual regular expression matching.\n      //\n      // The whole pattern is wrapped in round brackets (`()`) because\n      // the pattern can use \"or\" operator (`|`) at the top level of the pattern.\n      //\n\n\n      return new RegExp(\"^(\".concat(leadingDigitsPattern, \")\")).test(leadingDigits);\n    }\n  }, {\n    key: \"getFormatFormat\",\n    value: function getFormatFormat(format, international) {\n      return international ? format.internationalFormat() : format.format();\n    }\n  }, {\n    key: \"chooseFormat\",\n    value: function chooseFormat(state) {\n      var _this4 = this;\n\n      var _loop2 = function _loop2() {\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) return \"break\";\n          _ref5 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) return \"break\";\n          _ref5 = _i2.value;\n        }\n\n        var format = _ref5;\n\n        // If this format is currently being used\n        // and is still suitable, then stick to it.\n        if (_this4.chosenFormat === format) {\n          return \"break\";\n        } // Sometimes, a formatting rule inserts additional digits in a phone number,\n        // and \"as you type\" formatter can't do that: it should only use the digits\n        // that the user has input.\n        //\n        // For example, in Argentina, there's a format for mobile phone numbers:\n        //\n        // {\n        //    \"pattern\": \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n        //    \"leading_digits_patterns\": [\"91\"],\n        //    \"national_prefix_formatting_rule\": \"0$1\",\n        //    \"format\": \"$2 15-$3-$4\",\n        //    \"international_format\": \"$1 $2 $3-$4\"\n        // }\n        //\n        // In that format, `international_format` is used instead of `format`\n        // because `format` inserts `15` in the formatted number,\n        // and `AsYouType` formatter should only use the digits\n        // the user has actually input, without adding any extra digits.\n        // In this case, it wouldn't make a difference, because the `15`\n        // is first stripped when applying `national_prefix_for_parsing`\n        // and then re-added when using `format`, so in reality it doesn't\n        // add any new digits to the number, but to detect that, the code\n        // would have to be more complex: it would have to try formatting\n        // the digits using the format and then see if any digits have\n        // actually been added or removed, and then, every time a new digit\n        // is input, it should re-check whether the chosen format doesn't\n        // alter the digits.\n        //\n        // Google's code doesn't go that far, and so does this library:\n        // it simply requires that a `format` doesn't add any additonal\n        // digits to user's input.\n        //\n        // Also, people in general should move from inputting phone numbers\n        // in national format (possibly with national prefixes)\n        // and use international phone number format instead:\n        // it's a logical thing in the modern age of mobile phones,\n        // globalization and the internet.\n        //\n\n        /* istanbul ignore if */\n\n\n        if (!NON_ALTERING_FORMAT_REG_EXP.test(_this4.getFormatFormat(format, state.international))) {\n          return \"continue\";\n        }\n\n        if (!_this4.createTemplateForFormat(format, state)) {\n          // Remove the format if it can't generate a template.\n          _this4.matchingFormats = _this4.matchingFormats.filter(function (_) {\n            return _ !== format;\n          });\n          return \"continue\";\n        }\n\n        _this4.chosenFormat = format;\n        return \"break\";\n      };\n\n      // When there are multiple available formats, the formatter uses the first\n      // format where a formatting template could be created.\n      _loop: for (var _iterator2 = this.matchingFormats.slice(), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref5;\n\n        var _ret = _loop2();\n\n        switch (_ret) {\n          case \"break\":\n            break _loop;\n\n          case \"continue\":\n            continue;\n        }\n      }\n\n      if (!this.chosenFormat) {\n        // No format matches the national (significant) phone number.\n        this.resetFormat();\n      }\n\n      return this.chosenFormat;\n    }\n  }, {\n    key: \"createTemplateForFormat\",\n    value: function createTemplateForFormat(format, state) {\n      // The formatter doesn't format numbers when numberPattern contains '|', e.g.\n      // (20|3)\\d{4}. In those cases we quickly return.\n      // (Though there's no such format in current metadata)\n\n      /* istanbul ignore if */\n      if (SUPPORT_LEGACY_FORMATTING_PATTERNS && format.pattern().indexOf('|') >= 0) {\n        return;\n      } // Get formatting template for this phone number format\n\n\n      var template = this.getTemplateForFormat(format, state); // If the national number entered is too long\n      // for any phone number format, then abort.\n\n      if (template) {\n        this.setNationalNumberTemplate(template, state);\n        return true;\n      }\n    }\n  }, {\n    key: \"getInternationalPrefixBeforeCountryCallingCode\",\n    value: function getInternationalPrefixBeforeCountryCallingCode(_ref6, options) {\n      var IDDPrefix = _ref6.IDDPrefix,\n          missingPlus = _ref6.missingPlus;\n\n      if (IDDPrefix) {\n        return options && options.spacing === false ? IDDPrefix : IDDPrefix + ' ';\n      }\n\n      if (missingPlus) {\n        return '';\n      }\n\n      return '+';\n    }\n  }, {\n    key: \"getTemplate\",\n    value: function getTemplate(state) {\n      if (!this.template) {\n        return;\n      } // `this.template` holds the template for a \"complete\" phone number.\n      // The currently entered phone number is most likely not \"complete\",\n      // so trim all non-populated digits.\n\n\n      var index = -1;\n      var i = 0;\n      var internationalPrefix = state.international ? this.getInternationalPrefixBeforeCountryCallingCode(state, {\n        spacing: false\n      }) : '';\n\n      while (i < internationalPrefix.length + state.getDigitsWithoutInternationalPrefix().length) {\n        index = this.template.indexOf(DIGIT_PLACEHOLDER, index + 1);\n        i++;\n      }\n\n      return cutAndStripNonPairedParens(this.template, index + 1);\n    }\n  }, {\n    key: \"setNationalNumberTemplate\",\n    value: function setNationalNumberTemplate(template, state) {\n      this.nationalNumberTemplate = template;\n      this.populatedNationalNumberTemplate = template; // With a new formatting template, the matched position\n      // using the old template needs to be reset.\n\n      this.populatedNationalNumberTemplatePosition = -1; // For convenience, the public `.template` property\n      // contains the whole international number\n      // if the phone number being input is international:\n      // 'x' for the '+' sign, 'x'es for the country phone code,\n      // a spacebar and then the template for the formatted national number.\n\n      if (state.international) {\n        this.template = this.getInternationalPrefixBeforeCountryCallingCode(state).replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER) + repeat(DIGIT_PLACEHOLDER, state.callingCode.length) + ' ' + template;\n      } else {\n        this.template = template;\n      }\n    }\n    /**\r\n     * Generates formatting template for a national phone number,\r\n     * optionally containing a national prefix, for a format.\r\n     * @param  {Format} format\r\n     * @param  {string} nationalPrefix\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"getTemplateForFormat\",\n    value: function getTemplateForFormat(format, _ref7) {\n      var nationalSignificantNumber = _ref7.nationalSignificantNumber,\n          international = _ref7.international,\n          nationalPrefix = _ref7.nationalPrefix,\n          complexPrefixBeforeNationalSignificantNumber = _ref7.complexPrefixBeforeNationalSignificantNumber;\n      var pattern = format.pattern();\n      /* istanbul ignore else */\n\n      if (SUPPORT_LEGACY_FORMATTING_PATTERNS) {\n        pattern = pattern // Replace anything in the form of [..] with \\d\n        .replace(CREATE_CHARACTER_CLASS_PATTERN(), '\\\\d') // Replace any standalone digit (not the one in `{}`) with \\d\n        .replace(CREATE_STANDALONE_DIGIT_PATTERN(), '\\\\d');\n      } // Generate a dummy national number (consisting of `9`s)\n      // that fits this format's `pattern`.\n      //\n      // This match will always succeed,\n      // because the \"longest dummy phone number\"\n      // has enough length to accomodate any possible\n      // national phone number format pattern.\n      //\n\n\n      var digits = LONGEST_DUMMY_PHONE_NUMBER.match(pattern)[0]; // If the national number entered is too long\n      // for any phone number format, then abort.\n\n      if (nationalSignificantNumber.length > digits.length) {\n        return;\n      } // Get a formatting template which can be used to efficiently format\n      // a partial number where digits are added one by one.\n      // Below `strictPattern` is used for the\n      // regular expression (with `^` and `$`).\n      // This wasn't originally in Google's `libphonenumber`\n      // and I guess they don't really need it\n      // because they're not using \"templates\" to format phone numbers\n      // but I added `strictPattern` after encountering\n      // South Korean phone number formatting bug.\n      //\n      // Non-strict regular expression bug demonstration:\n      //\n      // this.nationalSignificantNumber : `111111111` (9 digits)\n      //\n      // pattern : (\\d{2})(\\d{3,4})(\\d{4})\n      // format : `$1 $2 $3`\n      // digits : `9999999999` (10 digits)\n      //\n      // '9999999999'.replace(new RegExp(/(\\d{2})(\\d{3,4})(\\d{4})/g), '$1 $2 $3') = \"99 9999 9999\"\n      //\n      // template : xx xxxx xxxx\n      //\n      // But the correct template in this case is `xx xxx xxxx`.\n      // The template was generated incorrectly because of the\n      // `{3,4}` variability in the `pattern`.\n      //\n      // The fix is, if `this.nationalSignificantNumber` has already sufficient length\n      // to satisfy the `pattern` completely then `this.nationalSignificantNumber`\n      // is used instead of `digits`.\n\n\n      var strictPattern = new RegExp('^' + pattern + '$');\n      var nationalNumberDummyDigits = nationalSignificantNumber.replace(/\\d/g, DUMMY_DIGIT); // If `this.nationalSignificantNumber` has already sufficient length\n      // to satisfy the `pattern` completely then use it\n      // instead of `digits`.\n\n      if (strictPattern.test(nationalNumberDummyDigits)) {\n        digits = nationalNumberDummyDigits;\n      }\n\n      var numberFormat = this.getFormatFormat(format, international);\n      var nationalPrefixIncludedInTemplate; // If a user did input a national prefix (and that's guaranteed),\n      // and if a `format` does have a national prefix formatting rule,\n      // then see if that national prefix formatting rule\n      // prepends exactly the same national prefix the user has input.\n      // If that's the case, then use the `format` with the national prefix formatting rule.\n      // Otherwise, use  the `format` without the national prefix formatting rule,\n      // and prepend a national prefix manually to it.\n\n      if (this.shouldTryNationalPrefixFormattingRule(format, {\n        international: international,\n        nationalPrefix: nationalPrefix\n      })) {\n        var numberFormatWithNationalPrefix = numberFormat.replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()); // If `national_prefix_formatting_rule` of a `format` simply prepends\n        // national prefix at the start of a national (significant) number,\n        // then such formatting can be used with `AsYouType` formatter.\n        // There seems to be no `else` case: everywhere in metadata,\n        // national prefix formatting rule is national prefix + $1,\n        // or `($1)`, in which case such format isn't even considered\n        // when the user has input a national prefix.\n\n        /* istanbul ignore else */\n\n        if (parseDigits(format.nationalPrefixFormattingRule()) === (nationalPrefix || '') + parseDigits('$1')) {\n          numberFormat = numberFormatWithNationalPrefix;\n          nationalPrefixIncludedInTemplate = true; // Replace all digits of the national prefix in the formatting template\n          // with `DIGIT_PLACEHOLDER`s.\n\n          if (nationalPrefix) {\n            var i = nationalPrefix.length;\n\n            while (i > 0) {\n              numberFormat = numberFormat.replace(/\\d/, DIGIT_PLACEHOLDER);\n              i--;\n            }\n          }\n        }\n      } // Generate formatting template for this phone number format.\n\n\n      var template = digits // Format the dummy phone number according to the format.\n      .replace(new RegExp(pattern), numberFormat) // Replace each dummy digit with a DIGIT_PLACEHOLDER.\n      .replace(new RegExp(DUMMY_DIGIT, 'g'), DIGIT_PLACEHOLDER); // If a prefix of a national (significant) number is not as simple\n      // as just a basic national prefix, then just prepend such prefix\n      // before the national (significant) number, optionally spacing\n      // the two with a whitespace.\n\n      if (!nationalPrefixIncludedInTemplate) {\n        if (complexPrefixBeforeNationalSignificantNumber) {\n          // Prepend the prefix to the template manually.\n          template = repeat(DIGIT_PLACEHOLDER, complexPrefixBeforeNationalSignificantNumber.length) + ' ' + template;\n        } else if (nationalPrefix) {\n          // Prepend national prefix to the template manually.\n          template = repeat(DIGIT_PLACEHOLDER, nationalPrefix.length) + this.getSeparatorAfterNationalPrefix(format) + template;\n        }\n      }\n\n      if (international) {\n        template = applyInternationalSeparatorStyle(template);\n      }\n\n      return template;\n    }\n  }, {\n    key: \"formatNextNationalNumberDigits\",\n    value: function formatNextNationalNumberDigits(digits) {\n      var result = populateTemplateWithDigits(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition, digits);\n\n      if (!result) {\n        // Reset the format.\n        this.resetFormat();\n        return;\n      }\n\n      this.populatedNationalNumberTemplate = result[0];\n      this.populatedNationalNumberTemplatePosition = result[1]; // Return the formatted phone number so far.\n\n      return cutAndStripNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1); // The old way which was good for `input-format` but is not so good\n      // for `react-phone-number-input`'s default input (`InputBasic`).\n      // return closeNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1)\n      // \t.replace(new RegExp(DIGIT_PLACEHOLDER, 'g'), ' ')\n    }\n  }]);\n\n  return AsYouTypeFormatter;\n}();\n\nexport { AsYouTypeFormatter as default };\n//# sourceMappingURL=AsYouTypeFormatter.js.map","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport _extractCountryCallingCode from './helpers/extractCountryCallingCode';\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign';\nimport extractNationalNumberFromPossiblyIncompleteNumber from './helpers/extractNationalNumberFromPossiblyIncompleteNumber';\nimport stripIddPrefix from './helpers/stripIddPrefix';\nimport parseDigits from './helpers/parseDigits';\nimport { VALID_DIGITS, VALID_PUNCTUATION, PLUS_CHARS } from './constants';\nvar VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART = '[' + VALID_PUNCTUATION + VALID_DIGITS + ']+';\nvar VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN = new RegExp('^' + VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART + '$', 'i');\nvar VALID_FORMATTED_PHONE_NUMBER_PART = '(?:' + '[' + PLUS_CHARS + ']' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*' + '|' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']+' + ')';\nvar AFTER_PHONE_NUMBER_DIGITS_END_PATTERN = new RegExp('[^' + VALID_PUNCTUATION + VALID_DIGITS + ']+' + '.*' + '$'); // Tests whether `national_prefix_for_parsing` could match\n// different national prefixes.\n// Matches anything that's not a digit or a square bracket.\n\nvar COMPLEX_NATIONAL_PREFIX = /[^\\d\\[\\]]/;\n\nvar AsYouTypeParser =\n/*#__PURE__*/\nfunction () {\n  function AsYouTypeParser(_ref) {\n    var defaultCountry = _ref.defaultCountry,\n        defaultCallingCode = _ref.defaultCallingCode,\n        metadata = _ref.metadata,\n        onNationalSignificantNumberChange = _ref.onNationalSignificantNumberChange;\n\n    _classCallCheck(this, AsYouTypeParser);\n\n    this.defaultCountry = defaultCountry;\n    this.defaultCallingCode = defaultCallingCode;\n    this.metadata = metadata;\n    this.onNationalSignificantNumberChange = onNationalSignificantNumberChange;\n  }\n\n  _createClass(AsYouTypeParser, [{\n    key: \"input\",\n    value: function input(text, state) {\n      var _extractFormattedDigi = extractFormattedDigitsAndPlus(text),\n          _extractFormattedDigi2 = _slicedToArray(_extractFormattedDigi, 2),\n          formattedDigits = _extractFormattedDigi2[0],\n          hasPlus = _extractFormattedDigi2[1];\n\n      var digits = parseDigits(formattedDigits); // Checks for a special case: just a leading `+` has been entered.\n\n      var justLeadingPlus;\n\n      if (hasPlus) {\n        if (!state.digits) {\n          state.startInternationalNumber();\n\n          if (!digits) {\n            justLeadingPlus = true;\n          }\n        }\n      }\n\n      if (digits) {\n        this.inputDigits(digits, state);\n      }\n\n      return {\n        digits: digits,\n        justLeadingPlus: justLeadingPlus\n      };\n    }\n    /**\r\n     * Inputs \"next\" phone number digits.\r\n     * @param  {string} digits\r\n     * @return {string} [formattedNumber] Formatted national phone number (if it can be formatted at this stage). Returning `undefined` means \"don't format the national phone number at this stage\".\r\n     */\n\n  }, {\n    key: \"inputDigits\",\n    value: function inputDigits(nextDigits, state) {\n      var digits = state.digits;\n      var hasReceivedThreeLeadingDigits = digits.length < 3 && digits.length + nextDigits.length >= 3; // Append phone number digits.\n\n      state.appendDigits(nextDigits); // Attempt to extract IDD prefix:\n      // Some users input their phone number in international format,\n      // but in an \"out-of-country\" dialing format instead of using the leading `+`.\n      // https://github.com/catamphetamine/libphonenumber-js/issues/185\n      // Detect such numbers as soon as there're at least 3 digits.\n      // Google's library attempts to extract IDD prefix at 3 digits,\n      // so this library just copies that behavior.\n      // I guess that's because the most commot IDD prefixes are\n      // `00` (Europe) and `011` (US).\n      // There exist really long IDD prefixes too:\n      // for example, in Australia the default IDD prefix is `0011`,\n      // and it could even be as long as `14880011`.\n      // An IDD prefix is extracted here, and then every time when\n      // there's a new digit and the number couldn't be formatted.\n\n      if (hasReceivedThreeLeadingDigits) {\n        this.extractIddPrefix(state);\n      }\n\n      if (this.isWaitingForCountryCallingCode(state)) {\n        if (!this.extractCountryCallingCode(state)) {\n          return;\n        }\n      } else {\n        state.appendNationalSignificantNumberDigits(nextDigits);\n      } // If a phone number is being input in international format,\n      // then it's not valid for it to have a national prefix.\n      // Still, some people incorrectly input such numbers with a national prefix.\n      // In such cases, only attempt to strip a national prefix if the number becomes too long.\n      // (but that is done later, not here)\n\n\n      if (!state.international) {\n        if (!this.hasExtractedNationalSignificantNumber) {\n          this.extractNationalSignificantNumber(state.getNationalDigits(), state.update);\n        }\n      }\n    }\n  }, {\n    key: \"isWaitingForCountryCallingCode\",\n    value: function isWaitingForCountryCallingCode(_ref2) {\n      var international = _ref2.international,\n          callingCode = _ref2.callingCode;\n      return international && !callingCode;\n    } // Extracts a country calling code from a number\n    // being entered in internatonal format.\n\n  }, {\n    key: \"extractCountryCallingCode\",\n    value: function extractCountryCallingCode(state) {\n      var _extractCountryCallin = _extractCountryCallingCode('+' + state.getDigitsWithoutInternationalPrefix(), this.defaultCountry, this.defaultCallingCode, this.metadata.metadata),\n          countryCallingCode = _extractCountryCallin.countryCallingCode,\n          number = _extractCountryCallin.number;\n\n      if (countryCallingCode) {\n        state.setCallingCode(countryCallingCode);\n        state.update({\n          nationalSignificantNumber: number\n        });\n        return true;\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(numberingPlan) {\n      if (numberingPlan) {\n        this.hasSelectedNumberingPlan = true;\n\n        var nationalPrefixForParsing = numberingPlan._nationalPrefixForParsing();\n\n        this.couldPossiblyExtractAnotherNationalSignificantNumber = nationalPrefixForParsing && COMPLEX_NATIONAL_PREFIX.test(nationalPrefixForParsing);\n      } else {\n        this.hasSelectedNumberingPlan = undefined;\n        this.couldPossiblyExtractAnotherNationalSignificantNumber = undefined;\n      }\n    }\n    /**\r\n     * Extracts a national (significant) number from user input.\r\n     * Google's library is different in that it only applies `national_prefix_for_parsing`\r\n     * and doesn't apply `national_prefix_transform_rule` after that.\r\n     * https://github.com/google/libphonenumber/blob/a3d70b0487875475e6ad659af404943211d26456/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L539\r\n     * @return {boolean} [extracted]\r\n     */\n\n  }, {\n    key: \"extractNationalSignificantNumber\",\n    value: function extractNationalSignificantNumber(nationalDigits, setState) {\n      if (!this.hasSelectedNumberingPlan) {\n        return;\n      }\n\n      var _extractNationalNumbe = extractNationalNumberFromPossiblyIncompleteNumber(nationalDigits, this.metadata),\n          nationalPrefix = _extractNationalNumbe.nationalPrefix,\n          nationalNumber = _extractNationalNumbe.nationalNumber,\n          carrierCode = _extractNationalNumbe.carrierCode;\n\n      if (nationalNumber === nationalDigits) {\n        return;\n      }\n\n      this.onExtractedNationalNumber(nationalPrefix, carrierCode, nationalNumber, nationalDigits, setState);\n      return true;\n    }\n    /**\r\n     * In Google's code this function is called \"attempt to extract longer NDD\".\r\n     * \"Some national prefixes are a substring of others\", they say.\r\n     * @return {boolean} [result] — Returns `true` if extracting a national prefix produced different results from what they were.\r\n     */\n\n  }, {\n    key: \"extractAnotherNationalSignificantNumber\",\n    value: function extractAnotherNationalSignificantNumber(nationalDigits, prevNationalSignificantNumber, setState) {\n      if (!this.hasExtractedNationalSignificantNumber) {\n        return this.extractNationalSignificantNumber(nationalDigits, setState);\n      }\n\n      if (!this.couldPossiblyExtractAnotherNationalSignificantNumber) {\n        return;\n      }\n\n      var _extractNationalNumbe2 = extractNationalNumberFromPossiblyIncompleteNumber(nationalDigits, this.metadata),\n          nationalPrefix = _extractNationalNumbe2.nationalPrefix,\n          nationalNumber = _extractNationalNumbe2.nationalNumber,\n          carrierCode = _extractNationalNumbe2.carrierCode; // If a national prefix has been extracted previously,\n      // then it's always extracted as additional digits are added.\n      // That's assuming `extractNationalNumberFromPossiblyIncompleteNumber()`\n      // doesn't do anything different from what it currently does.\n      // So, just in case, here's this check, though it doesn't occur.\n\n      /* istanbul ignore if */\n\n\n      if (nationalNumber === prevNationalSignificantNumber) {\n        return;\n      }\n\n      this.onExtractedNationalNumber(nationalPrefix, carrierCode, nationalNumber, nationalDigits, setState);\n      return true;\n    }\n  }, {\n    key: \"onExtractedNationalNumber\",\n    value: function onExtractedNationalNumber(nationalPrefix, carrierCode, nationalSignificantNumber, nationalDigits, setState) {\n      var complexPrefixBeforeNationalSignificantNumber;\n      var nationalSignificantNumberMatchesInput; // This check also works with empty `this.nationalSignificantNumber`.\n\n      var nationalSignificantNumberIndex = nationalDigits.lastIndexOf(nationalSignificantNumber); // If the extracted national (significant) number is the\n      // last substring of the `digits`, then it means that it hasn't been altered:\n      // no digits have been removed from the national (significant) number\n      // while applying `national_prefix_transform_rule`.\n      // https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\n\n      if (nationalSignificantNumberIndex >= 0 && nationalSignificantNumberIndex === nationalDigits.length - nationalSignificantNumber.length) {\n        nationalSignificantNumberMatchesInput = true; // If a prefix of a national (significant) number is not as simple\n        // as just a basic national prefix, then such prefix is stored in\n        // `this.complexPrefixBeforeNationalSignificantNumber` property and will be\n        // prepended \"as is\" to the national (significant) number to produce\n        // a formatted result.\n\n        var prefixBeforeNationalNumber = nationalDigits.slice(0, nationalSignificantNumberIndex); // `prefixBeforeNationalNumber` is always non-empty,\n        // because `onExtractedNationalNumber()` isn't called\n        // when a national (significant) number hasn't been actually \"extracted\":\n        // when a national (significant) number is equal to the national part of `digits`,\n        // then `onExtractedNationalNumber()` doesn't get called.\n\n        if (prefixBeforeNationalNumber !== nationalPrefix) {\n          complexPrefixBeforeNationalSignificantNumber = prefixBeforeNationalNumber;\n        }\n      }\n\n      setState({\n        nationalPrefix: nationalPrefix,\n        carrierCode: carrierCode,\n        nationalSignificantNumber: nationalSignificantNumber,\n        nationalSignificantNumberMatchesInput: nationalSignificantNumberMatchesInput,\n        complexPrefixBeforeNationalSignificantNumber: complexPrefixBeforeNationalSignificantNumber\n      }); // `onExtractedNationalNumber()` is only called when\n      // the national (significant) number actually did change.\n\n      this.hasExtractedNationalSignificantNumber = true;\n      this.onNationalSignificantNumberChange();\n    }\n  }, {\n    key: \"reExtractNationalSignificantNumber\",\n    value: function reExtractNationalSignificantNumber(state) {\n      // Attempt to extract a national prefix.\n      //\n      // Some people incorrectly input national prefix\n      // in an international phone number.\n      // For example, some people write British phone numbers as `+44(0)...`.\n      //\n      // Also, in some rare cases, it is valid for a national prefix\n      // to be a part of an international phone number.\n      // For example, mobile phone numbers in Mexico are supposed to be\n      // dialled internationally using a `1` national prefix,\n      // so the national prefix will be part of an international number.\n      //\n      // Quote from:\n      // https://www.mexperience.com/dialing-cell-phones-in-mexico/\n      //\n      // \"Dialing a Mexican cell phone from abroad\n      // When you are calling a cell phone number in Mexico from outside Mexico,\n      // it’s necessary to dial an additional “1” after Mexico’s country code\n      // (which is “52”) and before the area code.\n      // You also ignore the 045, and simply dial the area code and the\n      // cell phone’s number.\n      //\n      // If you don’t add the “1”, you’ll receive a recorded announcement\n      // asking you to redial using it.\n      //\n      // For example, if you are calling from the USA to a cell phone\n      // in Mexico City, you would dial +52 – 1 – 55 – 1234 5678.\n      // (Note that this is different to calling a land line in Mexico City\n      // from abroad, where the number dialed would be +52 – 55 – 1234 5678)\".\n      //\n      // Google's demo output:\n      // https://libphonenumber.appspot.com/phonenumberparser?number=%2b5215512345678&country=MX\n      //\n      if (this.extractAnotherNationalSignificantNumber(state.getNationalDigits(), state.nationalSignificantNumber, state.update)) {\n        return true;\n      } // If no format matches the phone number, then it could be\n      // \"a really long IDD\" (quote from a comment in Google's library).\n      // An IDD prefix is first extracted when the user has entered at least 3 digits,\n      // and then here — every time when there's a new digit and the number\n      // couldn't be formatted.\n      // For example, in Australia the default IDD prefix is `0011`,\n      // and it could even be as long as `14880011`.\n      //\n      // Could also check `!hasReceivedThreeLeadingDigits` here\n      // to filter out the case when this check duplicates the one\n      // already performed when there're 3 leading digits,\n      // but it's not a big deal, and in most cases there\n      // will be a suitable `format` when there're 3 leading digits.\n      //\n\n\n      if (this.extractIddPrefix(state)) {\n        this.extractCallingCodeAndNationalSignificantNumber(state);\n        return true;\n      } // Google's AsYouType formatter supports sort of an \"autocorrection\" feature\n      // when it \"autocorrects\" numbers that have been input for a country\n      // with that country's calling code.\n      // Such \"autocorrection\" feature looks weird, but different people have been requesting it:\n      // https://github.com/catamphetamine/libphonenumber-js/issues/376\n      // https://github.com/catamphetamine/libphonenumber-js/issues/375\n      // https://github.com/catamphetamine/libphonenumber-js/issues/316\n\n\n      if (this.fixMissingPlus(state)) {\n        this.extractCallingCodeAndNationalSignificantNumber(state);\n        return true;\n      }\n    }\n  }, {\n    key: \"extractIddPrefix\",\n    value: function extractIddPrefix(state) {\n      // An IDD prefix can't be present in a number written with a `+`.\n      // Also, don't re-extract an IDD prefix if has already been extracted.\n      var international = state.international,\n          IDDPrefix = state.IDDPrefix,\n          digits = state.digits,\n          nationalSignificantNumber = state.nationalSignificantNumber;\n\n      if (international || IDDPrefix) {\n        return;\n      } // Some users input their phone number in \"out-of-country\"\n      // dialing format instead of using the leading `+`.\n      // https://github.com/catamphetamine/libphonenumber-js/issues/185\n      // Detect such numbers.\n\n\n      var numberWithoutIDD = stripIddPrefix(digits, this.defaultCountry, this.defaultCallingCode, this.metadata.metadata);\n\n      if (numberWithoutIDD !== undefined && numberWithoutIDD !== digits) {\n        // If an IDD prefix was stripped then convert the IDD-prefixed number\n        // to international number for subsequent parsing.\n        state.update({\n          IDDPrefix: digits.slice(0, digits.length - numberWithoutIDD.length)\n        });\n        this.startInternationalNumber(state);\n        return true;\n      }\n    }\n  }, {\n    key: \"fixMissingPlus\",\n    value: function fixMissingPlus(state) {\n      if (!state.international) {\n        var _extractCountryCallin2 = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(state.digits, this.defaultCountry, this.defaultCallingCode, this.metadata.metadata),\n            newCallingCode = _extractCountryCallin2.countryCallingCode,\n            number = _extractCountryCallin2.number;\n\n        if (newCallingCode) {\n          state.update({\n            missingPlus: true\n          });\n          this.startInternationalNumber(state);\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"startInternationalNumber\",\n    value: function startInternationalNumber(state) {\n      state.startInternationalNumber(); // If a national (significant) number has been extracted before, reset it.\n\n      if (state.nationalSignificantNumber) {\n        state.resetNationalSignificantNumber();\n        this.onNationalSignificantNumberChange();\n        this.hasExtractedNationalSignificantNumber = undefined;\n      }\n    }\n  }, {\n    key: \"extractCallingCodeAndNationalSignificantNumber\",\n    value: function extractCallingCodeAndNationalSignificantNumber(state) {\n      if (this.extractCountryCallingCode(state)) {\n        // `this.extractCallingCode()` is currently called when the number\n        // couldn't be formatted during the standard procedure.\n        // Normally, the national prefix would be re-extracted\n        // for an international number if such number couldn't be formatted,\n        // but since it's already not able to be formatted,\n        // there won't be yet another retry, so also extract national prefix here.\n        this.extractNationalSignificantNumber(state.getNationalDigits(), state.update);\n      }\n    }\n  }]);\n\n  return AsYouTypeParser;\n}();\n/**\r\n * Extracts formatted phone number from text (if there's any).\r\n * @param  {string} text\r\n * @return {string} [formattedPhoneNumber]\r\n */\n\n\nexport { AsYouTypeParser as default };\n\nfunction extractFormattedPhoneNumber(text) {\n  // Attempt to extract a possible number from the string passed in.\n  var startsAt = text.search(VALID_FORMATTED_PHONE_NUMBER_PART);\n\n  if (startsAt < 0) {\n    return;\n  } // Trim everything to the left of the phone number.\n\n\n  text = text.slice(startsAt); // Trim the `+`.\n\n  var hasPlus;\n\n  if (text[0] === '+') {\n    hasPlus = true;\n    text = text.slice('+'.length);\n  } // Trim everything to the right of the phone number.\n\n\n  text = text.replace(AFTER_PHONE_NUMBER_DIGITS_END_PATTERN, ''); // Re-add the previously trimmed `+`.\n\n  if (hasPlus) {\n    text = '+' + text;\n  }\n\n  return text;\n}\n/**\r\n * Extracts formatted phone number digits (and a `+`) from text (if there're any).\r\n * @param  {string} text\r\n * @return {any[]}\r\n */\n\n\nfunction _extractFormattedDigitsAndPlus(text) {\n  // Extract a formatted phone number part from text.\n  var extractedNumber = extractFormattedPhoneNumber(text) || ''; // Trim a `+`.\n\n  if (extractedNumber[0] === '+') {\n    return [extractedNumber.slice('+'.length), true];\n  }\n\n  return [extractedNumber];\n}\n/**\r\n * Extracts formatted phone number digits (and a `+`) from text (if there're any).\r\n * @param  {string} text\r\n * @return {any[]}\r\n */\n\n\nexport function extractFormattedDigitsAndPlus(text) {\n  var _extractFormattedDigi3 = _extractFormattedDigitsAndPlus(text),\n      _extractFormattedDigi4 = _slicedToArray(_extractFormattedDigi3, 2),\n      formattedDigits = _extractFormattedDigi4[0],\n      hasPlus = _extractFormattedDigi4[1]; // If the extracted phone number part\n  // can possibly be a part of some valid phone number\n  // then parse phone number characters from a formatted phone number.\n\n\n  if (!VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN.test(formattedDigits)) {\n    formattedDigits = '';\n  }\n\n  return [formattedDigits, hasPlus];\n}\n//# sourceMappingURL=AsYouTypeParser.js.map","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport Metadata from './metadata';\nimport PhoneNumber from './PhoneNumber';\nimport AsYouTypeState from './AsYouTypeState';\nimport AsYouTypeFormatter, { DIGIT_PLACEHOLDER } from './AsYouTypeFormatter';\nimport AsYouTypeParser, { extractFormattedDigitsAndPlus } from './AsYouTypeParser';\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\n\nvar AsYouType =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * @param {(string|object)?} [optionsOrDefaultCountry] - The default country used for parsing non-international phone numbers. Can also be an `options` object.\r\n   * @param {Object} metadata\r\n   */\n  function AsYouType(optionsOrDefaultCountry, metadata) {\n    _classCallCheck(this, AsYouType);\n\n    this.metadata = new Metadata(metadata);\n\n    var _this$getCountryAndCa = this.getCountryAndCallingCode(optionsOrDefaultCountry),\n        _this$getCountryAndCa2 = _slicedToArray(_this$getCountryAndCa, 2),\n        defaultCountry = _this$getCountryAndCa2[0],\n        defaultCallingCode = _this$getCountryAndCa2[1];\n\n    this.defaultCountry = defaultCountry;\n    this.defaultCallingCode = defaultCallingCode;\n    this.reset();\n  }\n\n  _createClass(AsYouType, [{\n    key: \"getCountryAndCallingCode\",\n    value: function getCountryAndCallingCode(optionsOrDefaultCountry) {\n      // Set `defaultCountry` and `defaultCallingCode` options.\n      var defaultCountry;\n      var defaultCallingCode; // Turns out `null` also has type \"object\". Weird.\n\n      if (optionsOrDefaultCountry) {\n        if (_typeof(optionsOrDefaultCountry) === 'object') {\n          defaultCountry = optionsOrDefaultCountry.defaultCountry;\n          defaultCallingCode = optionsOrDefaultCountry.defaultCallingCode;\n        } else {\n          defaultCountry = optionsOrDefaultCountry;\n        }\n      }\n\n      if (defaultCountry && !this.metadata.hasCountry(defaultCountry)) {\n        defaultCountry = undefined;\n      }\n\n      if (defaultCallingCode) {\n        /* istanbul ignore if */\n        if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n          if (this.metadata.isNonGeographicCallingCode(defaultCallingCode)) {\n            defaultCountry = '001';\n          }\n        }\n      }\n\n      return [defaultCountry, defaultCallingCode];\n    }\n    /**\r\n     * Inputs \"next\" phone number characters.\r\n     * @param  {string} text\r\n     * @return {string} Formatted phone number characters that have been input so far.\r\n     */\n\n  }, {\n    key: \"input\",\n    value: function input(text) {\n      var _this$parser$input = this.parser.input(text, this.state),\n          digits = _this$parser$input.digits,\n          justLeadingPlus = _this$parser$input.justLeadingPlus;\n\n      if (justLeadingPlus) {\n        this.formattedOutput = '+';\n      } else if (digits) {\n        this.determineTheCountryIfNeeded(); // Match the available formats by the currently available leading digits.\n\n        if (this.state.nationalSignificantNumber) {\n          this.formatter.narrowDownMatchingFormats(this.state);\n        }\n\n        var formattedNationalNumber;\n\n        if (this.metadata.hasSelectedNumberingPlan()) {\n          formattedNationalNumber = this.formatter.format(digits, this.state);\n        }\n\n        if (formattedNationalNumber === undefined) {\n          // See if another national (significant) number could be re-extracted.\n          if (this.parser.reExtractNationalSignificantNumber(this.state)) {\n            this.determineTheCountryIfNeeded(); // If it could, then re-try formatting the new national (significant) number.\n\n            var nationalDigits = this.state.getNationalDigits();\n\n            if (nationalDigits) {\n              formattedNationalNumber = this.formatter.format(nationalDigits, this.state);\n            }\n          }\n        }\n\n        this.formattedOutput = formattedNationalNumber ? this.getFullNumber(formattedNationalNumber) : this.getNonFormattedNumber();\n      }\n\n      return this.formattedOutput;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this = this;\n\n      this.state = new AsYouTypeState({\n        onCountryChange: function onCountryChange(country) {\n          // Before version `1.6.0`, the official `AsYouType` formatter API\n          // included the `.country` property of an `AsYouType` instance.\n          // Since that property (along with the others) have been moved to\n          // `this.state`, `this.country` property is emulated for compatibility\n          // with the old versions.\n          _this.country = country;\n        },\n        onCallingCodeChange: function onCallingCodeChange(country, callingCode) {\n          _this.metadata.selectNumberingPlan(country, callingCode);\n\n          _this.formatter.reset(_this.metadata.numberingPlan, _this.state);\n\n          _this.parser.reset(_this.metadata.numberingPlan);\n        }\n      });\n      this.formatter = new AsYouTypeFormatter({\n        state: this.state,\n        metadata: this.metadata\n      });\n      this.parser = new AsYouTypeParser({\n        defaultCountry: this.defaultCountry,\n        defaultCallingCode: this.defaultCallingCode,\n        metadata: this.metadata,\n        state: this.state,\n        onNationalSignificantNumberChange: function onNationalSignificantNumberChange() {\n          _this.determineTheCountryIfNeeded();\n\n          _this.formatter.reset(_this.metadata.numberingPlan, _this.state);\n        }\n      });\n      this.state.reset(this.defaultCountry, this.defaultCallingCode);\n      this.formattedOutput = '';\n      return this;\n    }\n    /**\r\n     * Returns `true` if the phone number is being input in international format.\r\n     * In other words, returns `true` if and only if the parsed phone number starts with a `\"+\"`.\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"isInternational\",\n    value: function isInternational() {\n      return this.state.international;\n    }\n    /**\r\n     * Returns the \"calling code\" part of the phone number when it's being input\r\n     * in an international format.\r\n     * If no valid calling code has been entered so far, returns `undefined`.\r\n     * @return {string} [callingCode]\r\n     */\n\n  }, {\n    key: \"getCallingCode\",\n    value: function getCallingCode() {\n      // If the number is being input in national format and some \"default calling code\"\n      // has been passed to `AsYouType` constructor, then `this.state.callingCode`\n      // is equal to that \"default calling code\".\n      //\n      // If the number is being input in national format and no \"default calling code\"\n      // has been passed to `AsYouType` constructor, then returns `undefined`,\n      // even if a \"default country\" has been passed to `AsYouType` constructor.\n      //\n      if (this.isInternational()) {\n        return this.state.callingCode;\n      }\n    } // A legacy alias.\n\n  }, {\n    key: \"getCountryCallingCode\",\n    value: function getCountryCallingCode() {\n      return this.getCallingCode();\n    }\n    /**\r\n     * Returns a two-letter country code of the phone number.\r\n     * Returns `undefined` for \"non-geographic\" phone numbering plans.\r\n     * Returns `undefined` if no phone number has been input yet.\r\n     * @return {string} [country]\r\n     */\n\n  }, {\n    key: \"getCountry\",\n    value: function getCountry() {\n      var digits = this.state.digits; // Return `undefined` if no digits have been input yet.\n\n      if (digits) {\n        return this._getCountry();\n      }\n    }\n    /**\r\n     * Returns a two-letter country code of the phone number.\r\n     * Returns `undefined` for \"non-geographic\" phone numbering plans.\r\n     * @return {string} [country]\r\n     */\n\n  }, {\n    key: \"_getCountry\",\n    value: function _getCountry() {\n      var country = this.state.country;\n      /* istanbul ignore if */\n\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        // `AsYouType.getCountry()` returns `undefined`\n        // for \"non-geographic\" phone numbering plans.\n        if (country === '001') {\n          return;\n        }\n      }\n\n      return country;\n    }\n  }, {\n    key: \"determineTheCountryIfNeeded\",\n    value: function determineTheCountryIfNeeded() {\n      // Suppose a user enters a phone number in international format,\n      // and there're several countries corresponding to that country calling code,\n      // and a country has been derived from the number, and then\n      // a user enters one more digit and the number is no longer\n      // valid for the derived country, so the country should be re-derived\n      // on every new digit in those cases.\n      //\n      // If the phone number is being input in national format,\n      // then it could be a case when `defaultCountry` wasn't specified\n      // when creating `AsYouType` instance, and just `defaultCallingCode` was specified,\n      // and that \"calling code\" could correspond to a \"non-geographic entity\",\n      // or there could be several countries corresponding to that country calling code.\n      // In those cases, `this.country` is `undefined` and should be derived\n      // from the number. Again, if country calling code is ambiguous, then\n      // `this.country` should be re-derived with each new digit.\n      //\n      if (!this.state.country || this.isCountryCallingCodeAmbiguous()) {\n        this.determineTheCountry();\n      }\n    } // Prepends `+CountryCode ` in case of an international phone number\n\n  }, {\n    key: \"getFullNumber\",\n    value: function getFullNumber(formattedNationalNumber) {\n      var _this2 = this;\n\n      if (this.isInternational()) {\n        var prefix = function prefix(text) {\n          return _this2.formatter.getInternationalPrefixBeforeCountryCallingCode(_this2.state, {\n            spacing: text ? true : false\n          }) + text;\n        };\n\n        var callingCode = this.state.callingCode;\n\n        if (!callingCode) {\n          return prefix(\"\".concat(this.state.getDigitsWithoutInternationalPrefix()));\n        }\n\n        if (!formattedNationalNumber) {\n          return prefix(callingCode);\n        }\n\n        return prefix(\"\".concat(callingCode, \" \").concat(formattedNationalNumber));\n      }\n\n      return formattedNationalNumber;\n    }\n  }, {\n    key: \"getNonFormattedNationalNumberWithPrefix\",\n    value: function getNonFormattedNationalNumberWithPrefix() {\n      var _this$state = this.state,\n          nationalSignificantNumber = _this$state.nationalSignificantNumber,\n          complexPrefixBeforeNationalSignificantNumber = _this$state.complexPrefixBeforeNationalSignificantNumber,\n          nationalPrefix = _this$state.nationalPrefix;\n      var number = nationalSignificantNumber;\n      var prefix = complexPrefixBeforeNationalSignificantNumber || nationalPrefix;\n\n      if (prefix) {\n        number = prefix + number;\n      }\n\n      return number;\n    }\n  }, {\n    key: \"getNonFormattedNumber\",\n    value: function getNonFormattedNumber() {\n      var nationalSignificantNumberMatchesInput = this.state.nationalSignificantNumberMatchesInput;\n      return this.getFullNumber(nationalSignificantNumberMatchesInput ? this.getNonFormattedNationalNumberWithPrefix() : this.state.getNationalDigits());\n    }\n  }, {\n    key: \"getNonFormattedTemplate\",\n    value: function getNonFormattedTemplate() {\n      var number = this.getNonFormattedNumber();\n\n      if (number) {\n        return number.replace(/[\\+\\d]/g, DIGIT_PLACEHOLDER);\n      }\n    }\n  }, {\n    key: \"isCountryCallingCodeAmbiguous\",\n    value: function isCountryCallingCodeAmbiguous() {\n      var callingCode = this.state.callingCode;\n      var countryCodes = this.metadata.getCountryCodesForCallingCode(callingCode);\n      return countryCodes && countryCodes.length > 1;\n    } // Determines the country of the phone number\n    // entered so far based on the country phone code\n    // and the national phone number.\n\n  }, {\n    key: \"determineTheCountry\",\n    value: function determineTheCountry() {\n      this.state.setCountry(getCountryByCallingCode(this.isInternational() ? this.state.callingCode : this.defaultCallingCode, this.state.nationalSignificantNumber, this.metadata));\n    }\n    /**\r\n     * Returns a E.164 phone number value for the user's input.\r\n     *\r\n     * For example, for country `\"US\"` and input `\"(222) 333-4444\"`\r\n     * it will return `\"+12223334444\"`.\r\n     *\r\n     * For international phone number input, it will also auto-correct\r\n     * some minor errors such as using a national prefix when writing\r\n     * an international phone number. For example, if the user inputs\r\n     * `\"+44 0 7400 000000\"` then it will return an auto-corrected\r\n     * `\"+447400000000\"` phone number value.\r\n     *\r\n     * Will return `undefined` if no digits have been input,\r\n     * or when inputting a phone number in national format and no\r\n     * default country or default \"country calling code\" have been set.\r\n     *\r\n     * @return {string} [value]\r\n     */\n\n  }, {\n    key: \"getNumberValue\",\n    value: function getNumberValue() {\n      var _this$state2 = this.state,\n          digits = _this$state2.digits,\n          callingCode = _this$state2.callingCode,\n          country = _this$state2.country,\n          nationalSignificantNumber = _this$state2.nationalSignificantNumber; // Will return `undefined` if no digits have been input.\n\n      if (!digits) {\n        return;\n      }\n\n      if (this.isInternational()) {\n        if (callingCode) {\n          return '+' + callingCode + nationalSignificantNumber;\n        } else {\n          return '+' + digits;\n        }\n      } else {\n        if (country || callingCode) {\n          var callingCode_ = country ? this.metadata.countryCallingCode() : callingCode;\n          return '+' + callingCode_ + nationalSignificantNumber;\n        }\n      }\n    }\n    /**\r\n     * Returns an instance of `PhoneNumber` class.\r\n     * Will return `undefined` if no national (significant) number\r\n     * digits have been entered so far, or if no `defaultCountry` has been\r\n     * set and the user enters a phone number not in international format.\r\n     */\n\n  }, {\n    key: \"getNumber\",\n    value: function getNumber() {\n      var _this$state3 = this.state,\n          nationalSignificantNumber = _this$state3.nationalSignificantNumber,\n          carrierCode = _this$state3.carrierCode,\n          callingCode = _this$state3.callingCode; // `this._getCountry()` is basically same as `this.state.country`\n      // with the only change that it return `undefined` in case of a\n      // \"non-geographic\" numbering plan instead of `\"001\"` \"internal use\" value.\n\n      var country = this._getCountry();\n\n      if (!nationalSignificantNumber) {\n        return;\n      }\n\n      if (!country && !callingCode) {\n        return;\n      }\n\n      var phoneNumber = new PhoneNumber(country || callingCode, nationalSignificantNumber, this.metadata.metadata);\n\n      if (carrierCode) {\n        phoneNumber.carrierCode = carrierCode;\n      } // Phone number extensions are not supported by \"As You Type\" formatter.\n\n\n      return phoneNumber;\n    }\n    /**\r\n     * Returns `true` if the phone number is \"possible\".\r\n     * Is just a shortcut for `PhoneNumber.isPossible()`.\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"isPossible\",\n    value: function isPossible() {\n      var phoneNumber = this.getNumber();\n\n      if (!phoneNumber) {\n        return false;\n      }\n\n      return phoneNumber.isPossible();\n    }\n    /**\r\n     * Returns `true` if the phone number is \"valid\".\r\n     * Is just a shortcut for `PhoneNumber.isValid()`.\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      var phoneNumber = this.getNumber();\n\n      if (!phoneNumber) {\n        return false;\n      }\n\n      return phoneNumber.isValid();\n    }\n    /**\r\n     * @deprecated\r\n     * This method is used in `react-phone-number-input/source/input-control.js`\r\n     * in versions before `3.0.16`.\r\n     */\n\n  }, {\n    key: \"getNationalNumber\",\n    value: function getNationalNumber() {\n      return this.state.nationalSignificantNumber;\n    }\n    /**\r\n     * Returns the phone number characters entered by the user.\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"getChars\",\n    value: function getChars() {\n      return (this.state.international ? '+' : '') + this.state.digits;\n    }\n    /**\r\n     * Returns the template for the formatted phone number.\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"getTemplate\",\n    value: function getTemplate() {\n      return this.formatter.getTemplate(this.state) || this.getNonFormattedTemplate() || '';\n    }\n  }]);\n\n  return AsYouType;\n}();\n\nexport { AsYouType as default };\n//# sourceMappingURL=AsYouType.js.map","import metadata from '../metadata'\r\nimport { PhoneNumberMatcher as _PhoneNumberMatcher } from '../../core/index'\r\n\r\nexport function PhoneNumberMatcher(text, options) {\r\n\treturn _PhoneNumberMatcher.call(this, text, options, metadata)\r\n}\r\nPhoneNumberMatcher.prototype = Object.create(_PhoneNumberMatcher.prototype, {})\r\nPhoneNumberMatcher.prototype.constructor = PhoneNumberMatcher\r\n","import metadata from '../metadata'\r\nimport { AsYouType as _AsYouType } from '../../core/index'\r\n\r\nexport function AsYouType(country) {\r\n\treturn _AsYouType.call(this, country, metadata)\r\n}\r\n\r\nAsYouType.prototype = Object.create(_AsYouType.prototype, {})\r\nAsYouType.prototype.constructor = AsYouType","import metadata from '../metadata'\r\nimport { Metadata as _Metadata } from '../../core/index'\r\n\r\nexport function Metadata() {\r\n\treturn _Metadata.call(this, metadata)\r\n}\r\n\r\nMetadata.prototype = Object.create(_Metadata.prototype, {})\r\nMetadata.prototype.constructor = Metadata","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is a legacy function.\n// Use `findNumbers()` instead.\nimport { PLUS_CHARS, VALID_PUNCTUATION, VALID_DIGITS, WHITESPACE } from './constants';\nimport parse from './parse_';\nimport { VALID_PHONE_NUMBER_WITH_EXTENSION } from './helpers/isViablePhoneNumber';\nimport createExtensionPattern from './helpers/extension/createExtensionPattern';\nimport parsePreCandidate from './findNumbers/parsePreCandidate';\nimport isValidPreCandidate from './findNumbers/isValidPreCandidate';\nimport isValidCandidate from './findNumbers/isValidCandidate';\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\n\nexport var EXTN_PATTERNS_FOR_PARSING = createExtensionPattern('parsing');\nvar WHITESPACE_IN_THE_BEGINNING_PATTERN = new RegExp('^[' + WHITESPACE + ']+');\nvar PUNCTUATION_IN_THE_END_PATTERN = new RegExp('[' + VALID_PUNCTUATION + ']+$'); // // Regular expression for getting opening brackets for a valid number\n// // found using `PHONE_NUMBER_START_PATTERN` for prepending those brackets to the number.\n// const BEFORE_NUMBER_DIGITS_PUNCTUATION = new RegExp('[' + OPENING_BRACKETS + ']+' + '[' + WHITESPACE + ']*' + '$')\n\nvar VALID_PRECEDING_CHARACTER_PATTERN = /[^a-zA-Z0-9]/;\nexport default function findPhoneNumbers(text, options, metadata) {\n  /* istanbul ignore if */\n  if (options === undefined) {\n    options = {};\n  }\n\n  var search = new PhoneNumberSearch(text, options, metadata);\n  var phones = [];\n\n  while (search.hasNext()) {\n    phones.push(search.next());\n  }\n\n  return phones;\n}\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\n\nexport function searchPhoneNumbers(text, options, metadata) {\n  /* istanbul ignore if */\n  if (options === undefined) {\n    options = {};\n  }\n\n  var search = new PhoneNumberSearch(text, options, metadata);\n  return _defineProperty({}, Symbol.iterator, function () {\n    return {\n      next: function next() {\n        if (search.hasNext()) {\n          return {\n            done: false,\n            value: search.next()\n          };\n        }\n\n        return {\n          done: true\n        };\n      }\n    };\n  });\n}\n/**\r\n * Extracts a parseable phone number including any opening brackets, etc.\r\n * @param  {string} text - Input.\r\n * @return {object} `{ ?number, ?startsAt, ?endsAt }`.\r\n */\n\nexport var PhoneNumberSearch =\n/*#__PURE__*/\nfunction () {\n  // Iteration tristate.\n  function PhoneNumberSearch(text, options, metadata) {\n    _classCallCheck(this, PhoneNumberSearch);\n\n    _defineProperty(this, \"state\", 'NOT_READY');\n\n    this.text = text; // If assigning the `{}` default value is moved to the arguments above,\n    // code coverage would decrease for some weird reason.\n\n    this.options = options || {};\n    this.metadata = metadata;\n    this.regexp = new RegExp(VALID_PHONE_NUMBER_WITH_EXTENSION, 'ig');\n  }\n\n  _createClass(PhoneNumberSearch, [{\n    key: \"find\",\n    value: function find() {\n      var matches = this.regexp.exec(this.text);\n\n      if (!matches) {\n        return;\n      }\n\n      var number = matches[0];\n      var startsAt = matches.index;\n      number = number.replace(WHITESPACE_IN_THE_BEGINNING_PATTERN, '');\n      startsAt += matches[0].length - number.length; // Fixes not parsing numbers with whitespace in the end.\n      // Also fixes not parsing numbers with opening parentheses in the end.\n      // https://github.com/catamphetamine/libphonenumber-js/issues/252\n\n      number = number.replace(PUNCTUATION_IN_THE_END_PATTERN, '');\n      number = parsePreCandidate(number);\n      var result = this.parseCandidate(number, startsAt);\n\n      if (result) {\n        return result;\n      } // Tail recursion.\n      // Try the next one if this one is not a valid phone number.\n\n\n      return this.find();\n    }\n  }, {\n    key: \"parseCandidate\",\n    value: function parseCandidate(number, startsAt) {\n      if (!isValidPreCandidate(number, startsAt, this.text)) {\n        return;\n      } // Don't parse phone numbers which are non-phone numbers\n      // due to being part of something else (e.g. a UUID).\n      // https://github.com/catamphetamine/libphonenumber-js/issues/213\n      // Copy-pasted from Google's `PhoneNumberMatcher.js` (`.parseAndValidate()`).\n\n\n      if (!isValidCandidate(number, startsAt, this.text, this.options.extended ? 'POSSIBLE' : 'VALID')) {\n        return;\n      } // // Prepend any opening brackets left behind by the\n      // // `PHONE_NUMBER_START_PATTERN` regexp.\n      // const text_before_number = text.slice(this.searching_from, startsAt)\n      // const full_number_starts_at = text_before_number.search(BEFORE_NUMBER_DIGITS_PUNCTUATION)\n      // if (full_number_starts_at >= 0)\n      // {\n      // \tnumber   = text_before_number.slice(full_number_starts_at) + number\n      // \tstartsAt = full_number_starts_at\n      // }\n      //\n      // this.searching_from = matches.lastIndex\n\n\n      var result = parse(number, this.options, this.metadata);\n\n      if (!result.phone) {\n        return;\n      }\n\n      result.startsAt = startsAt;\n      result.endsAt = startsAt + number.length;\n      return result;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      if (this.state === 'NOT_READY') {\n        this.last_match = this.find();\n\n        if (this.last_match) {\n          this.state = 'READY';\n        } else {\n          this.state = 'DONE';\n        }\n      }\n\n      return this.state === 'READY';\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      // Check the state and find the next match as a side-effect if necessary.\n      if (!this.hasNext()) {\n        throw new Error('No next element');\n      } // Don't retain that memory any longer than necessary.\n\n\n      var result = this.last_match;\n      this.last_match = null;\n      this.state = 'NOT_READY';\n      return result;\n    }\n  }]);\n\n  return PhoneNumberSearch;\n}();\n//# sourceMappingURL=findPhoneNumbers_.js.map","import metadata from '../min/metadata'\r\n\r\nimport { PhoneNumberSearch as _PhoneNumberSearch } from '../es6/findPhoneNumbers_'\r\n\r\nexport function PhoneNumberSearch(text, options) {\r\n\t_PhoneNumberSearch.call(this, text, options, metadata)\r\n}\r\n\r\n// Deprecated.\r\nPhoneNumberSearch.prototype = Object.create(_PhoneNumberSearch.prototype, {})\r\nPhoneNumberSearch.prototype.constructor = PhoneNumberSearch\r\n","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\nexport var IS_PHONE_NUMBER = 'isPhoneNumber';\n/**\n * Checks if the string is a valid phone number. To successfully validate any phone number the text must include\n * the intl. calling code, if the calling code wont be provided then the region must be set.\n *\n * @param value the potential phone number string to test\n * @param region 2 characters uppercase country code (e.g. DE, US, CH) for country specific validation.\n * If text doesn't start with the international calling code (e.g. +41), then you must set this parameter.\n */\nexport function isPhoneNumber(value, region) {\n    try {\n        var phoneNum = parsePhoneNumberFromString(value, region);\n        var result = phoneNum === null || phoneNum === void 0 ? void 0 : phoneNum.isValid();\n        return !!result;\n    }\n    catch (error) {\n        // logging?\n        return false;\n    }\n}\n/**\n * Checks if the string is a valid phone number. To successfully validate any phone number the text must include\n * the intl. calling code, if the calling code wont be provided then the region must be set.\n *\n * @param region 2 characters uppercase country code (e.g. DE, US, CH) for country specific validation.\n * If text doesn't start with the international calling code (e.g. +41), then you must set this parameter.\n */\nexport function IsPhoneNumber(region, validationOptions) {\n    return ValidateBy({\n        name: IS_PHONE_NUMBER,\n        constraints: [region],\n        validator: {\n            validate: function (value, args) { return isPhoneNumber(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a valid phone number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsPhoneNumber.js.map","import { withMetadata } from '../metadata'\r\nimport { parsePhoneNumberFromString as _parsePhoneNumberFromString } from '../../core/index'\r\n\r\nexport function parsePhoneNumberFromString() {\r\n\treturn withMetadata(_parsePhoneNumberFromString, arguments)\r\n}","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\nexport var IS_MILITARY_TIME = 'isMilitaryTime';\n/**\n * Checks if the string represents a time without a given timezone in the format HH:MM (military)\n * If the given value does not match the pattern HH:MM, then it returns false.\n */\nexport function isMilitaryTime(value) {\n    var militaryTimeRegex = /^([01]\\d|2[0-3]):?([0-5]\\d)$/;\n    return typeof value === 'string' && matchesValidator(value, militaryTimeRegex);\n}\n/**\n * Checks if the string represents a time without a given timezone in the format HH:MM (military)\n * If the given value does not match the pattern HH:MM, then it returns false.\n */\nexport function IsMilitaryTime(validationOptions) {\n    return ValidateBy({\n        name: IS_MILITARY_TIME,\n        validator: {\n            validate: function (value, args) { return isMilitaryTime(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a valid representation of military time in the format HH:MM'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsMilitaryTime.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHashValidator from 'validator/lib/isHash';\nexport var IS_HASH = 'isHash';\n/**\n * Check if the string is a hash of type algorithm.\n * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',\n * 'tiger160', 'tiger192', 'crc32', 'crc32b']\n */\nexport function isHash(value, algorithm) {\n    return typeof value === 'string' && isHashValidator(value, algorithm);\n}\n/**\n * Check if the string is a hash of type algorithm.\n * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',\n * 'tiger160', 'tiger192', 'crc32', 'crc32b']\n */\nexport function IsHash(algorithm, validationOptions) {\n    return ValidateBy({\n        name: IS_HASH,\n        constraints: [algorithm],\n        validator: {\n            validate: function (value, args) { return isHash(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a hash of type $constraint1'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsHash.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISSNValidator from 'validator/lib/isISSN';\nexport var IS_ISSN = 'isISSN';\n/**\n * Checks if the string is a ISSN.\n * If given value is not a string, then it returns false.\n */\nexport function isISSN(value, options) {\n    return typeof value === 'string' && isISSNValidator(value, options);\n}\n/**\n * Checks if the string is a ISSN.\n * If given value is not a string, then it returns false.\n */\nexport function IsISSN(options, validationOptions) {\n    return ValidateBy({\n        name: IS_ISSN,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isISSN(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a ISSN'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsISSN.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { isISO8601 } from './IsISO8601';\nexport var IS_DATE_STRING = 'isDateString';\n/**\n * Alias for IsISO8601 validator\n */\nexport function isDateString(value, options) {\n    return isISO8601(value, options);\n}\n/**\n * Alias for IsISO8601 validator\n */\nexport function IsDateString(options, validationOptions) {\n    return ValidateBy({\n        name: IS_DATE_STRING,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isDateString(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a valid ISO 8601 date string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsDateString.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBooleanValidator from 'validator/lib/isBoolean';\nexport var IS_BOOLEAN_STRING = 'isBooleanString';\n/**\n * Checks if a string is a boolean.\n * If given value is not a string, then it returns false.\n */\nexport function isBooleanString(value) {\n    return typeof value === 'string' && isBooleanValidator(value);\n}\n/**\n * Checks if a string is a boolean.\n * If given value is not a string, then it returns false.\n */\nexport function IsBooleanString(validationOptions) {\n    return ValidateBy({\n        name: IS_BOOLEAN_STRING,\n        validator: {\n            validate: function (value, args) { return isBooleanString(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a boolean string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsBooleanString.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isNumericValidator from 'validator/lib/isNumeric';\nexport var IS_NUMBER_STRING = 'isNumberString';\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\nexport function isNumberString(value, options) {\n    return typeof value === 'string' && isNumericValidator(value, options);\n}\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\nexport function IsNumberString(options, validationOptions) {\n    return ValidateBy({\n        name: IS_NUMBER_STRING,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isNumberString(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a number string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsNumberString.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase32Validator from 'validator/lib/isBase32';\nexport var IS_BASE32 = 'isBase32';\n/**\n * Checks if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function isBase32(value) {\n    return typeof value === 'string' && isBase32Validator(value);\n}\n/**\n * Check if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function IsBase32(validationOptions) {\n    return ValidateBy({\n        name: IS_BASE32,\n        validator: {\n            validate: function (value, args) { return isBase32(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be base32 encoded'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsBase32.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBICValidator from 'validator/lib/isBIC';\nexport var IS_BIC = 'isBIC';\n/**\n * Check if a string is a BIC (Bank Identification Code) or SWIFT code.\n * If given value is not a string, then it returns false.\n */\nexport function isBIC(value) {\n    return typeof value === 'string' && isBICValidator(value);\n}\n/**\n * Check if a string is a BIC (Bank Identification Code) or SWIFT code.\n * If given value is not a string, then it returns false.\n */\nexport function IsBIC(validationOptions) {\n    return ValidateBy({\n        name: IS_BIC,\n        validator: {\n            validate: function (value, args) { return isBIC(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a BIC or SWIFT code'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsBIC.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBtcAddressValidator from 'validator/lib/isBtcAddress';\nexport var IS_BTC_ADDRESS = 'isBtcAddress';\n/**\n * Check if the string is a valid BTC address.\n * If given value is not a string, then it returns false.\n */\nexport function isBtcAddress(value) {\n    return typeof value === 'string' && isBtcAddressValidator(value);\n}\n/**\n * Check if the string is a valid BTC address.\n * If given value is not a string, then it returns false.\n */\nexport function IsBtcAddress(validationOptions) {\n    return ValidateBy({\n        name: IS_BTC_ADDRESS,\n        validator: {\n            validate: function (value, args) { return isBtcAddress(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a BTC address'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsBtcAddress.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDataURIValidator from 'validator/lib/isDataURI';\nexport var IS_DATA_URI = 'isDataURI';\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isDataURI(value) {\n    return typeof value === 'string' && isDataURIValidator(value);\n}\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsDataURI(validationOptions) {\n    return ValidateBy({\n        name: IS_DATA_URI,\n        validator: {\n            validate: function (value, args) { return isDataURI(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a data uri format'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsDataURI.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEANValidator from 'validator/lib/isEAN';\nexport var IS_EAN = 'isEAN';\n/**\n * Check if the string is an EAN (European Article Number).\n * If given value is not a string, then it returns false.\n */\nexport function isEAN(value) {\n    return typeof value === 'string' && isEANValidator(value);\n}\n/**\n * Check if the string is an EAN (European Article Number).\n * If given value is not a string, then it returns false.\n */\nexport function IsEAN(validationOptions) {\n    return ValidateBy({\n        name: IS_EAN,\n        validator: {\n            validate: function (value, args) { return isEAN(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an EAN (European Article Number)'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsEAN.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEthereumAddressValidator from 'validator/lib/isEthereumAddress';\nexport var IS_ETHEREUM_ADDRESS = 'isEthereumAddress';\n/**\n * Check if the string is an Ethereum address using basic regex. Does not validate address checksums.\n * If given value is not a string, then it returns false.\n */\nexport function isEthereumAddress(value) {\n    return typeof value === 'string' && isEthereumAddressValidator(value);\n}\n/**\n * Check if the string is an Ethereum address using basic regex. Does not validate address checksums.\n * If given value is not a string, then it returns false.\n */\nexport function IsEthereumAddress(validationOptions) {\n    return ValidateBy({\n        name: IS_ETHEREUM_ADDRESS,\n        validator: {\n            validate: function (value, args) { return isEthereumAddress(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an Ethereum address'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsEthereumAddress.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHSLValidator from 'validator/lib/isHSL';\nexport var IS_HSL = 'isHSL';\n/**\n * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.\n * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).\n * If given value is not a string, then it returns false.\n */\nexport function isHSL(value) {\n    return typeof value === 'string' && isHSLValidator(value);\n}\n/**\n * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.\n * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).\n * If given value is not a string, then it returns false.\n */\nexport function IsHSL(validationOptions) {\n    return ValidateBy({\n        name: IS_HSL,\n        validator: {\n            validate: function (value, args) { return isHSL(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a HSL color'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsHSL.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIBANValidator from 'validator/lib/isIBAN';\nexport var IS_IBAN = 'isIBAN';\n/**\n * Check if a string is a IBAN (International Bank Account Number).\n * If given value is not a string, then it returns false.\n */\nexport function isIBAN(value) {\n    return typeof value === 'string' && isIBANValidator(value);\n}\n/**\n * Check if a string is a IBAN (International Bank Account Number).\n * If given value is not a string, then it returns false.\n */\nexport function IsIBAN(validationOptions) {\n    return ValidateBy({\n        name: IS_IBAN,\n        validator: {\n            validate: function (value, args) { return isIBAN(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an IBAN'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsIBAN.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIdentityCardValidator from 'validator/lib/isIdentityCard';\nexport var IS_IDENTITY_CARD = 'isIdentityCard';\n/**\n * Check if the string is a valid identity card code.\n * locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.\n * Defaults to 'any'.\n * If given value is not a string, then it returns false.\n */\nexport function isIdentityCard(value, locale) {\n    return typeof value === 'string' && isIdentityCardValidator(value, locale);\n}\n/**\n * Check if the string is a valid identity card code.\n * locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.\n * Defaults to 'any'.\n * If given value is not a string, then it returns false.\n */\nexport function IsIdentityCard(locale, validationOptions) {\n    return ValidateBy({\n        name: IS_IDENTITY_CARD,\n        constraints: [locale],\n        validator: {\n            validate: function (value, args) { return isIdentityCard(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a identity card number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsIdentityCard.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISRCValidator from 'validator/lib/isISRC';\nexport var IS_ISRC = 'isISRC';\n/**\n * Check if the string is a ISRC.\n * If given value is not a string, then it returns false.\n */\nexport function isISRC(value) {\n    return typeof value === 'string' && isISRCValidator(value);\n}\n/**\n * Check if the string is a ISRC.\n * If given value is not a string, then it returns false.\n */\nexport function IsISRC(validationOptions) {\n    return ValidateBy({\n        name: IS_ISRC,\n        validator: {\n            validate: function (value, args) { return isISRC(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an ISRC'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsISRC.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLocaleValidator from 'validator/lib/isLocale';\nexport var IS_LOCALE = 'isLocale';\n/**\n * Check if the string is a locale.\n * If given value is not a string, then it returns false.\n */\nexport function isLocale(value) {\n    return typeof value === 'string' && isLocaleValidator(value);\n}\n/**\n * Check if the string is a locale.\n * If given value is not a string, then it returns false.\n */\nexport function IsLocale(validationOptions) {\n    return ValidateBy({\n        name: IS_LOCALE,\n        validator: {\n            validate: function (value, args) { return isLocale(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be locale'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsLocale.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMagnetURIValidator from 'validator/lib/isMagnetURI';\nexport var IS_MAGNET_URI = 'isMagnetURI';\n/**\n * Check if the string is a magnet uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isMagnetURI(value) {\n    return typeof value === 'string' && isMagnetURIValidator(value);\n}\n/**\n * Check if the string is a magnet uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsMagnetURI(validationOptions) {\n    return ValidateBy({\n        name: IS_MAGNET_URI,\n        validator: {\n            validate: function (value, args) { return isMagnetURI(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be magnet uri format'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsMagnetURI.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMimeTypeValidator from 'validator/lib/isMimeType';\nexport var IS_MIME_TYPE = 'isMimeType';\n/**\n * Check if the string matches to a valid MIME type format\n * If given value is not a string, then it returns false.\n */\nexport function isMimeType(value) {\n    return typeof value === 'string' && isMimeTypeValidator(value);\n}\n/**\n * Check if the string matches to a valid MIME type format\n * If given value is not a string, then it returns false.\n */\nexport function IsMimeType(validationOptions) {\n    return ValidateBy({\n        name: IS_MIME_TYPE,\n        validator: {\n            validate: function (value, args) { return isMimeType(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be MIME type format'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsMimeType.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isOctalValidator from 'validator/lib/isOctal';\nexport var IS_OCTAL = 'isOctal';\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function isOctal(value) {\n    return typeof value === 'string' && isOctalValidator(value);\n}\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function IsOctal(validationOptions) {\n    return ValidateBy({\n        name: IS_OCTAL,\n        validator: {\n            validate: function (value, args) { return isOctal(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be valid octal number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsOctal.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPassportNumberValidator from 'validator/lib/isPassportNumber';\nexport var IS_PASSPORT_NUMBER = 'isPassportNumber';\n/**\n * Check if the string is a valid passport number relative to a specific country code.\n * If given value is not a string, then it returns false.\n */\nexport function isPassportNumber(value, countryCode) {\n    return typeof value === 'string' && isPassportNumberValidator(value, countryCode);\n}\n/**\n * Check if the string is a valid passport number relative to a specific country code.\n * If given value is not a string, then it returns false.\n */\nexport function IsPassportNumber(countryCode, validationOptions) {\n    return ValidateBy({\n        name: IS_PASSPORT_NUMBER,\n        constraints: [countryCode],\n        validator: {\n            validate: function (value, args) { return isPassportNumber(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be valid passport number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsPassportNumber.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPostalCodeValidator from 'validator/lib/isPostalCode';\nexport var IS_POSTAL_CODE = 'isPostalCode';\n/**\n * Check if the string is a postal code,\n * (locale is one of [ 'AD', 'AT', 'AU', 'BE', 'BG', 'BR', 'CA', 'CH', 'CZ', 'DE', 'DK', 'DZ', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'ID', 'IE' 'IL', 'IN', 'IR', 'IS', 'IT', 'JP', 'KE', 'LI', 'LT', 'LU', 'LV', 'MT', 'MX', 'NL', 'NO', 'NZ', 'PL', 'PR', 'PT', 'RO', 'RU', 'SA', 'SE', 'SI', 'TN', 'TW', 'UA', 'US', 'ZA', 'ZM' ] OR 'any'. If 'any' is used, function will check if any of the locals match. Locale list is validator.isPostalCodeLocales.).\n * If given value is not a string, then it returns false.\n */\nexport function isPostalCode(value, locale) {\n    return typeof value === 'string' && isPostalCodeValidator(value, locale);\n}\n/**\n * Check if the string is a postal code,\n * (locale is one of [ 'AD', 'AT', 'AU', 'BE', 'BG', 'BR', 'CA', 'CH', 'CZ', 'DE', 'DK', 'DZ', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'ID', 'IE' 'IL', 'IN', 'IR', 'IS', 'IT', 'JP', 'KE', 'LI', 'LT', 'LU', 'LV', 'MT', 'MX', 'NL', 'NO', 'NZ', 'PL', 'PR', 'PT', 'RO', 'RU', 'SA', 'SE', 'SI', 'TN', 'TW', 'UA', 'US', 'ZA', 'ZM' ] OR 'any'. If 'any' is used, function will check if any of the locals match. Locale list is validator.isPostalCodeLocales.).\n * If given value is not a string, then it returns false.\n */\nexport function IsPostalCode(locale, validationOptions) {\n    return ValidateBy({\n        name: IS_POSTAL_CODE,\n        constraints: [locale],\n        validator: {\n            validate: function (value, args) { return isPostalCode(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a postal code'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsPostalCode.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isRFC3339Validator from 'validator/lib/isRFC3339';\nexport var IS_RFC_3339 = 'isRFC3339';\n/**\n * Check if the string is a valid RFC 3339 date.\n * If given value is not a string, then it returns false.\n */\nexport function isRFC3339(value) {\n    return typeof value === 'string' && isRFC3339Validator(value);\n}\n/**\n * Check if the string is a valid RFC 3339 date.\n * If given value is not a string, then it returns false.\n */\nexport function IsRFC3339(validationOptions) {\n    return ValidateBy({\n        name: IS_RFC_3339,\n        validator: {\n            validate: function (value, args) { return isRFC3339(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be RFC 3339 date'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsRFC3339.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isRgbColorValidator from 'validator/lib/isRgbColor';\nexport var IS_RGB_COLOR = 'isRgbColor';\n/**\n * Check if the string is a rgb or rgba color.\n * `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.\n * If given value is not a string, then it returns false.\n */\nexport function isRgbColor(value, includePercentValues) {\n    return typeof value === 'string' && isRgbColorValidator(value, includePercentValues);\n}\n/**\n * Check if the string is a rgb or rgba color.\n * `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.\n * If given value is not a string, then it returns false.\n */\nexport function IsRgbColor(includePercentValues, validationOptions) {\n    return ValidateBy({\n        name: IS_RGB_COLOR,\n        constraints: [includePercentValues],\n        validator: {\n            validate: function (value, args) { return isRgbColor(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be RGB color'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsRgbColor.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isSemVerValidator from 'validator/lib/isSemVer';\nexport var IS_SEM_VER = 'isSemVer';\n/**\n * Check if the string is a Semantic Versioning Specification (SemVer).\n * If given value is not a string, then it returns false.\n */\nexport function isSemVer(value) {\n    return typeof value === 'string' && isSemVerValidator(value);\n}\n/**\n * Check if the string is a Semantic Versioning Specification (SemVer).\n * If given value is not a string, then it returns false.\n */\nexport function IsSemVer(validationOptions) {\n    return ValidateBy({\n        name: IS_SEM_VER,\n        validator: {\n            validate: function (value, args) { return isSemVer(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a Semantic Versioning Specification'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsSemVer.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_BOOLEAN = 'isBoolean';\n/**\n * Checks if a given value is a boolean.\n */\nexport function isBoolean(value) {\n    return value instanceof Boolean || typeof value === 'boolean';\n}\n/**\n * Checks if a value is a boolean.\n */\nexport function IsBoolean(validationOptions) {\n    return ValidateBy({\n        name: IS_BOOLEAN,\n        validator: {\n            validate: function (value, args) { return isBoolean(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a boolean value'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsBoolean.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_DATE = 'isDate';\n/**\n * Checks if a given value is a date.\n */\nexport function isDate(value) {\n    return value instanceof Date && !isNaN(value.getTime());\n}\n/**\n * Checks if a value is a date.\n */\nexport function IsDate(validationOptions) {\n    return ValidateBy({\n        name: IS_DATE,\n        validator: {\n            validate: function (value, args) { return isDate(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a Date instance'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsDate.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_NUMBER = 'isNumber';\n/**\n * Checks if a given value is a number.\n */\nexport function isNumber(value, options) {\n    if (options === void 0) { options = {}; }\n    if (typeof value !== 'number') {\n        return false;\n    }\n    if (value === Infinity || value === -Infinity) {\n        return options.allowInfinity;\n    }\n    if (Number.isNaN(value)) {\n        return options.allowNaN;\n    }\n    if (options.maxDecimalPlaces !== undefined) {\n        var decimalPlaces = 0;\n        if (value % 1 !== 0) {\n            decimalPlaces = value.toString().split('.')[1].length;\n        }\n        if (decimalPlaces > options.maxDecimalPlaces) {\n            return false;\n        }\n    }\n    return Number.isFinite(value);\n}\n/**\n * Checks if a value is a number.\n */\nexport function IsNumber(options, validationOptions) {\n    if (options === void 0) { options = {}; }\n    return ValidateBy({\n        name: IS_NUMBER,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isNumber(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a number conforming to the specified constraints'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsNumber.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_ENUM = 'isEnum';\n/**\n * Checks if a given value is an enum\n */\nexport function isEnum(value, entity) {\n    var enumValues = Object.keys(entity).map(function (k) { return entity[k]; });\n    return enumValues.indexOf(value) >= 0;\n}\n/**\n * Checks if a given value is an enum\n */\nexport function IsEnum(entity, validationOptions) {\n    return ValidateBy({\n        name: IS_ENUM,\n        constraints: [entity],\n        validator: {\n            validate: function (value, args) { return isEnum(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a valid enum value'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsEnum.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_INT = 'isInt';\n/**\n * Checks if value is an integer.\n */\nexport function isInt(val) {\n    return typeof val === 'number' && Number.isInteger(val);\n}\n/**\n * Checks if value is an integer.\n */\nexport function IsInt(validationOptions) {\n    return ValidateBy({\n        name: IS_INT,\n        validator: {\n            validate: function (value, args) { return isInt(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an integer number'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsInt.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_STRING = 'isString';\n/**\n * Checks if a given value is a real string.\n */\nexport function isString(value) {\n    return value instanceof String || typeof value === 'string';\n}\n/**\n * Checks if a given value is a real string.\n */\nexport function IsString(validationOptions) {\n    return ValidateBy({\n        name: IS_STRING,\n        validator: {\n            validate: function (value, args) { return isString(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a string'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsString.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_ARRAY = 'isArray';\n/**\n * Checks if a given value is an array\n */\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n/**\n * Checks if a given value is an array\n */\nexport function IsArray(validationOptions) {\n    return ValidateBy({\n        name: IS_ARRAY,\n        validator: {\n            validate: function (value, args) { return isArray(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an array'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsArray.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_OBJECT = 'isObject';\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function isObject(value) {\n    return value != null && (typeof value === 'object' || typeof value === 'function') && !Array.isArray(value);\n}\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function IsObject(validationOptions) {\n    return ValidateBy({\n        name: IS_OBJECT,\n        validator: {\n            validate: function (value, args) { return isObject(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be an object'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsObject.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var ARRAY_CONTAINS = 'arrayContains';\n/**\n * Checks if array contains all values from the given array of values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayContains(array, values) {\n    if (!Array.isArray(array))\n        return false;\n    return values.every(function (value) { return array.indexOf(value) !== -1; });\n}\n/**\n * Checks if array contains all values from the given array of values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayContains(values, validationOptions) {\n    return ValidateBy({\n        name: ARRAY_CONTAINS,\n        constraints: [values],\n        validator: {\n            validate: function (value, args) { return arrayContains(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain $constraint1 values'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=ArrayContains.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var ARRAY_NOT_CONTAINS = 'arrayNotContains';\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotContains(array, values) {\n    if (!Array.isArray(array))\n        return false;\n    return values.every(function (value) { return array.indexOf(value) === -1; });\n}\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotContains(values, validationOptions) {\n    return ValidateBy({\n        name: ARRAY_NOT_CONTAINS,\n        constraints: [values],\n        validator: {\n            validate: function (value, args) { return arrayNotContains(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property should not contain $constraint1 values'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=ArrayNotContains.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var ARRAY_NOT_EMPTY = 'arrayNotEmpty';\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotEmpty(array) {\n    return Array.isArray(array) && array.length > 0;\n}\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotEmpty(validationOptions) {\n    return ValidateBy({\n        name: ARRAY_NOT_EMPTY,\n        validator: {\n            validate: function (value, args) { return arrayNotEmpty(value); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property should not be empty'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=ArrayNotEmpty.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var ARRAY_MIN_SIZE = 'arrayMinSize';\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayMinSize(array, min) {\n    return Array.isArray(array) && array.length >= min;\n}\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayMinSize(min, validationOptions) {\n    return ValidateBy({\n        name: ARRAY_MIN_SIZE,\n        constraints: [min],\n        validator: {\n            validate: function (value, args) { return arrayMinSize(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain at least $constraint1 elements'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=ArrayMinSize.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var ARRAY_MAX_SIZE = 'arrayMaxSize';\n/**\n * Checks if the array's length is less or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayMaxSize(array, max) {\n    return Array.isArray(array) && array.length <= max;\n}\n/**\n * Checks if the array's length is less or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayMaxSize(max, validationOptions) {\n    return ValidateBy({\n        name: ARRAY_MAX_SIZE,\n        constraints: [max],\n        validator: {\n            validate: function (value, args) { return arrayMaxSize(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must contain not more than $constraint1 elements'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=ArrayMaxSize.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var ARRAY_UNIQUE = 'arrayUnique';\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayUnique(array, identifier) {\n    if (!Array.isArray(array))\n        return false;\n    if (identifier) {\n        array = array.map(function (o) { return (o != null ? identifier(o) : o); });\n    }\n    var uniqueItems = array.filter(function (a, b, c) { return c.indexOf(a) === b; });\n    return array.length === uniqueItems.length;\n}\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayUnique(identifierOrOptions, validationOptions) {\n    var identifier = typeof identifierOrOptions === 'function' ? identifierOrOptions : undefined;\n    var options = typeof identifierOrOptions !== 'function' ? identifierOrOptions : validationOptions;\n    return ValidateBy({\n        name: ARRAY_UNIQUE,\n        validator: {\n            validate: function (value, args) { return arrayUnique(value, identifier); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + \"All $property's elements must be unique\"; }, options),\n        },\n    }, options);\n}\n//# sourceMappingURL=ArrayUnique.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { isObject } from '../typechecker/IsObject';\nexport var IS_NOT_EMPTY_OBJECT = 'isNotEmptyObject';\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function isNotEmptyObject(value, options) {\n    if (!isObject(value)) {\n        return false;\n    }\n    if ((options === null || options === void 0 ? void 0 : options.nullable) === true) {\n        return !Object.values(value).every(function (propertyValue) { return propertyValue === null || propertyValue === undefined; });\n    }\n    for (var key in value) {\n        if (value.hasOwnProperty(key)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function IsNotEmptyObject(options, validationOptions) {\n    return ValidateBy({\n        name: IS_NOT_EMPTY_OBJECT,\n        constraints: [options],\n        validator: {\n            validate: function (value, args) { return isNotEmptyObject(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix) { return eachPrefix + '$property must be a non-empty object'; }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsNotEmptyObject.js.map","import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_INSTANCE = 'isInstance';\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function isInstance(object, targetTypeConstructor) {\n    return (targetTypeConstructor && typeof targetTypeConstructor === 'function' && object instanceof targetTypeConstructor);\n}\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function IsInstance(targetType, validationOptions) {\n    return ValidateBy({\n        name: IS_INSTANCE,\n        constraints: [targetType],\n        validator: {\n            validate: function (value, args) { return isInstance(value, args.constraints[0]); },\n            defaultMessage: buildMessage(function (eachPrefix, args) {\n                if (args.constraints[0]) {\n                    return eachPrefix + \"$property must be an instance of \".concat(args.constraints[0].name);\n                }\n                else {\n                    return eachPrefix + \"\".concat(IS_INSTANCE, \" decorator expects and object as value, but got falsy value.\");\n                }\n            }, validationOptions),\n        },\n    }, validationOptions);\n}\n//# sourceMappingURL=IsInstance.js.map","import { getMetadataStorage } from './metadata/MetadataStorage';\nimport { Validator } from './validation/Validator';\nimport { getFromContainer } from './container';\n// -------------------------------------------------------------------------\n// Export everything api users needs\n// -------------------------------------------------------------------------\nexport * from './container';\nexport * from './decorator/decorators';\nexport * from './decorator/ValidationOptions';\nexport * from './validation/ValidatorConstraintInterface';\nexport * from './validation/ValidationError';\nexport * from './validation/ValidatorOptions';\nexport * from './validation/ValidationArguments';\nexport * from './validation/ValidationTypes';\nexport * from './validation/Validator';\nexport * from './validation-schema/ValidationSchema';\nexport * from './register-decorator';\nexport * from './metadata/MetadataStorage';\n/**\n * Validates given object by object's decorators or given validation schema.\n */\nexport function validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n    if (typeof schemaNameOrObject === 'string') {\n        return getFromContainer(Validator).validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n    }\n    else {\n        return getFromContainer(Validator).validate(schemaNameOrObject, objectOrValidationOptions);\n    }\n}\n/**\n * Validates given object by object's decorators or given validation schema and reject on error.\n */\nexport function validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n    if (typeof schemaNameOrObject === 'string') {\n        return getFromContainer(Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n    }\n    else {\n        return getFromContainer(Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions);\n    }\n}\n/**\n * Validates given object by object's decorators or given validation schema.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\nexport function validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n    if (typeof schemaNameOrObject === 'string') {\n        return getFromContainer(Validator).validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n    }\n    else {\n        return getFromContainer(Validator).validateSync(schemaNameOrObject, objectOrValidationOptions);\n    }\n}\n/**\n * Registers a new validation schema.\n */\nexport function registerSchema(schema) {\n    getMetadataStorage().addValidationSchema(schema);\n}\n//# sourceMappingURL=index.js.map","import { IsInt, Min } from 'class-validator';\n\nexport default class TroopsController {\n\n    @Min(3)\n    @IsInt()\n    size: number;\n\n    troops: object;\n\n    troopsName: string[];\n\n    constructor(size) {\n        this.size = size;\n        this.troops = {\n            'Spearmen': 0,\n            'Swordsmen': 0,\n            'Archers': 0\n        }\n        this.troopsName = Object.keys(this.troops);\n    }\n\n    generateRandomNumberBetween(min, max) {\n        return Math.floor(min + Math.random() * (max - min));\n    }\n\n    sumUpTheTroops() {\n        return Object.values(this.troops).reduce((a, b) => a + b);\n    }\n\n    shuffleTroopsName() {\n        this.troopsName.sort(() => Math.random() > 0.5 ? 1 : -1);\n    }\n\n    generateTroops() {\n        const numberOfTroops = Object.keys(this.troops).length;\n        const max = this.size;\n        this.shuffleTroopsName();\n\n        this.troopsName.forEach((troop, troopIndex) => {\n            if (troopIndex < numberOfTroops - 1) {\n                this.troops[troop] = this.generateRandomNumberBetween(1, max - (numberOfTroops - (troopIndex + 1)) - this.sumUpTheTroops());\n            } else {\n                this.troops[troop] = max - this.sumUpTheTroops();\n            }\n        })\n\n        return this.troops;\n    }\n\n}","import { validateOrReject } from 'class-validator';\nimport TroopsController from \"./controller/controller\";\n\nconst myArgs = process.argv.slice(2);\n\nlet size;\nif (myArgs.length) {\n    size = Number(myArgs[0]);\n} else {\n    size = 167;\n}\n\nexport const handler = async (size) => {\n    let controller = new TroopsController(size);\n\n    try {\n        await validateOrReject(controller);\n        return controller.generateTroops();\n    } catch (errors) {\n        console.error('Validation failed with errors: ', errors);\n    }\n\n}\n\nhandler(size);\n\n\n\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commaDecimal = exports.dotDecimal = exports.farsiLocales = exports.arabicLocales = exports.englishLocales = exports.decimal = exports.alphanumeric = exports.alpha = void 0;\nvar alpha = {\n  'en-US': /^[A-Z]+$/i,\n  'az-AZ': /^[A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[А-Я]+$/i,\n  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[A-ZÆØÅ]+$/i,\n  'de-DE': /^[A-ZÄÖÜß]+$/i,\n  'el-GR': /^[Α-ώ]+$/i,\n  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fa-IR': /^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,\n  'fi-FI': /^[A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'nb-NO': /^[A-ZÆØÅ]+$/i,\n  'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[A-ZÆØÅ]+$/i,\n  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[А-ЯЁ]+$/i,\n  'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๐\\s]+$/i,\n  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,\n  'vi-VN': /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[א-ת]+$/,\n  fa: /^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i,\n  'hi-IN': /^[\\u0900-\\u0961]+[\\u0972-\\u097F]*$/i\n};\nexports.alpha = alpha;\nvar alphanumeric = {\n  'en-US': /^[0-9A-Z]+$/i,\n  'az-AZ': /^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[0-9А-Я]+$/i,\n  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[0-9A-ZÆØÅ]+$/i,\n  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\n  'el-GR': /^[0-9Α-ω]+$/i,\n  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fi-FI': /^[0-9A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'nb-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[0-9А-ЯЁ]+$/i,\n  'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๙\\s]+$/i,\n  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,\n  'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  'vi-VN': /^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[0-9א-ת]+$/,\n  fa: /^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i,\n  'hi-IN': /^[\\u0900-\\u0963]+[\\u0966-\\u097F]*$/i\n};\nexports.alphanumeric = alphanumeric;\nvar decimal = {\n  'en-US': '.',\n  ar: '٫'\n};\nexports.decimal = decimal;\nvar englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\nexports.englishLocales = englishLocales;\n\nfor (var locale, i = 0; i < englishLocales.length; i++) {\n  locale = \"en-\".concat(englishLocales[i]);\n  alpha[locale] = alpha['en-US'];\n  alphanumeric[locale] = alphanumeric['en-US'];\n  decimal[locale] = decimal['en-US'];\n} // Source: http://www.localeplanet.com/java/\n\n\nvar arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\nexports.arabicLocales = arabicLocales;\n\nfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\n  _locale = \"ar-\".concat(arabicLocales[_i]);\n  alpha[_locale] = alpha.ar;\n  alphanumeric[_locale] = alphanumeric.ar;\n  decimal[_locale] = decimal.ar;\n}\n\nvar farsiLocales = ['IR', 'AF'];\nexports.farsiLocales = farsiLocales;\n\nfor (var _locale2, _i2 = 0; _i2 < farsiLocales.length; _i2++) {\n  _locale2 = \"fa-\".concat(farsiLocales[_i2]);\n  alphanumeric[_locale2] = alphanumeric.fa;\n  decimal[_locale2] = decimal.ar;\n} // Source: https://en.wikipedia.org/wiki/Decimal_mark\n\n\nvar dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];\nexports.dotDecimal = dotDecimal;\nvar commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'es-ES', 'fr-CA', 'fr-FR', 'id-ID', 'it-IT', 'ku-IQ', 'hi-IN', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN'];\nexports.commaDecimal = commaDecimal;\n\nfor (var _i3 = 0; _i3 < dotDecimal.length; _i3++) {\n  decimal[dotDecimal[_i3]] = decimal['en-US'];\n}\n\nfor (var _i4 = 0; _i4 < commaDecimal.length; _i4++) {\n  decimal[commaDecimal[_i4]] = ',';\n}\n\nalpha['fr-CA'] = alpha['fr-FR'];\nalphanumeric['fr-CA'] = alphanumeric['fr-FR'];\nalpha['pt-BR'] = alpha['pt-PT'];\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\ndecimal['pt-BR'] = decimal['pt-PT']; // see #862\n\nalpha['pl-Pl'] = alpha['pl-PL'];\nalphanumeric['pl-Pl'] = alphanumeric['pl-PL'];\ndecimal['pl-Pl'] = decimal['pl-PL']; // see #1455\n\nalpha['fa-AF'] = alpha.fa;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = contains;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _toString = _interopRequireDefault(require(\"./util/toString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaulContainsOptions = {\n  ignoreCase: false,\n  minOccurrences: 1\n};\n\nfunction contains(str, elem, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaulContainsOptions);\n\n  if (options.ignoreCase) {\n    return str.toLowerCase().split((0, _toString.default)(elem).toLowerCase()).length > options.minOccurrences;\n  }\n\n  return str.split((0, _toString.default)(elem)).length > options.minOccurrences;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlpha;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAlpha(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n\n  if (locale in _alpha.alpha) {\n    return _alpha.alpha[locale].test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(_alpha.alpha);\nexports.locales = locales;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlphanumeric;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAlphanumeric(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n\n  if (locale in _alpha.alphanumeric) {\n    return _alpha.alphanumeric[locale].test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(_alpha.alphanumeric);\nexports.locales = locales;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAscii;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-control-regex */\nvar ascii = /^[\\x00-\\x7F]+$/;\n/* eslint-enable no-control-regex */\n\nfunction isAscii(str) {\n  (0, _assertString.default)(str);\n  return ascii.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBIC;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isISO31661Alpha = require(\"./isISO31661Alpha2\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// https://en.wikipedia.org/wiki/ISO_9362\nvar isBICReg = /^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;\n\nfunction isBIC(str) {\n  (0, _assertString.default)(str); // toUpperCase() should be removed when a new major version goes out that changes\n  // the regex to [A-Z] (per the spec).\n\n  if (!_isISO31661Alpha.CountryCodes.has(str.slice(4, 6).toUpperCase())) {\n    return false;\n  }\n\n  return isBICReg.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase32;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar base32 = /^[A-Z2-7]+=*$/;\n\nfunction isBase32(str) {\n  (0, _assertString.default)(str);\n  var len = str.length;\n\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase64;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar notBase64 = /[^A-Z0-9+\\/=]/i;\nvar urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\nvar defaultBase64Options = {\n  urlSafe: false\n};\n\nfunction isBase64(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase64Options);\n  var len = str.length;\n\n  if (options.urlSafe) {\n    return urlSafeBase64.test(str);\n  }\n\n  if (len % 4 !== 0 || notBase64.test(str)) {\n    return false;\n  }\n\n  var firstPaddingChar = str.indexOf('=');\n  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBoolean;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n  loose: false\n};\nvar strictBooleans = ['true', 'false', '1', '0'];\nvar looseBooleans = [].concat(strictBooleans, ['yes', 'no']);\n\nfunction isBoolean(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  (0, _assertString.default)(str);\n\n  if (options.loose) {\n    return looseBooleans.includes(str.toLowerCase());\n  }\n\n  return strictBooleans.includes(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBtcAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// supports Bech32 addresses\nvar bech32 = /^(bc1)[a-z0-9]{25,39}$/;\nvar base58 = /^(1|3)[A-HJ-NP-Za-km-z1-9]{25,39}$/;\n\nfunction isBtcAddress(str) {\n  (0, _assertString.default)(str); // check for bech32\n\n  if (str.startsWith('bc1')) {\n    return bech32.test(str);\n  }\n\n  return base58.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isByteLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCreditCard;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14}|^(81[0-9]{14,17}))$/;\n/* eslint-enable max-len */\n\nfunction isCreditCard(str) {\n  (0, _assertString.default)(str);\n  var sanitized = str.replace(/[- ]+/g, '');\n\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n\n    if (shouldDouble) {\n      tmpNum *= 2;\n\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n\n    shouldDouble = !shouldDouble;\n  }\n\n  return !!(sum % 10 === 0 ? sanitized : false);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCurrency;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction currencyRegex(options) {\n  var decimal_digits = \"\\\\d{\".concat(options.digits_after_decimal[0], \"}\");\n  options.digits_after_decimal.forEach(function (digit, index) {\n    if (index !== 0) decimal_digits = \"\".concat(decimal_digits, \"|\\\\d{\").concat(digit, \"}\");\n  });\n  var symbol = \"(\".concat(options.symbol.replace(/\\W/, function (m) {\n    return \"\\\\\".concat(m);\n  }), \")\").concat(options.require_symbol ? '' : '?'),\n      negative = '-?',\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n      whole_dollar_amount_with_sep = \"[1-9]\\\\d{0,2}(\\\\\".concat(options.thousands_separator, \"\\\\d{3})*\"),\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n      whole_dollar_amount = \"(\".concat(valid_whole_dollar_amounts.join('|'), \")?\"),\n      decimal_amount = \"(\\\\\".concat(options.decimal_separator, \"(\").concat(decimal_digits, \"))\").concat(options.require_decimal ? '' : '?');\n  var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : ''); // default is negative sign before symbol, but there are two other options (besides parens)\n\n  if (options.allow_negatives && !options.parens_for_negatives) {\n    if (options.negative_sign_after_digits) {\n      pattern += negative;\n    } else if (options.negative_sign_before_digits) {\n      pattern = negative + pattern;\n    }\n  } // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n\n\n  if (options.allow_negative_sign_placeholder) {\n    pattern = \"( (?!\\\\-))?\".concat(pattern);\n  } else if (options.allow_space_after_symbol) {\n    pattern = \" ?\".concat(pattern);\n  } else if (options.allow_space_after_digits) {\n    pattern += '( (?!$))?';\n  }\n\n  if (options.symbol_after_digits) {\n    pattern += symbol;\n  } else {\n    pattern = symbol + pattern;\n  }\n\n  if (options.allow_negatives) {\n    if (options.parens_for_negatives) {\n      pattern = \"(\\\\(\".concat(pattern, \"\\\\)|\").concat(pattern, \")\");\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n      pattern = negative + pattern;\n    }\n  } // ensure there's a dollar and/or decimal amount, and that\n  // it doesn't start with a space or a negative sign followed by a space\n\n\n  return new RegExp(\"^(?!-? )(?=.*\\\\d)\".concat(pattern, \"$\"));\n}\n\nvar default_currency_options = {\n  symbol: '$',\n  require_symbol: false,\n  allow_space_after_symbol: false,\n  symbol_after_digits: false,\n  allow_negatives: true,\n  parens_for_negatives: false,\n  negative_sign_before_digits: false,\n  negative_sign_after_digits: false,\n  allow_negative_sign_placeholder: false,\n  thousands_separator: ',',\n  decimal_separator: '.',\n  allow_decimal: true,\n  require_decimal: false,\n  digits_after_decimal: [2],\n  allow_space_after_digits: false\n};\n\nfunction isCurrency(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_currency_options);\n  return currencyRegex(options).test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDataURI;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+]+$/i;\nvar validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\nvar validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\n\nfunction isDataURI(str) {\n  (0, _assertString.default)(str);\n  var data = str.split(',');\n\n  if (data.length < 2) {\n    return false;\n  }\n\n  var attributes = data.shift().trim().split(';');\n  var schemeAndMediaType = attributes.shift();\n\n  if (schemeAndMediaType.substr(0, 5) !== 'data:') {\n    return false;\n  }\n\n  var mediaType = schemeAndMediaType.substr(5);\n\n  if (mediaType !== '' && !validMediaType.test(mediaType)) {\n    return false;\n  }\n\n  for (var i = 0; i < attributes.length; i++) {\n    if (!(i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') && !validAttribute.test(attributes[i])) {\n      return false;\n    }\n  }\n\n  for (var _i = 0; _i < data.length; _i++) {\n    if (!validData.test(data[_i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDecimal;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _includes = _interopRequireDefault(require(\"./util/includes\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(_alpha.decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\n\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\n\nfunction isDecimal(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_decimal_options);\n\n  if (options.locale in _alpha.decimal) {\n    return !(0, _includes.default)(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDivisibleBy;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _toFloat = _interopRequireDefault(require(\"./toFloat\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isDivisibleBy(str, num) {\n  (0, _assertString.default)(str);\n  return (0, _toFloat.default)(str) % parseInt(num, 10) === 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEAN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The most commonly used EAN standard is\n * the thirteen-digit EAN-13, while the\n * less commonly used 8-digit EAN-8 barcode was\n * introduced for use on small packages.\n * Also EAN/UCC-14 is used for Grouping of individual\n * trade items above unit level(Intermediate, Carton or Pallet).\n * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\n * EAN consists of:\n * GS1 prefix, manufacturer code, product code and check digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\n * Reference: https://www.gtin.info/\n */\n\n/**\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\n * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\n * with exact numberic matching of 8 or 13 or 14 digits [0-9]\n */\nvar LENGTH_EAN_8 = 8;\nvar LENGTH_EAN_14 = 14;\nvar validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\n/**\n * Get position weight given:\n * EAN length and digit index/position\n *\n * @param {number} length\n * @param {number} index\n * @return {number}\n */\n\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\n    return index % 2 === 0 ? 3 : 1;\n  }\n\n  return index % 2 === 0 ? 1 : 3;\n}\n/**\n * Calculate EAN Check Digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\n *\n * @param {string} ean\n * @return {number}\n */\n\n\nfunction calculateCheckDigit(ean) {\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\n  }).reduce(function (acc, partialSum) {\n    return acc + partialSum;\n  }, 0);\n  var remainder = 10 - checksum % 10;\n  return remainder < 10 ? remainder : 0;\n}\n/**\n * Check if string is valid EAN:\n * Matches EAN-8/EAN-13/EAN-14 regex\n * Has valid check digit.\n *\n * @param {string} str\n * @return {boolean}\n */\n\n\nfunction isEAN(str) {\n  (0, _assertString.default)(str);\n  var actualCheckDigit = Number(str.slice(-1));\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _isByteLength = _interopRequireDefault(require(\"./isByteLength\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false,\n  host_blacklist: []\n};\n/* eslint-disable max-len */\n\n/* eslint-disable no-control-regex */\n\nvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nvar defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\n\nfunction validateDisplayName(display_name) {\n  var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1'); // display name with only spaces is not valid\n\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  } // check whether display name contains illegal character\n\n\n  var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    } // the quotes in display name must start with character symbol \\\n\n\n    var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isEmail(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(splitNameAddress);\n\n    if (display_email) {\n      var display_name = display_email[1]; // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, ''); // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.substr(0, display_name.length - 1);\n      }\n\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var lower_domain = domain.toLowerCase();\n\n  if (options.host_blacklist.includes(lower_domain)) {\n    return false;\n  }\n\n  var user = parts.join('@');\n\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase(); // Removing sub-address from username before gmail validation\n\n    var username = user.split('+')[0]; // Dots are not included in gmail length restriction\n\n    if (!(0, _isByteLength.default)(username.replace(/\\./g, ''), {\n      min: 6,\n      max: 30\n    })) {\n      return false;\n    }\n\n    var _user_parts = username.split('.');\n\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n\n  if (options.ignore_max_length === false && (!(0, _isByteLength.default)(user, {\n    max: 64\n  }) || !(0, _isByteLength.default)(domain, {\n    max: 254\n  }))) {\n    return false;\n  }\n\n  if (!(0, _isFQDN.default)(domain, {\n    require_tld: options.require_tld\n  })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n\n    if (!(0, _isIP.default)(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n\n      var noBracketdomain = domain.substr(1, domain.length - 2);\n\n      if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n  var user_parts = user.split('.');\n\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEthereumAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar eth = /^(0x)[0-9a-f]{40}$/i;\n\nfunction isEthereumAddress(str) {\n  (0, _assertString.default)(str);\n  return eth.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFloat;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isFloat(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {};\n  var float = new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\".concat(options.locale ? _alpha.decimal[options.locale] : '.', \"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\"));\n\n  if (str === '' || str === '.' || str === '-' || str === '+') {\n    return false;\n  }\n\n  var value = parseFloat(str.replace(',', '.'));\n  return float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);\n}\n\nvar locales = Object.keys(_alpha.decimal);\nexports.locales = locales;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFullWidth;\nexports.fullWidth = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nexports.fullWidth = fullWidth;\n\nfunction isFullWidth(str) {\n  (0, _assertString.default)(str);\n  return fullWidth.test(str);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHSL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hslComma = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(,(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}(,((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?))?\\)$/i;\nvar hslSpace = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(\\s(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s?(\\/\\s((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s?)?\\)$/i;\n\nfunction isHSL(str) {\n  (0, _assertString.default)(str); // Strip duplicate spaces before calling the validation regex (See  #1598 for more info)\n\n  var strippedStr = str.replace(/\\s+/g, ' ').replace(/\\s?(hsla?\\(|\\)|,)\\s?/ig, '$1');\n\n  if (strippedStr.indexOf(',') !== -1) {\n    return hslComma.test(strippedStr);\n  }\n\n  return hslSpace.test(strippedStr);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHalfWidth;\nexports.halfWidth = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nexports.halfWidth = halfWidth;\n\nfunction isHalfWidth(str) {\n  (0, _assertString.default)(str);\n  return halfWidth.test(str);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHash;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8\n};\n\nfunction isHash(str, algorithm) {\n  (0, _assertString.default)(str);\n  var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n  return hash.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexColor;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;\n\nfunction isHexColor(str) {\n  (0, _assertString.default)(str);\n  return hexcolor.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexadecimal;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hexadecimal = /^(0x|0h)?[0-9A-F]+$/i;\n\nfunction isHexadecimal(str) {\n  (0, _assertString.default)(str);\n  return hexadecimal.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIBAN;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * List of country codes with\n * corresponding IBAN regular expression\n * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n */\nvar ibanRegexThroughCountryCode = {\n  AD: /^(AD[0-9]{2})\\d{8}[A-Z0-9]{12}$/,\n  AE: /^(AE[0-9]{2})\\d{3}\\d{16}$/,\n  AL: /^(AL[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  AT: /^(AT[0-9]{2})\\d{16}$/,\n  AZ: /^(AZ[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  BA: /^(BA[0-9]{2})\\d{16}$/,\n  BE: /^(BE[0-9]{2})\\d{12}$/,\n  BG: /^(BG[0-9]{2})[A-Z]{4}\\d{6}[A-Z0-9]{8}$/,\n  BH: /^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,\n  BR: /^(BR[0-9]{2})\\d{23}[A-Z]{1}[A-Z0-9]{1}$/,\n  BY: /^(BY[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  CH: /^(CH[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  CR: /^(CR[0-9]{2})\\d{18}$/,\n  CY: /^(CY[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  CZ: /^(CZ[0-9]{2})\\d{20}$/,\n  DE: /^(DE[0-9]{2})\\d{18}$/,\n  DK: /^(DK[0-9]{2})\\d{14}$/,\n  DO: /^(DO[0-9]{2})[A-Z]{4}\\d{20}$/,\n  EE: /^(EE[0-9]{2})\\d{16}$/,\n  EG: /^(EG[0-9]{2})\\d{25}$/,\n  ES: /^(ES[0-9]{2})\\d{20}$/,\n  FI: /^(FI[0-9]{2})\\d{14}$/,\n  FO: /^(FO[0-9]{2})\\d{14}$/,\n  FR: /^(FR[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  GB: /^(GB[0-9]{2})[A-Z]{4}\\d{14}$/,\n  GE: /^(GE[0-9]{2})[A-Z0-9]{2}\\d{16}$/,\n  GI: /^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,\n  GL: /^(GL[0-9]{2})\\d{14}$/,\n  GR: /^(GR[0-9]{2})\\d{7}[A-Z0-9]{16}$/,\n  GT: /^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,\n  HR: /^(HR[0-9]{2})\\d{17}$/,\n  HU: /^(HU[0-9]{2})\\d{24}$/,\n  IE: /^(IE[0-9]{2})[A-Z0-9]{4}\\d{14}$/,\n  IL: /^(IL[0-9]{2})\\d{19}$/,\n  IQ: /^(IQ[0-9]{2})[A-Z]{4}\\d{15}$/,\n  IR: /^(IR[0-9]{2})0\\d{2}0\\d{18}$/,\n  IS: /^(IS[0-9]{2})\\d{22}$/,\n  IT: /^(IT[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  JO: /^(JO[0-9]{2})[A-Z]{4}\\d{22}$/,\n  KW: /^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,\n  KZ: /^(KZ[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LB: /^(LB[0-9]{2})\\d{4}[A-Z0-9]{20}$/,\n  LC: /^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,\n  LI: /^(LI[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  LT: /^(LT[0-9]{2})\\d{16}$/,\n  LU: /^(LU[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LV: /^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,\n  MC: /^(MC[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  MD: /^(MD[0-9]{2})[A-Z0-9]{20}$/,\n  ME: /^(ME[0-9]{2})\\d{18}$/,\n  MK: /^(MK[0-9]{2})\\d{3}[A-Z0-9]{10}\\d{2}$/,\n  MR: /^(MR[0-9]{2})\\d{23}$/,\n  MT: /^(MT[0-9]{2})[A-Z]{4}\\d{5}[A-Z0-9]{18}$/,\n  MU: /^(MU[0-9]{2})[A-Z]{4}\\d{19}[A-Z]{3}$/,\n  MZ: /^(MZ[0-9]{2})\\d{21}$/,\n  NL: /^(NL[0-9]{2})[A-Z]{4}\\d{10}$/,\n  NO: /^(NO[0-9]{2})\\d{11}$/,\n  PK: /^(PK[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  PL: /^(PL[0-9]{2})\\d{24}$/,\n  PS: /^(PS[0-9]{2})[A-Z0-9]{4}\\d{21}$/,\n  PT: /^(PT[0-9]{2})\\d{21}$/,\n  QA: /^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,\n  RO: /^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,\n  RS: /^(RS[0-9]{2})\\d{18}$/,\n  SA: /^(SA[0-9]{2})\\d{2}[A-Z0-9]{18}$/,\n  SC: /^(SC[0-9]{2})[A-Z]{4}\\d{20}[A-Z]{3}$/,\n  SE: /^(SE[0-9]{2})\\d{20}$/,\n  SI: /^(SI[0-9]{2})\\d{15}$/,\n  SK: /^(SK[0-9]{2})\\d{20}$/,\n  SM: /^(SM[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  SV: /^(SV[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  TL: /^(TL[0-9]{2})\\d{19}$/,\n  TN: /^(TN[0-9]{2})\\d{20}$/,\n  TR: /^(TR[0-9]{2})\\d{5}[A-Z0-9]{17}$/,\n  UA: /^(UA[0-9]{2})\\d{6}[A-Z0-9]{19}$/,\n  VA: /^(VA[0-9]{2})\\d{18}$/,\n  VG: /^(VG[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  XK: /^(XK[0-9]{2})\\d{16}$/\n};\n/**\n * Check whether string has correct universal IBAN format\n * The IBAN consists of up to 34 alphanumeric characters, as follows:\n * Country Code using ISO 3166-1 alpha-2, two letters\n * check digits, two digits and\n * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.\n * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]\n *\n * @param {string} str - string under validation\n * @return {boolean}\n */\n\nfunction hasValidIbanFormat(str) {\n  // Strip white spaces and hyphens\n  var strippedStr = str.replace(/[\\s\\-]+/gi, '').toUpperCase();\n  var isoCountryCode = strippedStr.slice(0, 2).toUpperCase();\n  return isoCountryCode in ibanRegexThroughCountryCode && ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);\n}\n/**\n   * Check whether string has valid IBAN Checksum\n   * by performing basic mod-97 operation and\n   * the remainder should equal 1\n   * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string\n   * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35\n   * -- Interpret the string as a decimal integer and\n   * -- compute the remainder on division by 97 (mod 97)\n   * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n   *\n   * @param {string} str\n   * @return {boolean}\n   */\n\n\nfunction hasValidIbanChecksum(str) {\n  var strippedStr = str.replace(/[^A-Z0-9]+/gi, '').toUpperCase(); // Keep only digits and A-Z latin alphabetic\n\n  var rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);\n  var alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, function (char) {\n    return char.charCodeAt(0) - 55;\n  });\n  var remainder = alphaCapsReplacedWithDigits.match(/\\d{1,7}/g).reduce(function (acc, value) {\n    return Number(acc + value) % 97;\n  }, '');\n  return remainder === 1;\n}\n\nfunction isIBAN(str) {\n  (0, _assertString.default)(str);\n  return hasValidIbanFormat(str) && hasValidIbanChecksum(str);\n}\n\nvar locales = Object.keys(ibanRegexThroughCountryCode);\nexports.locales = locales;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  }\n\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISBN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar isbn13Maybe = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\n\nfunction isISBN(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isISBN(str, 10) || isISBN(str, 13);\n  }\n\n  var sanitized = str.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n  var i;\n\n  if (version === '10') {\n    if (!isbn10Maybe.test(sanitized)) {\n      return false;\n    }\n\n    for (i = 0; i < 9; i++) {\n      checksum += (i + 1) * sanitized.charAt(i);\n    }\n\n    if (sanitized.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitized.charAt(9);\n    }\n\n    if (checksum % 11 === 0) {\n      return !!sanitized;\n    }\n  } else if (version === '13') {\n    if (!isbn13Maybe.test(sanitized)) {\n      return false;\n    }\n\n    for (i = 0; i < 12; i++) {\n      checksum += factor[i % 2] * sanitized.charAt(i);\n    }\n\n    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return !!sanitized;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISIN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/; // this link details how the check digit is calculated:\n// https://www.isin.org/isin-format/. it is a little bit\n// odd in that it works with digits, not numbers. in order\n// to make only one pass through the ISIN characters, the\n// each alpha character is handled as 2 characters within\n// the loop.\n\nfunction isISIN(str) {\n  (0, _assertString.default)(str);\n\n  if (!isin.test(str)) {\n    return false;\n  }\n\n  var double = true;\n  var sum = 0; // convert values\n\n  for (var i = str.length - 2; i >= 0; i--) {\n    if (str[i] >= 'A' && str[i] <= 'Z') {\n      var value = str[i].charCodeAt(0) - 55;\n      var lo = value % 10;\n      var hi = Math.trunc(value / 10); // letters have two digits, so handle the low order\n      // and high order digits separately.\n\n      for (var _i = 0, _arr = [lo, hi]; _i < _arr.length; _i++) {\n        var digit = _arr[_i];\n\n        if (double) {\n          if (digit >= 5) {\n            sum += 1 + (digit - 5) * 2;\n          } else {\n            sum += digit * 2;\n          }\n        } else {\n          sum += digit;\n        }\n\n        double = !double;\n      }\n    } else {\n      var _digit = str[i].charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (double) {\n        if (_digit >= 5) {\n          sum += 1 + (_digit - 5) * 2;\n        } else {\n          sum += _digit * 2;\n        }\n      } else {\n        sum += _digit;\n      }\n\n      double = !double;\n    }\n  }\n\n  var check = Math.trunc((sum + 9) / 10) * 10 - sum;\n  return +str[str.length - 1] === check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO31661Alpha2;\nexports.CountryCodes = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nvar validISO31661Alpha2CountriesCodes = new Setn\nfunction isISO31661Alpha2(str) {\n  (0, _assertString.default)(str);\n  return validISO31661Alpha2CountriesCodes.has(str.toUpperCase());\n}\n\nvar CountryCodes = validISO31661Alpha2CountriesCodes;\nexports.CountryCodes = CountryCodes;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO31661Alpha3;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\nvar validISO31661Alpha3CountriesCodes = new Set(['AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE', 'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA', 'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK', 'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM', 'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB', 'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI', 'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN', 'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE', 'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX', 'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC', 'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN', 'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM', 'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD', 'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL', 'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT', 'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE']);\n\nfunction isISO31661Alpha3(str) {\n  (0, _assertString.default)(str);\n  return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO8601;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n\n  return true;\n};\n\nfunction isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISRC;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// see http://isrc.ifpi.org/en/isrc-standard/code-syntax\nvar isrc = /^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;\n\nfunction isISRC(str) {\n  (0, _assertString.default)(str);\n  return isrc.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISSN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\n\nfunction isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n\n  if (!testIssn.test(str)) {\n    return false;\n  }\n\n  var digits = str.replace('-', '').toUpperCase();\n  var checksum = 0;\n\n  for (var i = 0; i < digits.length; i++) {\n    var digit = digits[i];\n    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);\n  }\n\n  return checksum % 11 === 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIdentityCard;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validators = {\n  PL: function PL(str) {\n    (0, _assertString.default)(str);\n    var weightOfDigits = {\n      1: 1,\n      2: 3,\n      3: 7,\n      4: 9,\n      5: 1,\n      6: 3,\n      7: 7,\n      8: 9,\n      9: 1,\n      10: 3,\n      11: 0\n    };\n\n    if (str != null && str.length === 11 && (0, _isInt.default)(str, {\n      allow_leading_zeroes: true\n    })) {\n      var digits = str.split('').slice(0, -1);\n      var sum = digits.reduce(function (acc, digit, index) {\n        return acc + Number(digit) * weightOfDigits[index + 1];\n      }, 0);\n      var modulo = sum % 10;\n      var lastDigit = Number(str.charAt(str.length - 1));\n\n      if (modulo === 0 && lastDigit === 0 || lastDigit === 10 - modulo) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  ES: function ES(str) {\n    (0, _assertString.default)(str);\n    var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\n    var charsValue = {\n      X: 0,\n      Y: 1,\n      Z: 2\n    };\n    var controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E']; // sanitize user input\n\n    var sanitized = str.trim().toUpperCase(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    } // validate the control digit\n\n\n    var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (char) {\n      return charsValue[char];\n    });\n    return sanitized.endsWith(controlDigits[number % 23]);\n  },\n  FI: function FI(str) {\n    // https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated\n    (0, _assertString.default)(str);\n\n    if (str.length !== 11) {\n      return false;\n    }\n\n    if (!str.match(/^\\d{6}[\\-A\\+]\\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) {\n      return false;\n    }\n\n    var checkDigits = '0123456789ABCDEFHJKLMNPRSTUVWXY';\n    var idAsNumber = parseInt(str.slice(0, 6), 10) * 1000 + parseInt(str.slice(7, 10), 10);\n    var remainder = idAsNumber % 31;\n    var checkDigit = checkDigits[remainder];\n    return checkDigit === str.slice(10, 11);\n  },\n  IN: function IN(str) {\n    var DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/; // multiplication table\n\n    var d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]; // permutation table\n\n    var p = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var c = 0;\n    var invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\n    invertedArray.forEach(function (val, i) {\n      c = d[c][p[i % 8][val]];\n    });\n    return c === 0;\n  },\n  IR: function IR(str) {\n    if (!str.match(/^\\d{10}$/)) return false;\n    str = \"0000\".concat(str).substr(str.length - 6);\n    if (parseInt(str.substr(3, 6), 10) === 0) return false;\n    var lastNumber = parseInt(str.substr(9, 1), 10);\n    var sum = 0;\n\n    for (var i = 0; i < 9; i++) {\n      sum += parseInt(str.substr(i, 1), 10) * (10 - i);\n    }\n\n    sum %= 11;\n    return sum < 2 && lastNumber === sum || sum >= 2 && lastNumber === 11 - sum;\n  },\n  IT: function IT(str) {\n    if (str.length !== 9) return false;\n    if (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\n\n    return str.search(/C[A-Z][0-9]{5}[A-Z]{2}/i) > -1;\n  },\n  NO: function NO(str) {\n    var sanitized = str.trim();\n    if (isNaN(Number(sanitized))) return false;\n    if (sanitized.length !== 11) return false;\n    if (sanitized === '00000000000') return false; // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\n\n    var f = sanitized.split('').map(Number);\n    var k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;\n    var k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;\n    if (k1 !== f[9] || k2 !== f[10]) return false;\n    return true;\n  },\n  TH: function TH(str) {\n    if (!str.match(/^[1-8]\\d{12}$/)) return false; // validate check digit\n\n    var sum = 0;\n\n    for (var i = 0; i < 12; i++) {\n      sum += parseInt(str[i], 10) * (13 - i);\n    }\n\n    return str[12] === ((11 - sum % 11) % 10).toString();\n  },\n  LK: function LK(str) {\n    var old_nic = /^[1-9]\\d{8}[vx]$/i;\n    var new_nic = /^[1-9]\\d{11}$/i;\n    if (str.length === 10 && old_nic.test(str)) return true;else if (str.length === 12 && new_nic.test(str)) return true;\n    return false;\n  },\n  'he-IL': function heIL(str) {\n    var DNI = /^\\d{9}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var id = sanitized;\n    var sum = 0,\n        incNum;\n\n    for (var i = 0; i < id.length; i++) {\n      incNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2\n\n      sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\n    }\n\n    return sum % 10 === 0;\n  },\n  'ar-LY': function arLY(str) {\n    // Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2\n    var NIN = /^(1|2)\\d{11}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!NIN.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'ar-TN': function arTN(str) {\n    var DNI = /^\\d{8}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'zh-CN': function zhCN(str) {\n    var provincesAndCities = ['11', // 北京\n    '12', // 天津\n    '13', // 河北\n    '14', // 山西\n    '15', // 内蒙古\n    '21', // 辽宁\n    '22', // 吉林\n    '23', // 黑龙江\n    '31', // 上海\n    '32', // 江苏\n    '33', // 浙江\n    '34', // 安徽\n    '35', // 福建\n    '36', // 江西\n    '37', // 山东\n    '41', // 河南\n    '42', // 湖北\n    '43', // 湖南\n    '44', // 广东\n    '45', // 广西\n    '46', // 海南\n    '50', // 重庆\n    '51', // 四川\n    '52', // 贵州\n    '53', // 云南\n    '54', // 西藏\n    '61', // 陕西\n    '62', // 甘肃\n    '63', // 青海\n    '64', // 宁夏\n    '65', // 新疆\n    '71', // 台湾\n    '81', // 香港\n    '82', // 澳门\n    '91' // 国外\n    ];\n    var powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\n    var parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n    var checkAddressCode = function checkAddressCode(addressCode) {\n      return provincesAndCities.includes(addressCode);\n    };\n\n    var checkBirthDayCode = function checkBirthDayCode(birDayCode) {\n      var yyyy = parseInt(birDayCode.substring(0, 4), 10);\n      var mm = parseInt(birDayCode.substring(4, 6), 10);\n      var dd = parseInt(birDayCode.substring(6), 10);\n      var xdata = new Date(yyyy, mm - 1, dd);\n\n      if (xdata > new Date()) {\n        return false; // eslint-disable-next-line max-len\n      } else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var getParityBit = function getParityBit(idCardNo) {\n      var id17 = idCardNo.substring(0, 17);\n      var power = 0;\n\n      for (var i = 0; i < 17; i++) {\n        power += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\n      }\n\n      var mod = power % 11;\n      return parityBit[mod];\n    };\n\n    var checkParityBit = function checkParityBit(idCardNo) {\n      return getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\n    };\n\n    var check15IdCardNo = function check15IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = \"19\".concat(idCardNo.substring(6, 12));\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return true;\n    };\n\n    var check18IdCardNo = function check18IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = idCardNo.substring(6, 14);\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return checkParityBit(idCardNo);\n    };\n\n    var checkIdCardNo = function checkIdCardNo(idCardNo) {\n      var check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\n      if (!check) return false;\n\n      if (idCardNo.length === 15) {\n        return check15IdCardNo(idCardNo);\n      }\n\n      return check18IdCardNo(idCardNo);\n    };\n\n    return checkIdCardNo(str);\n  },\n  'zh-TW': function zhTW(str) {\n    var ALPHABET_CODES = {\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      G: 16,\n      H: 17,\n      I: 34,\n      J: 18,\n      K: 19,\n      L: 20,\n      M: 21,\n      N: 22,\n      O: 35,\n      P: 23,\n      Q: 24,\n      R: 25,\n      S: 26,\n      T: 27,\n      U: 28,\n      V: 29,\n      W: 32,\n      X: 30,\n      Y: 31,\n      Z: 33\n    };\n    var sanitized = str.trim().toUpperCase();\n    if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\n    return Array.from(sanitized).reduce(function (sum, number, index) {\n      if (index === 0) {\n        var code = ALPHABET_CODES[number];\n        return code % 10 * 9 + Math.floor(code / 10);\n      }\n\n      if (index === 9) {\n        return (10 - sum % 10 - Number(number)) % 10 === 0;\n      }\n\n      return sum + Number(number) * (9 - index);\n    }, 0);\n  }\n};\n\nfunction isIdentityCard(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (var key in validators) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (validators.hasOwnProperty(key)) {\n        var validator = validators[key];\n\n        if (validator(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInt;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\nvar intLeadingZeroes = /^[-+]?[0-9]+$/;\n\nfunction isInt(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {}; // Get the regex to use for testing, based on whether\n  // leading zeroes are allowed or not.\n\n  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes; // Check min/max/lt/gt\n\n  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\n  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\n  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\n  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\n  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isJSON;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar default_json_options = {\n  allow_primitives: false\n};\n\nfunction isJSON(str, options) {\n  (0, _assertString.default)(str);\n\n  try {\n    options = (0, _merge.default)(options, default_json_options);\n    var primitives = [];\n\n    if (options.allow_primitives) {\n      primitives = [null, false, true];\n    }\n\n    var obj = JSON.parse(str);\n    return primitives.includes(obj) || !!obj && _typeof(obj) === 'object';\n  } catch (e) {\n    /* ignore */\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isJWT;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isBase = _interopRequireDefault(require(\"./isBase64\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isJWT(str) {\n  (0, _assertString.default)(str);\n  var dotSplit = str.split('.');\n  var len = dotSplit.length;\n\n  if (len > 3 || len < 2) {\n    return false;\n  }\n\n  return dotSplit.reduce(function (acc, currElem) {\n    return acc && (0, _isBase.default)(currElem, {\n      urlSafe: true\n    });\n  }, true);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLatLong;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\nvar long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\nvar latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\nvar longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\nvar defaultLatLongOptions = {\n  checkDMS: false\n};\n\nfunction isLatLong(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultLatLongOptions);\n  if (!str.includes(',')) return false;\n  var pair = str.split(',');\n  if (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;\n\n  if (options.checkDMS) {\n    return latDMS.test(pair[0]) && longDMS.test(pair[1]);\n  }\n\n  return lat.test(pair[0]) && long.test(pair[1]);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLocale;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar localeReg = /^[A-Za-z]{2,4}([_-]([A-Za-z]{4}|[\\d]{3}))?([_-]([A-Za-z]{2}|[\\d]{3}))?$/;\n\nfunction isLocale(str) {\n  (0, _assertString.default)(str);\n\n  if (str === 'en_US_POSIX' || str === 'ca_ES_VALENCIA') {\n    return true;\n  }\n\n  return localeReg.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLowercase;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isLowercase(str) {\n  (0, _assertString.default)(str);\n  return str === str.toLowerCase();\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMACAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar macAddress = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nvar macAddressNoSeparators = /^([0-9a-fA-F]){12}$/;\nvar macAddressWithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\n\nfunction isMACAddress(str, options) {\n  (0, _assertString.default)(str);\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n\n  if (options && (options.no_colons || options.no_separators)) {\n    return macAddressNoSeparators.test(str);\n  }\n\n  return macAddress.test(str) || macAddressWithDots.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMagnetURI;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar magnetURI = /^magnet:\\?xt(?:\\.1)?=urn:(?:aich|bitprint|btih|ed2k|ed2khash|kzhash|md5|sha1|tree:tiger):[a-z0-9]{32}(?:[a-z0-9]{8})?($|&)/i;\n\nfunction isMagnetURI(url) {\n  (0, _assertString.default)(url);\n  return magnetURI.test(url.trim());\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMimeType;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  Checks if the provided string matches to a correct Media type format (MIME type)\n\n  This function only checks is the string format follows the\n  etablished rules by the according RFC specifications.\n  This function supports 'charset' in textual media types\n  (https://tools.ietf.org/html/rfc6657).\n\n  This function does not check against all the media types listed\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\n  because of lightness purposes : it would require to include\n  all these MIME types in this librairy, which would weigh it\n  significantly. This kind of effort maybe is not worth for the use that\n  this function has in this entire librairy.\n\n  More informations in the RFC specifications :\n  - https://tools.ietf.org/html/rfc2045\n  - https://tools.ietf.org/html/rfc2046\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\n*/\n// Match simple MIME types\n// NB :\n//   Subtype length must not exceed 100 characters.\n//   This rule does not comply to the RFC specs (what is the max length ?).\nvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+]{1,100}$/i; // eslint-disable-line max-len\n// Handle \"charset\" in \"text/*\"\n\nvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n// Handle \"boundary\" in \"multipart/*\"\n\nvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\nfunction isMimeType(str) {\n  (0, _assertString.default)(str);\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMobilePhone;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar phones = {\n  'am-AM': /^(\\+?374|0)((10|[9|7][0-9])\\d{6}$|[2-4]\\d{7}$)/,\n  'ar-AE': /^((\\+?971)|0)?5[024568]\\d{7}$/,\n  'ar-BH': /^(\\+?973)?(3|6)\\d{7}$/,\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\n  'ar-LB': /^(\\+?961)?((3|81)\\d{6}|7\\d{7})$/,\n  'ar-EG': /^((\\+?20)|0)?1[0125]\\d{8}$/,\n  'ar-IQ': /^(\\+?964|0)?7[0-9]\\d{8}$/,\n  'ar-JO': /^(\\+?962|0)?7[789]\\d{7}$/,\n  'ar-KW': /^(\\+?965)[569]\\d{7}$/,\n  'ar-LY': /^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$/,\n  'ar-MA': /^(?:(?:\\+|00)212|0)[5-7]\\d{8}$/,\n  'ar-OM': /^((\\+|00)968)?(9[1-9])\\d{6}$/,\n  'ar-PS': /^(\\+?970|0)5[6|9](\\d{7})$/,\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\n  'ar-TN': /^(\\+?216)?[2459]\\d{7}$/,\n  'az-AZ': /^(\\+994|0)(5[015]|7[07]|99)\\d{7}$/,\n  'bs-BA': /^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$/,\n  'be-BY': /^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\n  'bg-BG': /^(\\+?359|0)?8[789]\\d{7}$/,\n  'bn-BD': /^(\\+?880|0)1[13456789][0-9]{8}$/,\n  'ca-AD': /^(\\+376)?[346]\\d{5}$/,\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'da-DK': /^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'de-DE': /^((\\+49|0)[1|3])([0|5][0-45-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7,9}$/,\n  'de-AT': /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  'de-CH': /^(\\+41|0)([1-9])\\d{1,9}$/,\n  'de-LU': /^(\\+352)?((6\\d1)\\d{6})$/,\n  'dv-MV': /^(\\+?960)?(7[2-9]|91|9[3-9])\\d{7}$/,\n  'el-GR': /^(\\+?30|0)?(69\\d{8})$/,\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\n  'en-BM': /^(\\+?1)?441(((3|7)\\d{6}$)|(5[0-3][0-9]\\d{4}$)|(59\\d{5}))/,\n  'en-GB': /^(\\+?44|0)7\\d{9}$/,\n  'en-GG': /^(\\+?44|0)1481\\d{6}$/,\n  'en-GH': /^(\\+233|0)(20|50|24|54|27|57|26|56|23|28|55|59)\\d{7}$/,\n  'en-GY': /^(\\+592|0)6\\d{6}$/,\n  'en-HK': /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  'en-MO': /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  'en-IE': /^(\\+?353|0)8[356789]\\d{7}$/,\n  'en-IN': /^(\\+?91|0)?[6789]\\d{9}$/,\n  'en-KE': /^(\\+?254|0)(7|1)\\d{8}$/,\n  'en-KI': /^((\\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$/,\n  'en-MT': /^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,\n  'en-MU': /^(\\+?230|0)?\\d{8}$/,\n  'en-NA': /^(\\+?264|0)(6|8)\\d{7}$/,\n  'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\n  'en-NZ': /^(\\+?64|0)[28]\\d{7,9}$/,\n  'en-PK': /^((00|\\+)?92|0)3[0-6]\\d{8}$/,\n  'en-PH': /^(09|\\+639)\\d{9}$/,\n  'en-RW': /^(\\+?250|0)?[7]\\d{8}$/,\n  'en-SG': /^(\\+65)?[3689]\\d{7}$/,\n  'en-SL': /^(\\+?232|0)\\d{8}$/,\n  'en-TZ': /^(\\+?255|0)?[67]\\d{8}$/,\n  'en-UG': /^(\\+?256|0)?[7]\\d{8}$/,\n  'en-US': /^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\n  'en-ZW': /^(\\+263)[0-9]{9}$/,\n  'en-BW': /^(\\+?267)?(7[1-8]{1})\\d{6}$/,\n  'es-AR': /^\\+?549(11|[2368]\\d)\\d{8}$/,\n  'es-BO': /^(\\+?591)?(6|7)\\d{7}$/,\n  'es-CO': /^(\\+?57)?3(0(0|1|2|4|5)|1\\d|2[0-4]|5(0|1))\\d{7}$/,\n  'es-CL': /^(\\+?56|0)[2-9]\\d{1}\\d{7}$/,\n  'es-CR': /^(\\+506)?[2-8]\\d{7}$/,\n  'es-CU': /^(\\+53|0053)?5\\d{7}/,\n  'es-DO': /^(\\+?1)?8[024]9\\d{7}$/,\n  'es-HN': /^(\\+?504)?[9|8]\\d{7}$/,\n  'es-EC': /^(\\+?593|0)([2-7]|9[2-9])\\d{7}$/,\n  'es-ES': /^(\\+?34)?[6|7]\\d{8}$/,\n  'es-PE': /^(\\+?51)?9\\d{8}$/,\n  'es-MX': /^(\\+?52)?(1|01)?\\d{10,11}$/,\n  'es-PA': /^(\\+?507)\\d{7,8}$/,\n  'es-PY': /^(\\+?595|0)9[9876]\\d{7}$/,\n  'es-SV': /^(\\+?503)?[67]\\d{7}$/,\n  'es-UY': /^(\\+598|0)9[1-9][\\d]{6}$/,\n  'es-VE': /^(\\+?58)?(2|4)\\d{9}$/,\n  'et-EE': /^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\n  'fa-IR': /^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\n  'fi-FI': /^(\\+?358|0)\\s?(4(0|1|2|4|5|6)?|50)\\s?(\\d\\s?){4,8}\\d$/,\n  'fj-FJ': /^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$/,\n  'fo-FO': /^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'fr-BF': /^(\\+226|0)[67]\\d{7}$/,\n  'fr-CM': /^(\\+?237)6[0-9]{8}$/,\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n  'fr-GF': /^(\\+?594|0|00594)[67]\\d{8}$/,\n  'fr-GP': /^(\\+?590|0|00590)[67]\\d{8}$/,\n  'fr-MQ': /^(\\+?596|0|00596)[67]\\d{8}$/,\n  'fr-PF': /^(\\+?689)?8[789]\\d{6}$/,\n  'fr-RE': /^(\\+?262|0|00262)[67]\\d{8}$/,\n  'he-IL': /^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$/,\n  'hu-HU': /^(\\+?36|06)(20|30|31|50|70)\\d{7}$/,\n  'id-ID': /^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$/,\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  'it-SM': /^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$/,\n  'ja-JP': /^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$/,\n  'ka-GE': /^(\\+?995)?(5|79)\\d{7}$/,\n  'kk-KZ': /^(\\+?7|8)?7\\d{9}$/,\n  'kl-GL': /^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'ko-KR': /^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\n  'lt-LT': /^(\\+370|8)\\d{8}$/,\n  'lv-LV': /^(\\+?371)2\\d{7}$/,\n  'ms-MY': /^(\\+?6?01){1}(([0145]{1}(\\-|\\s)?\\d{7,8})|([236789]{1}(\\s|\\-)?\\d{7}))$/,\n  'mz-MZ': /^(\\+?258)?8[234567]\\d{7}$/,\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'ne-NP': /^(\\+?977)?9[78]\\d{8}$/,\n  'nl-BE': /^(\\+?32|0)4\\d{8}$/,\n  'nl-NL': /^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$/,\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'pl-PL': /^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\n  'pt-BR': /^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[2-9]{1}\\d{3}\\-?\\d{4}))$/,\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\n  'pt-AO': /^(\\+244)\\d{9}$/,\n  'ro-RO': /^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/,\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n  'si-LK': /^(?:0|94|\\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\\d{7}$/,\n  'sl-SI': /^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$/,\n  'sk-SK': /^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'sq-AL': /^(\\+355|0)6[789]\\d{6}$/,\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\n  'sv-SE': /^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$/,\n  'tg-TJ': /^(\\+?992)?[5][5]\\d{7}$/,\n  'th-TH': /^(\\+66|66|0)\\d{9}$/,\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\n  'tk-TM': /^(\\+993|993|8)\\d{8}$/,\n  'uk-UA': /^(\\+?38|8)?0\\d{9}$/,\n  'uz-UZ': /^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$/,\n  'vi-VN': /^((\\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$/,\n  'zh-CN': /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/,\n  'dz-BT': /^(\\+?975|0)?(17|16|77|02)\\d{6}$/\n};\n/* eslint-enable max-len */\n// aliases\n\nphones['en-CA'] = phones['en-US'];\nphones['fr-CA'] = phones['en-CA'];\nphones['fr-BE'] = phones['nl-BE'];\nphones['zh-HK'] = phones['en-HK'];\nphones['zh-MO'] = phones['en-MO'];\nphones['ga-IE'] = phones['en-IE'];\nphones['fr-CH'] = phones['de-CH'];\nphones['it-CH'] = phones['fr-CH'];\n\nfunction isMobilePhone(str, locale, options) {\n  (0, _assertString.default)(str);\n\n  if (options && options.strictMode && !str.startsWith('+')) {\n    return false;\n  }\n\n  if (Array.isArray(locale)) {\n    return locale.some(function (key) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  } else if (locale in phones) {\n    return phones[locale].test(str); // alias falsey locale as 'any'\n  } else if (!locale || locale === 'any') {\n    for (var key in phones) {\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(phones);\nexports.locales = locales;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMongoId;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isHexadecimal = _interopRequireDefault(require(\"./isHexadecimal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isMongoId(str) {\n  (0, _assertString.default)(str);\n  return (0, _isHexadecimal.default)(str) && str.length === 24;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMultibyte;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-control-regex */\nvar multibyte = /[^\\x00-\\x7F]/;\n/* eslint-enable no-control-regex */\n\nfunction isMultibyte(str) {\n  (0, _assertString.default)(str);\n  return multibyte.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNumeric;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar numericNoSymbols = /^[0-9]+$/;\n\nfunction isNumeric(str, options) {\n  (0, _assertString.default)(str);\n\n  if (options && options.no_symbols) {\n    return numericNoSymbols.test(str);\n  }\n\n  return new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? _alpha.decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isOctal;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar octal = /^(0o)?[0-7]+$/i;\n\nfunction isOctal(str) {\n  (0, _assertString.default)(str);\n  return octal.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPassportNumber;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Reference:\n * https://en.wikipedia.org/ -- Wikipedia\n * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number\n * https://countrycode.org/ -- Country Codes\n */\nvar passportRegexByCountryCode = {\n  AM: /^[A-Z]{2}\\d{7}$/,\n  // ARMENIA\n  AR: /^[A-Z]{3}\\d{6}$/,\n  // ARGENTINA\n  AT: /^[A-Z]\\d{7}$/,\n  // AUSTRIA\n  AU: /^[A-Z]\\d{7}$/,\n  // AUSTRALIA\n  BE: /^[A-Z]{2}\\d{6}$/,\n  // BELGIUM\n  BG: /^\\d{9}$/,\n  // BULGARIA\n  BR: /^[A-Z]{2}\\d{6}$/,\n  // BRAZIL\n  BY: /^[A-Z]{2}\\d{7}$/,\n  // BELARUS\n  CA: /^[A-Z]{2}\\d{6}$/,\n  // CANADA\n  CH: /^[A-Z]\\d{7}$/,\n  // SWITZERLAND\n  CN: /^G\\d{8}$|^E(?![IO])[A-Z0-9]\\d{7}$/,\n  // CHINA [G=Ordinary, E=Electronic] followed by 8-digits, or E followed by any UPPERCASE letter (except I and O) followed by 7 digits\n  CY: /^[A-Z](\\d{6}|\\d{8})$/,\n  // CYPRUS\n  CZ: /^\\d{8}$/,\n  // CZECH REPUBLIC\n  DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,\n  // GERMANY\n  DK: /^\\d{9}$/,\n  // DENMARK\n  DZ: /^\\d{9}$/,\n  // ALGERIA\n  EE: /^([A-Z]\\d{7}|[A-Z]{2}\\d{7})$/,\n  // ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits\n  ES: /^[A-Z0-9]{2}([A-Z0-9]?)\\d{6}$/,\n  // SPAIN\n  FI: /^[A-Z]{2}\\d{7}$/,\n  // FINLAND\n  FR: /^\\d{2}[A-Z]{2}\\d{5}$/,\n  // FRANCE\n  GB: /^\\d{9}$/,\n  // UNITED KINGDOM\n  GR: /^[A-Z]{2}\\d{7}$/,\n  // GREECE\n  HR: /^\\d{9}$/,\n  // CROATIA\n  HU: /^[A-Z]{2}(\\d{6}|\\d{7})$/,\n  // HUNGARY\n  IE: /^[A-Z0-9]{2}\\d{7}$/,\n  // IRELAND\n  IN: /^[A-Z]{1}-?\\d{7}$/,\n  // INDIA\n  ID: /^[A-C]\\d{7}$/,\n  // INDONESIA\n  IR: /^[A-Z]\\d{8}$/,\n  // IRAN\n  IS: /^(A)\\d{7}$/,\n  // ICELAND\n  IT: /^[A-Z0-9]{2}\\d{7}$/,\n  // ITALY\n  JP: /^[A-Z]{2}\\d{7}$/,\n  // JAPAN\n  KR: /^[MS]\\d{8}$/,\n  // SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]\n  LT: /^[A-Z0-9]{8}$/,\n  // LITHUANIA\n  LU: /^[A-Z0-9]{8}$/,\n  // LUXEMBURG\n  LV: /^[A-Z0-9]{2}\\d{7}$/,\n  // LATVIA\n  LY: /^[A-Z0-9]{8}$/,\n  // LIBYA\n  MT: /^\\d{7}$/,\n  // MALTA\n  MZ: /^([A-Z]{2}\\d{7})|(\\d{2}[A-Z]{2}\\d{5})$/,\n  // MOZAMBIQUE\n  MY: /^[AHK]\\d{8}$/,\n  // MALAYSIA\n  NL: /^[A-Z]{2}[A-Z0-9]{6}\\d$/,\n  // NETHERLANDS\n  PL: /^[A-Z]{2}\\d{7}$/,\n  // POLAND\n  PT: /^[A-Z]\\d{6}$/,\n  // PORTUGAL\n  RO: /^\\d{8,9}$/,\n  // ROMANIA\n  RU: /^\\d{9}$/,\n  // RUSSIAN FEDERATION\n  SE: /^\\d{8}$/,\n  // SWEDEN\n  SL: /^(P)[A-Z]\\d{7}$/,\n  // SLOVANIA\n  SK: /^[0-9A-Z]\\d{7}$/,\n  // SLOVAKIA\n  TR: /^[A-Z]\\d{8}$/,\n  // TURKEY\n  UA: /^[A-Z]{2}\\d{6}$/,\n  // UKRAINE\n  US: /^\\d{9}$/ // UNITED STATES\n\n};\n/**\n * Check if str is a valid passport number\n * relative to provided ISO Country Code.\n *\n * @param {string} str\n * @param {string} countryCode\n * @return {boolean}\n */\n\nfunction isPassportNumber(str, countryCode) {\n  (0, _assertString.default)(str);\n  /** Remove All Whitespaces, Convert to UPPERCASE */\n\n  var normalizedStr = str.replace(/\\s/g, '').toUpperCase();\n  return countryCode.toUpperCase() in passportRegexByCountryCode && passportRegexByCountryCode[countryCode].test(normalizedStr);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPort;\n\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isPort(str) {\n  return (0, _isInt.default)(str, {\n    min: 0,\n    max: 65535\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPostalCode;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// common patterns\nvar threeDigit = /^\\d{3}$/;\nvar fourDigit = /^\\d{4}$/;\nvar fiveDigit = /^\\d{5}$/;\nvar sixDigit = /^\\d{6}$/;\nvar patterns = {\n  AD: /^AD\\d{3}$/,\n  AT: fourDigit,\n  AU: fourDigit,\n  AZ: /^AZ\\d{4}$/,\n  BE: fourDigit,\n  BG: fourDigit,\n  BR: /^\\d{5}-\\d{3}$/,\n  BY: /2[1-4]{1}\\d{4}$/,\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\n  CH: fourDigit,\n  CN: /^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\\d{4}$/,\n  CZ: /^\\d{3}\\s?\\d{2}$/,\n  DE: fiveDigit,\n  DK: fourDigit,\n  DO: fiveDigit,\n  DZ: fiveDigit,\n  EE: fiveDigit,\n  ES: /^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$/,\n  FI: fiveDigit,\n  FR: /^\\d{2}\\s?\\d{3}$/,\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\n  GR: /^\\d{3}\\s?\\d{2}$/,\n  HR: /^([1-5]\\d{4}$)/,\n  HT: /^HT\\d{4}$/,\n  HU: fourDigit,\n  ID: fiveDigit,\n  IE: /^(?!.*(?:o))[A-Za-z]\\d[\\dw]\\s\\w{4}$/i,\n  IL: /^(\\d{5}|\\d{7})$/,\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\n  IR: /\\b(?!(\\d)\\1{3})[13-9]{4}[1346-9][013-9]{5}\\b/,\n  IS: threeDigit,\n  IT: fiveDigit,\n  JP: /^\\d{3}\\-\\d{4}$/,\n  KE: fiveDigit,\n  KR: /^(\\d{5}|\\d{6})$/,\n  LI: /^(948[5-9]|949[0-7])$/,\n  LT: /^LT\\-\\d{5}$/,\n  LU: fourDigit,\n  LV: /^LV\\-\\d{4}$/,\n  LK: fiveDigit,\n  MX: fiveDigit,\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\n  MY: fiveDigit,\n  NL: /^\\d{4}\\s?[a-z]{2}$/i,\n  NO: fourDigit,\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\n  NZ: fourDigit,\n  PL: /^\\d{2}\\-\\d{3}$/,\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n  PT: /^\\d{4}\\-\\d{3}?$/,\n  RO: sixDigit,\n  RU: sixDigit,\n  SA: fiveDigit,\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\n  SG: sixDigit,\n  SI: fourDigit,\n  SK: /^\\d{3}\\s?\\d{2}$/,\n  TH: fiveDigit,\n  TN: fourDigit,\n  TW: /^\\d{3}(\\d{2})?$/,\n  UA: fiveDigit,\n  US: /^\\d{5}(-\\d{4})?$/,\n  ZA: fourDigit,\n  ZM: fiveDigit\n};\nvar locales = Object.keys(patterns);\nexports.locales = locales;\n\nfunction isPostalCode(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in patterns) {\n    return patterns[locale].test(str);\n  } else if (locale === 'any') {\n    for (var key in patterns) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (patterns.hasOwnProperty(key)) {\n        var pattern = patterns[key];\n\n        if (pattern.test(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRFC3339;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\nvar dateFullYear = /[0-9]{4}/;\nvar dateMonth = /(0[1-9]|1[0-2])/;\nvar dateMDay = /([12]\\d|0[1-9]|3[01])/;\nvar timeHour = /([01][0-9]|2[0-3])/;\nvar timeMinute = /[0-5][0-9]/;\nvar timeSecond = /([0-5][0-9]|60)/;\nvar timeSecFrac = /(\\.[0-9]+)?/;\nvar timeNumOffset = new RegExp(\"[-+]\".concat(timeHour.source, \":\").concat(timeMinute.source));\nvar timeOffset = new RegExp(\"([zZ]|\".concat(timeNumOffset.source, \")\"));\nvar partialTime = new RegExp(\"\".concat(timeHour.source, \":\").concat(timeMinute.source, \":\").concat(timeSecond.source).concat(timeSecFrac.source));\nvar fullDate = new RegExp(\"\".concat(dateFullYear.source, \"-\").concat(dateMonth.source, \"-\").concat(dateMDay.source));\nvar fullTime = new RegExp(\"\".concat(partialTime.source).concat(timeOffset.source));\nvar rfc3339 = new RegExp(\"^\".concat(fullDate.source, \"[ tT]\").concat(fullTime.source, \"$\"));\n\nfunction isRFC3339(str) {\n  (0, _assertString.default)(str);\n  return rfc3339.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRgbColor;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar rgbColor = /^rgb\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\)$/;\nvar rgbaColor = /^rgba\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\nvar rgbColorPercent = /^rgb\\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\\)/;\nvar rgbaColorPercent = /^rgba\\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)/;\n\nfunction isRgbColor(str) {\n  var includePercentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  (0, _assertString.default)(str);\n\n  if (!includePercentValues) {\n    return rgbColor.test(str) || rgbaColor.test(str);\n  }\n\n  return rgbColor.test(str) || rgbaColor.test(str) || rgbColorPercent.test(str) || rgbaColorPercent.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSemVer;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _multilineRegex = _interopRequireDefault(require(\"./util/multilineRegex\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\nvar semanticVersioningRegex = (0, _multilineRegex.default)(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\n\nfunction isSemVer(str) {\n  (0, _assertString.default)(str);\n  return semanticVersioningRegex.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSurrogatePair;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n\nfunction isSurrogatePair(str) {\n  (0, _assertString.default)(str);\n  return surrogatePair.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUUID;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar uuid = {\n  1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\n\nfunction isUUID(str, version) {\n  (0, _assertString.default)(str);\n  var pattern = uuid[![undefined, null].includes(version) ? version : 'all'];\n  return !!pattern && pattern.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUppercase;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isUppercase(str) {\n  (0, _assertString.default)(str);\n  return str === str.toUpperCase();\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVariableWidth;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFullWidth = require(\"./isFullWidth\");\n\nvar _isHalfWidth = require(\"./isHalfWidth\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isVariableWidth(str) {\n  (0, _assertString.default)(str);\n  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matches;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction matches(str, pattern, modifiers) {\n  (0, _assertString.default)(str);\n\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n\n  return pattern.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toFloat;\n\nvar _isFloat = _interopRequireDefault(require(\"./isFloat\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toFloat(str) {\n  if (!(0, _isFloat.default)(str)) return NaN;\n  return parseFloat(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar includes = function includes(arr, val) {\n  return arr.some(function (arrVal) {\n    return val === arrVal;\n  });\n};\n\nvar _default = includes;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multilineRegexp;\n\n/**\n * Build RegExp object from an array\n * of multiple/multi-line regexp parts\n *\n * @param {string[]} parts\n * @param {string} flags\n * @return {object} - RegExp object\n */\nfunction multilineRegexp(parts, flags) {\n  var regexpAsStringLiteral = parts.join('');\n  return new RegExp(regexpAsStringLiteral, flags);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction toString(input) {\n  if (_typeof(input) === 'object' && input !== null) {\n    if (typeof input.toString === 'function') {\n      input = input.toString();\n    } else {\n      input = '[object Object]';\n    }\n  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\n    input = '';\n  }\n\n  return String(input);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(8519);\n"],"names":["ValidationMetadata","args","this","groups","each","context","undefined","type","target","propertyName","constraints","constraintCls","validationTypeOptions","validationOptions","message","always","ValidationSchemaToMetadataTransformer","prototype","transform","schema","metadatas","Object","keys","properties","forEach","property","validation","name","options","push","getGlobal","globalThis","global","window","self","isPromise","p","then","MetadataStorage","validationMetadatas","constraintMetadatas","defineProperty","get","length","enumerable","configurable","addValidationSchema","_this","validationMetadata","addValidationMetadata","metadata","addConstraintMetadata","groupByPropertyName","grouped","getTargetValidationMetadatas","targetConstructor","targetSchema","strictGroups","includeMetadataBecauseOfAlwaysOption","excludeMetadataBecauseOfStrictGroupsOption","originalMetadatas","filter","find","group","indexOf","inheritedMetadatas","Function","uniqueInheritedMetadatas","inheritedMetadata","originalMetadata","concat","getTargetValidatorConstraints","getMetadataStorage","classValidatorMetadataStorage","ValidationError","toString","shouldDecorate","hasParent","parentPath","boldStart","boldEnd","propConstraintFailed","join","formattedProperty_1","Number","isInteger","children","map","childError","constructor","ValidationTypes","isValid","key","CUSTOM_VALIDATION","NESTED_VALIDATION","PROMISE_VALIDATION","CONDITIONAL_VALIDATION","WHITELIST","IS_DEFINED","userContainer","userContainerOptions","ValidationUtils","replaceMessageSpecialTokens","validationArguments","messageString","Array","isArray","constraint","index","replace","RegExp","constraintToString","value","targetName","ValidationExecutor","validator","validatorOptions","awaitingPromises","ignoreAsyncValidations","metadataStorage","execute","object","validationErrors","_a","hasValidationMetaData","enableDebugMessages","console","warn","targetMetadatas","groupedMetadatas","forbidUnknownValues","validationError","unknownValue","whitelist","definedMetadatas","Promise","resolvedValue","performValidations","notAllowedProperties","forbidNonWhitelisted","generateValidationError","stripEmptyErrors","errors","error","customValidationMetadatas","nestedValidationMetadatas","conditionalValidationMetadatas","conditionalValidations","customValidations","mapContexts","skipUndefinedProperties","skipNullProperties","skipMissingProperties","nestedValidations","reduce","resultA","resultB","customConstraintMetadata","async","stopAtFirstError","Set","Map","validatedSubValues","convertToArray","val","from","values","subValue","instance","validate","some","validatedSubValue","asyncValidatedSubValues","resolve","asyncValidationIsFinishedPromise","all","flatValidatedValues","every","createValidationError","contexts","assign","_b","validatedValue","promise","customConstraint","getConstraintType","customValidatorMetadata","dismissDefaultMessages","defaultMessage","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","result","done","adopt","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","Validator","objectOrSchemaName","objectOrValidationOptions","maybeValidatorOptions","coreValidate","validateOrReject","validateSync","executor","defaultContainer","class_1","instances","someClass","useContainer","iocContainer","getFromContainer","fallback","fallbackOnErrors","Allow","ConstraintMetadata","registerDecorator","validator_1","CustomConstraint","validationMetadataArgs","buildMessage","impl","eachPrefix","ValidateBy","isDefined","IsDefined","IsOptional","ValidatorConstraint","isAsync","x","toLowerCase","Validate","constraintClass","constraintsOrValidationOptions","maybeValidationOptions","ValidateIf","condition","__assign","s","i","arguments","hasOwnProperty","ValidateNested","opts","ValidatePromise","IS_LATLONG","IsLatLong","IS_LATITUDE","isLatitude","IsLatitude","IS_LONGITUDE","isLongitude","IsLongitude","EQUALS","equals","comparison","Equals","NOT_EQUALS","notEquals","NotEquals","IS_EMPTY","isEmpty","IsEmpty","IS_NOT_EMPTY","isNotEmpty","IsNotEmpty","IS_IN","isIn","possibleValues","possibleValue","IsIn","IS_NOT_IN","isNotIn","IsNotIn","IS_DIVISIBLE_BY","num","String","IsDivisibleBy","IS_POSITIVE","isPositive","IsPositive","IS_NEGATIVE","isNegative","IsNegative","MAX","max","Max","maxValue","MIN","min","Min","minValue","MIN_DATE","minDate","date","Date","getTime","MinDate","MAX_DATE","maxDate","MaxDate","CONTAINS","seed","Contains","NOT_CONTAINS","notContains","NotContains","IS_ALPHA","locale","isAlpha","IsAlpha","IS_ALPHANUMERIC","isAlphanumeric","IsAlphanumeric","IS_DECIMAL","IsDecimal","IS_ASCII","IsAscii","IS_BASE64","IsBase64","IS_BYTE_LENGTH","IsByteLength","IS_CREDIT_CARD","IsCreditCard","IS_CURRENCY","IsCurrency","IS_EMAIL","IsEmail","IS_FQDN","IsFQDN","IS_FULL_WIDTH","isFullWidth","IsFullWidth","IS_HALF_WIDTH","isHalfWidth","IsHalfWidth","IS_VARIABLE_WIDTH","IsVariableWidth","IS_HEX_COLOR","IsHexColor","IS_HEXADECIMAL","IsHexadecimal","isValidationOptions","IS_MAC_ADDRESS","IsMACAddress","optionsOrValidationOptionsArg","validationOptionsArg","IS_IP","version","versionStr","IsIP","IS_PORT","IsPort","IS_ISBN","IsISBN","IS_ISIN","IsISIN","IS_ISO8601","IsISO8601","IS_JSON","IsJSON","IS_JWT","IsJWT","IS_LOWERCASE","IsLowercase","IS_MOBILE_PHONE","isMobilePhone","IsMobilePhone","IS_ISO31661_ALPHA_2","isISO31661Alpha2","IsISO31661Alpha2","IS_ISO31661_ALPHA_3","IsISO31661Alpha3","IS_MONGO_ID","IsMongoId","IS_MULTIBYTE","IsMultibyte","IS_SURROGATE_PAIR","IsSurrogatePair","IS_URL","IsUrl","IS_UUID","IsUUID","IS_FIREBASE_PUSH_ID","isFirebasePushId","test","IsFirebasePushId","IS_UPPERCASE","IsUppercase","IS_LENGTH","Length","isMinLength","isMaxLength","MAX_LENGTH","maxLength","MaxLength","MIN_LENGTH","minLength","MinLength","MATCHES","pattern","modifiers","Matches","modifiersOrAnnotationOptions","func","slice","ParseError","code","_classCallCheck","Constructor","stack","Error","create","VALID_DIGITS","WHITESPACE","VALID_PUNCTUATION","PLUS_CHARS","a","b","split","pa","pb","na","nb","isNaN","_typeof","obj","_defineProperties","props","descriptor","writable","_createClass","protoProps","staticProps","DEFAULT_EXT_PREFIX","CALLING_CODE_REG_EXP","Metadata","validateMetadata","is_object","countries","type_of","setVersion","getCountries","getCountryMetadata","countryCode","nonGeographic","v1","v2","v3","nonGeographical","hasCountry","country","hasCallingCode","callingCode","getCountryCodesForCallingCode","countryCodes","countryCallingCodes","isNonGeographicCallingCode","selectNumberingPlan","numberingPlan","NumberingPlan","getNumberingPlanMetadata","getCountryCodeForCallingCode","countryCallingCode","IDDPrefix","defaultIDDPrefix","nationalNumberPattern","possibleLengths","formats","nationalPrefixForParsing","nationalPrefixTransformRule","leadingDigits","hasTypes","_type","ext","country_phone_code_to_countries","country_calling_codes","chooseCountryByCountryCallingCode","hasSelectedNumberingPlan","globalMetadataObject","getDefaultCountryMetadataForRegion","_getFormats","Format","nationalPrefix","_getNationalPrefixFormattingRule","nationalPrefixFormattingRule","_nationalPrefixForParsing","_getNationalPrefixIsOptionalWhenFormatting","nationalPrefixIsOptionalWhenFormattingInNationalFormat","types","_type2","getType","Type","format","_format","leadingDigitsPatterns","nationalPrefixIsMandatoryWhenFormattingInNationalFormat","usesNationalPrefix","FIRST_GROUP_ONLY_PREFIX_PATTERN","internationalFormat","getCountryCallingCode","isSupportedCountry","v4","getExtensionDigitsPattern","createExtensionPattern","purpose","optionalExtnSuffix","possibleSeparatorsBetweenNumberAndExtLabel","possibleSeparatorsNumberExtLabelNoComma","VALID_PHONE_NUMBER","VALID_PHONE_NUMBER_START_REG_EXP","VALID_PHONE_NUMBER_WITH_EXTENSION","VALID_PHONE_NUMBER_PATTERN","number","EXTN_PATTERN","DIGITS","parseDigit","character","parseDigits","string","_iterator","_isArray","_i","_ref","digit","parseIncompletePhoneNumber","parsePhoneNumberCharacter","prevParsedCharacters","nationalNumber","checkNumberLengthForType","type_info","possible_lengths","mobile_type","mergeArrays","merged","element","sort","actual_length","minimum_length","isPossibleNumber","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_arr","_n","_d","_e","_s","err","_nonIterableRest","matchesEntirely","text","regular_expression","NON_FIXED_LINE_PHONE_TYPES","getNumberType","input","phone","isNumberTypeEqualTo","_NON_FIXED_LINE_PHONE","applyInternationalSeparatorStyle","formattedNumber","trim","FIRST_GROUP_PATTERN","formatNationalNumberUsingFormat","useInternationalFormat","withNationalPrefix","carrierCode","SINGLE_IDD_PREFIX_REG_EXP","_defineProperty","DEFAULT_OPTIONS","formatExtension","extension","_objectSpread","source","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","addExtension","formatNationalNumber","formatRFC3966","_ref2","fromCountry","formatIDD","iddPrefix","getIddPrefix","countryMetadata","formatAs","chooseFormatForNumber","availableFormats","nationalNnumber","lastLeadingDigitsPattern","search","PhoneNumber","_metadata","isCountryCode","setExt","isPossible","isPossiblePhoneNumber","isNonGeographic","isEqual","phoneNumber","formatNational","formatInternational","getURI","CAPTURING_DIGIT_PATTERN","stripIddPrefix","IDDPrefixPattern","matchedGroups","match","extractNationalNumberFromPossiblyIncompleteNumber","prefixPattern","prefixMatch","exec","capturedGroupsCount","hasCapturedGroups","prefixBeforeNationalNumber","possiblePositionOfTheFirstCapturedGroup","extractNationalNumber","_extractNationalNumbe","shouldExtractNationalPrefix","nationalSignificantNumber","extractCountryCallingCodeFromInternationalNumberWithoutPlusSign","possibleShorterNumber","possibleShorterNationalNumber","numberWithoutIDD","_extractCountryCallin","shorterNumber","_countryCallingCode","getCountryByCallingCode","nationalPhoneNumber","possibleCountries","selectCountryFromList","PHONE_NUMBER_START_PATTERN","AFTER_PHONE_NUMBER_END_PATTERN","defaultCountry","_parseInput","parseInput","extract","parseRFC3966","_part$split2","extractFormattedPhoneNumber","throwOnError","startsAt","isViablePhoneNumberStart","withExtensionStripped","extractExtension","start","numberWithoutExtension","matches","formattedPhoneNumber","_parsePhoneNumber","defaultCallingCode","exactCountry","valid","extended","possible","_Array$prototype$slic2","arg_1","arg_2","arg_3","arg_4","isObject","_normalizeArguments","Node","prev","LRUCache","limit","size","head","tail","cache","put","ensureLimit","node","remove","log","clear","RegExpCache","getPatternForRegExp","regExp","lower","upper","trimAfterFirstMatch","regexp","_pZ","pZ","PZ","pNd","_pL","pL","pL_regexp","pSc","pSc_regexp","pMn","pMn_regexp","latinLetterRegexp","isLatinLetter","letter","isInvalidPunctuationSymbol","POSSIBLE","candidate","VALID","containsOnlyValidXChars","STRICT_GROUPING","regExpCache","candidateString","containsMoreThanOneSlashInNationalNumber","isNationalPrefixPresentIfRequired","checkNumberGroupingIsValid","allNumberGroupsRemainGrouped","EXACT_GROUPING","allNumberGroupsAreExactlyPresent","charAtIndex","charAt","charAtNextIndex","util","isNumberMatch","substring","MatchType","NSN_MATCH","getCountryCodeSource","phoneNumberRegion","getRegionCodeForCountryCode","getCountryCode","getMetadataForRegion","getNationalSignificantNumber","formatRule","chooseFormattingPatternForNumber","numberFormats","getNationalPrefixFormattingRule","getNationalPrefixOptionalWhenFormatting","PhoneNumberUtil","formattingRuleHasFirstGroupOnly","rawInputCopy","normalizeDigitsOnly","getRawInput","maybeStripNationalPrefixAndCarrierCode","firstSlashInBodyIndex","secondSlashInBodyIndex","CountryCodeSource","FROM_NUMBER_WITH_PLUS_SIGN","FROM_NUMBER_WITHOUT_PLUS_SIGN","checkGroups","normalizedCandidate","normalizeDigits","formattedNumberGroups","getNationalNumberGroups","alternateFormats","MetadataManager","getAlternateFormatsForCountry","alternateFormat","formattingPattern","formatNsnUsingPattern","rfc3966Format","formatNumber","endIndex","startIndex","candidateGroups","NON_DIGITS_PATTERN","candidateNumberGroupIndex","hasExtension","contains","formattedNumberGroupIndex","endsWith","fromIndex","FROM_DEFAULT_COUNTRY","region","getNddPrefixForRegion","Character","isDigit","getExtension","SECOND_NUMBER_START_PATTERN","parsePreCandidate","SLASH_SEPARATED_DATES","TIME_STAMPS","TIME_STAMPS_SUFFIX_LEADING","isValidPreCandidate","offset","followingText","OPENING_PARENS","CLOSING_PARENS","NON_PARENS","LEAD_CLASS","LEAD_CLASS_LEADING","BRACKET_PAIR_LIMIT","MATCHING_BRACKETS_ENTIRE","PUB_PAGES","isValidCandidate","leniency","previousChar","lastCharIndex","nextChar","EXTN_PATTERNS_FOR_MATCHING","INNER_MATCHES","leadLimit","punctuationLimit","blockLimit","MAX_LENGTH_FOR_NSN","punctuation","digitSequence","PATTERN","UNWANTED_END_CHAR_PATTERN","MAX_SAFE_INTEGER","Math","pow","PhoneNumberMatcher","maxTries","Leniency","parseAndVerify","extractInnerMatch","endsAt","_INNER_MATCHES","isFirstMatch","candidateMatch","innerMatchRegExp","_candidate","_match","candidateIndexGuess","hasNext","state","lastMatch","AsYouTypeState","onCountryChange","onCallingCodeChange","_Object$keys","reset","international","missingPlus","digits","resetNationalSignificantNumber","initCountryAndCallingCode","getNationalDigits","nationalSignificantNumberMatchesInput","complexPrefixBeforeNationalSignificantNumber","setCountry","setCallingCode","startInternationalNumber","appendDigits","nextDigits","appendNationalSignificantNumberDigits","getDigitsWithoutInternationalPrefix","DIGIT_PLACEHOLDER","DIGIT_PLACEHOLDER_MATCHER","repeat","times","cutAndStripNonPairedParens","cutBeforeIndex","stripNonPairedParens","dangling_braces","cleared_string","_i2","_dangling_braces","formatCompleteNumber","shouldTryNationalPrefixFormattingRule","getSeparatorAfterNationalPrefix","formatNationalNumberWithAndWithoutNationalPrefixFormattingRule","useNationalPrefixFormattingRule","_ref3","formattedNationalNumber","isValidFormattedNationalNumber","PatternMatcher","matchTree","PatternParser","parse","allowOverflow","matchedChars","overflow","characters","tree","last","characterString","partialMatch","restCharacters","JSON","stringify","_result","_iterator2","_isArray2","_char","OPERATOR","ILLEGAL_CHARACTER_REGEXP","or","instructions","parsePattern","_this$context$","branches","startContext","endContext","getContext","operator","before","rightPart","oneOfSet","parseOneOfSet","prevValue","charCodeAt","nextValue","fromCharCode","LONGEST_DUMMY_PHONE_NUMBER","NATIONAL_PREFIX_SEPARATORS_PATTERN","CREATE_CHARACTER_CLASS_PATTERN","CREATE_STANDALONE_DIGIT_PATTERN","NON_ALTERING_FORMAT_REG_EXP","AsYouTypeFormatter","isNANP","resetFormat","chosenFormat","template","nationalNumberTemplate","populatedNationalNumberTemplate","populatedNationalNumberTemplatePosition","matchingFormats","narrowDownMatchingFormats","_this2","canFormatCompleteNumber","formattedCompleteNumber","setNationalNumberTemplate","lastIndexOf","formatNationalNumberWithNextDigits","previouslyChosenFormat","newlyChosenFormat","chooseFormat","formatNextNationalNumberDigits","_ref4","_this3","leadingDigitsPatternIndex","formatSuits","formatMatches","leadingDigitsPatternsCount","leadingDigitsPattern","getFormatFormat","_this4","_loop2","_ref5","createTemplateForFormat","_loop","getTemplateForFormat","getInternationalPrefixBeforeCountryCallingCode","_ref6","spacing","getTemplate","internationalPrefix","_ref7","strictPattern","nationalNumberDummyDigits","nationalPrefixIncludedInTemplate","numberFormat","numberFormatWithNationalPrefix","populateTemplateWithDigits","position","_i3","VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN","VALID_FORMATTED_PHONE_NUMBER_PART","AFTER_PHONE_NUMBER_DIGITS_END_PATTERN","COMPLEX_NATIONAL_PREFIX","AsYouTypeParser","onNationalSignificantNumberChange","justLeadingPlus","_extractFormattedDigi","extractFormattedDigitsAndPlus","_extractFormattedDigi4","_extractFormattedDigitsAndPlus","extractedNumber","hasPlus","formattedDigits","_extractFormattedDigi2","inputDigits","hasReceivedThreeLeadingDigits","extractIddPrefix","isWaitingForCountryCallingCode","extractCountryCallingCode","hasExtractedNationalSignificantNumber","extractNationalSignificantNumber","update","couldPossiblyExtractAnotherNationalSignificantNumber","nationalDigits","setState","onExtractedNationalNumber","extractAnotherNationalSignificantNumber","prevNationalSignificantNumber","_extractNationalNumbe2","nationalSignificantNumberIndex","reExtractNationalSignificantNumber","fixMissingPlus","extractCallingCodeAndNationalSignificantNumber","_extractCountryCallin2","newCallingCode","AsYouType","optionsOrDefaultCountry","_this$getCountryAndCa2","getCountryAndCallingCode","_this$parser$input","parser","formattedOutput","determineTheCountryIfNeeded","formatter","getFullNumber","getNonFormattedNumber","isInternational","getCallingCode","getCountry","_getCountry","isCountryCallingCodeAmbiguous","determineTheCountry","prefix","getNonFormattedNationalNumberWithPrefix","_this$state","getNonFormattedTemplate","getNumberValue","_this$state2","getNumber","_this$state3","getNationalNumber","getChars","WHITESPACE_IN_THE_BEGINNING_PATTERN","PUNCTUATION_IN_THE_END_PATTERN","PhoneNumberSearch","parseCandidate","last_match","IS_PHONE_NUMBER","isPhoneNumber","phoneNum","IsPhoneNumber","IS_MILITARY_TIME","isMilitaryTime","IsMilitaryTime","IS_HASH","algorithm","IsHash","IS_ISSN","IsISSN","IS_DATE_STRING","isDateString","IsDateString","IS_BOOLEAN_STRING","isBooleanString","IsBooleanString","IS_NUMBER_STRING","isNumberString","IsNumberString","IS_BASE32","IsBase32","IS_BIC","IsBIC","IS_BTC_ADDRESS","IsBtcAddress","IS_DATA_URI","IsDataURI","IS_EAN","IsEAN","IS_ETHEREUM_ADDRESS","IsEthereumAddress","IS_HSL","IsHSL","IS_IBAN","isIBAN","IsIBAN","IS_IDENTITY_CARD","IsIdentityCard","IS_ISRC","IsISRC","IS_LOCALE","IsLocale","IS_MAGNET_URI","IsMagnetURI","IS_MIME_TYPE","IsMimeType","IS_OCTAL","IsOctal","IS_PASSPORT_NUMBER","IsPassportNumber","IS_POSTAL_CODE","isPostalCode","IsPostalCode","IS_RFC_3339","IsRFC3339","IS_RGB_COLOR","includePercentValues","IsRgbColor","IS_SEM_VER","IsSemVer","IS_BOOLEAN","Boolean","IsBoolean","IS_DATE","isDate","IsDate","IS_NUMBER","isNumber","Infinity","allowInfinity","allowNaN","maxDecimalPlaces","decimalPlaces","isFinite","IsNumber","IS_ENUM","isEnum","entity","k","IsEnum","IS_INT","isInt","IsInt","IS_STRING","isString","IsString","IS_ARRAY","IsArray","IS_OBJECT","IsObject","ARRAY_CONTAINS","arrayContains","array","ArrayContains","ARRAY_NOT_CONTAINS","arrayNotContains","ArrayNotContains","ARRAY_NOT_EMPTY","arrayNotEmpty","ArrayNotEmpty","ARRAY_MIN_SIZE","arrayMinSize","ArrayMinSize","ARRAY_MAX_SIZE","arrayMaxSize","ArrayMaxSize","ARRAY_UNIQUE","arrayUnique","identifier","o","uniqueItems","c","ArrayUnique","identifierOrOptions","IS_NOT_EMPTY_OBJECT","isNotEmptyObject","nullable","propertyValue","IsNotEmptyObject","IS_INSTANCE","isInstance","targetTypeConstructor","IsInstance","targetType","schemaNameOrObject","registerSchema","TroopsController","troops","troopsName","generateRandomNumberBetween","floor","random","sumUpTheTroops","shuffleTroopsName","generateTroops","numberOfTroops","troop","troopIndex","myArgs","process","argv","handler","controller","exports","commaDecimal","dotDecimal","farsiLocales","arabicLocales","englishLocales","decimal","alphanumeric","alpha","ar","he","fa","_locale","_locale2","_i4","str","elem","_assertString","default","_merge","defaulContainsOptions","ignoreCase","_toString","minOccurrences","_interopRequireDefault","__esModule","module","_str","ignore","_alpha","isAscii","ascii","isBIC","_isISO31661Alpha","CountryCodes","has","toUpperCase","isBICReg","isBase32","base32","isBase64","defaultBase64Options","len","urlSafe","urlSafeBase64","notBase64","firstPaddingChar","isBoolean","defaultOptions","loose","looseBooleans","includes","strictBooleans","isBtcAddress","startsWith","bech32","base58","isByteLength","encodeURI","isCreditCard","sanitized","creditCard","tmpNum","shouldDouble","sum","parseInt","isCurrency","currencyRegex","decimal_digits","digits_after_decimal","symbol","m","require_symbol","negative","whole_dollar_amount_with_sep","thousands_separator","whole_dollar_amount","decimal_amount","decimal_separator","require_decimal","allow_decimal","allow_negatives","parens_for_negatives","negative_sign_after_digits","negative_sign_before_digits","allow_negative_sign_placeholder","allow_space_after_symbol","allow_space_after_digits","symbol_after_digits","default_currency_options","isDataURI","data","attributes","shift","schemeAndMediaType","substr","mediaType","validMediaType","validAttribute","validData","isDecimal","default_decimal_options","_includes","blacklist","decimalRegExp","force_decimal","isDivisibleBy","_toFloat","isEAN","actualCheckDigit","validEanRegex","calculateCheckDigit","ean","remainder","char","getPositionWeightThroughLengthAndIndex","acc","partialSum","isEmail","default_email_options","require_display_name","allow_display_name","display_email","splitNameAddress","display_name","validateDisplayName","display_name_without_quotes","ignore_max_length","parts","domain","lower_domain","host_blacklist","user","domain_specific_validation","username","_isByteLength","_user_parts","gmailUserPart","_isFQDN","require_tld","allow_ip_domain","_isIP","noBracketdomain","allow_utf8_local_part","quotedEmailUserUtf8","quotedEmailUser","emailUserUtf8Part","emailUserPart","user_parts","blacklisted_chars","isEthereumAddress","eth","isFQDN","default_fqdn_options","allow_trailing_dot","allow_wildcard","tld","allow_numeric_tld","part","allow_underscores","isFloat","float","parseFloat","lt","gt","locales","fullWidth","isHSL","strippedStr","hslComma","hslSpace","halfWidth","isHash","lengths","md5","md4","sha1","sha256","sha384","sha512","ripemd128","ripemd160","tiger128","tiger160","tiger192","crc32","crc32b","isHexColor","hexcolor","isHexadecimal","hexadecimal","hasValidIbanFormat","isoCountryCode","ibanRegexThroughCountryCode","hasValidIbanChecksum","AD","AE","AL","AT","AZ","BA","BE","BG","BH","BR","BY","CH","CR","CY","CZ","DE","DK","DO","EE","EG","ES","FI","FO","FR","GB","GE","GI","GL","GR","GT","HR","HU","IE","IL","IQ","IR","IS","IT","JO","KW","KZ","LB","LC","LI","LT","LU","LV","MC","MD","ME","MK","MR","MT","MU","MZ","NL","NO","PK","PL","PS","PT","QA","RO","RS","SA","SC","SE","SI","SK","SM","SV","TL","TN","TR","UA","VA","VG","XK","isIP","IPv4AddressRegExp","IPv6AddressRegExp","IPv4SegmentFormat","IPv4AddressFormat","IPv6SegmentFormat","isISBN","checksum","isbn10Maybe","isbn13Maybe","factor","isISIN","isin","double","lo","hi","trunc","_digit","check","validISO31661Alpha2CountriesCodes","isISO31661Alpha3","validISO31661Alpha3CountriesCodes","isISO8601","strictSeparator","iso8601StrictSeparator","iso8601","strict","isValidDate","ordinalMatch","oYear","oDay","year","month","day","monthString","dayString","d","getUTCFullYear","getUTCMonth","getUTCDate","isISRC","isrc","isISSN","testIssn","issn","require_hyphen","case_sensitive","isIdentityCard","validators","_isInt","weightOfDigits","allow_leading_zeroes","modulo","lastDigit","charsValue","X","Y","Z","IN","reverse","lastNumber","k1","k2","TH","LK","heIL","incNum","id","arLY","arTN","zhCN","provincesAndCities","powers","parityBit","checkAddressCode","addressCode","checkBirthDayCode","birDayCode","yyyy","mm","dd","xdata","getFullYear","getMonth","getDate","checkParityBit","idCardNo","getParityBit","id17","power","checkIdCardNo","check15IdCardNo","check18IdCardNo","zhTW","ALPHABET_CODES","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","Q","R","S","T","U","V","W","regex","int","intLeadingZeroes","minCheckPassed","maxCheckPassed","ltCheckPassed","gtCheckPassed","isJSON","default_json_options","primitives","allow_primitives","isJWT","dotSplit","currElem","_isBase","isLatLong","defaultLatLongOptions","pair","checkDMS","latDMS","longDMS","lat","long","isLength","surrogatePairs","isLocale","localeReg","isLowercase","isMACAddress","no_colons","no_separators","macAddressNoSeparators","macAddress","macAddressWithDots","isMagnetURI","url","magnetURI","isMimeType","mimeTypeSimple","mimeTypeText","mimeTypeMultipart","strictMode","phones","isMongoId","_isHexadecimal","isMultibyte","multibyte","isNumeric","no_symbols","numericNoSymbols","isOctal","octal","isPassportNumber","normalizedStr","passportRegexByCountryCode","AM","AR","AU","CA","CN","DZ","ID","JP","KR","LY","MY","RU","SL","US","isPort","patterns","fourDigit","fiveDigit","sixDigit","HT","KE","MX","NP","NZ","PR","SG","TW","ZA","ZM","isRFC3339","rfc3339","timeHour","timeMinute","timeNumOffset","timeOffset","partialTime","fullDate","fullTime","isRgbColor","rgbColor","rgbaColor","rgbColorPercent","rgbaColorPercent","isSemVer","semanticVersioningRegex","isSurrogatePair","surrogatePair","isURL","default_url_options","validate_length","allow_fragments","allow_query_components","protocol","auth","host","hostname","port","port_str","ipv6","require_valid_protocol","protocols","require_protocol","allow_protocol_relative_urls","require_host","disallow_auth","_auth$split2","_unsupportedIterableToArray","minLen","_arrayLikeToArray","password","ipv6_match","wrapped_ipv6","require_port","host_whitelist","checkHost","arr2","isUUID","uuid","isUppercase","isVariableWidth","_isFullWidth","_isHalfWidth","toFloat","_isFloat","NaN","assertString","invalidType","_default","arrVal","merge","defaults","multilineRegexp","flags","regexpAsStringLiteral","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","prop","r","toStringTag","__webpack_exports__"],"sourceRoot":""}